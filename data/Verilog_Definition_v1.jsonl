{"task_id": 53, "completion": "module dividerp1(input wire clk, output wire clk_out);"}
{"task_id": 30, "completion": "module Rotate_Mux_Array\n    #(parameter SWR=26)\n    (\n    input wire [SWR-1:0] Data_i,\n    input wire select_i,\n    output wire [SWR-1:0] Data_o\n    );"}
{"task_id": 22, "completion": "module wdt(input clk, input ena, input cnt, output out);"}
{"task_id": 62, "completion": "module hex_display (    input  [15:0] num,    input         en,    output [6:0] hex0,    output [6:0] hex1,    output [6:0] hex2,    output [6:0] hex3  );"}
{"task_id": 93, "completion": "module sync_signal #(\n    parameter WIDTH=1, \n    parameter N=2\n)(\n    input wire clk,\n    input wire [WIDTH-1:0] in,\n    output wire [WIDTH-1:0] out\n);"}
{"task_id": 24, "completion": "module dividerp1(input wire clk, output wire clk_out);"}
{"task_id": 44, "completion": "module edge_detector(\n    clk,\n    reset_n,\n    in,\n    out,\n    edge_detect\n);"}
{"task_id": 140, "completion": "module sky130_fd_sc_hs__or3b (    output X,    input A,    input B,    input C_N);"}
{"task_id": 55, "completion": "module sky130_fd_sc_lp__invlp (\n    output Y,\n    input  A\n);"}
{"task_id": 149, "completion": "module sky130_fd_sc_hdll__nor2 (\n    input  A,\n    input  B,\n    output Y\n);"}
{"task_id": 194, "completion": "module sky130_fd_sc_lp__busdrivernovlp2 ( output Z, input A, input TE_B );"}
{"task_id": 11, "completion": "module okWireIn_sync (input  wire clk, input  wire okClk, input  wire [112:0] okHE, input  wire [7:0] ep_addr, output reg [31:0] ep_dataout);"}
{"task_id": 5, "completion": "module lo_simulate(\n    pck0, ck_1356meg, ck_1356megb,\n    pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4,\n    adc_d, adc_clk,\n    ssp_frame, ssp_din, ssp_dout, ssp_clk,\n    cross_hi, cross_lo,\n    dbg,\n\t divisor\n);\n    input pck0, ck_1356meg, ck_1356megb;\n    output pwr_lo, pwr_hi, pwr_oe1, pwr_oe2, pwr_oe3, pwr_oe4;\n    input [7:0] adc_d;\n    output adc_clk;\n    input ssp_dout;\n    output ssp_frame, ssp_din, ssp_clk;\n    input cross_hi, cross_lo;\n    output dbg;\n\t input [7:0] divisor;}"}
{"task_id": 2, "completion": "module axi_protocol_converter_v2_1_b2s_rd_cmd_fsm ( input  wire clk, input  wire reset, output wire s_arready, input  wire s_arvalid, input  wire [7:0] s_arlen, output wire m_arvalid, input  wire m_arready, output wire next, input  wire next_pending, input  wire data_ready, output wire a_push, output wire r_push);"}
{"task_id": 109, "completion": "module debouncer(\n    input clk,\n    input I0,\n    input I1,\n    output reg O0,\n    output reg O1\n    );"}
{"task_id": 126, "completion": "module mux(opA,opB,sum,dsp_sel,out);\n\tinput [3:0] opA,opB;\n\tinput [4:0] sum;\n\tinput [1:0] dsp_sel;\n\toutput [3:0] out;"}
{"task_id": 29, "completion": "module pipeline_registers(\n   input clk,\n   input reset_n,\n   input [BIT_WIDTH-1:0] pipe_in,\n   output reg [BIT_WIDTH-1:0] pipe_out\n   );\n\n  parameter BIT_WIDTH = 10,\n            NUMBER_OF_STAGES = 5;"}
{"task_id": 180, "completion": "module sky130_fd_sc_hdll__or4b (    output X,    input A,    input B,    input C,    input D_N);"}
{"task_id": 165, "completion": "module sky130_fd_sc_hdll__a31o (input A1, input A2, input A3, input B1, output X);"}
{"task_id": 3, "completion": "module hex_display (    input  [15:0] num,    input         en,    output [6:0] hex0,    output [6:0] hex1,    output [6:0] hex2,    output [6:0] hex3  );"}
{"task_id": 17, "completion": "module mux(opA,opB,sum,dsp_sel,out); input [3:0] opA,opB; input [4:0] sum; input [1:0] dsp_sel; output [3:0] out;"}
{"task_id": 98, "completion": "module sky130_fd_sc_lp__o2bb2ai (\n    output Y   ,\n    input  A1_N,\n    input  A2_N,\n    input  B1  ,\n    input  B2  ,\n    input  VPWR,\n    input  VGND,\n    input  VPB ,\n    input  VNB\n);"}
{"task_id": 76, "completion": "module hex_display ( input  [15:0] num, input         en, output [6:0] hex0, output [6:0] hex1, output [6:0] hex2, output [6:0] hex3 );"}
{"task_id": 39, "completion": "module sky130_fd_sc_ms__sdlclkp ( input SCE, input CLK, input GATE, output GCLK );"}
{"task_id": 56, "completion": "module NIOS_SYSTEMV3_CH0_THRESH (                                 \n                                  input   [  1: 0] address,       \n                                  input            chipselect,     \n                                  input            clk,           \n                                  input            reset_n,      \n                                  input            write_n,      \n                                  input   [ 31: 0] writedata,     \n                                  output  [ 23: 0] out_port,      \n                                  output  [ 31: 0] readdata       \n                                );"}
{"task_id": 175, "completion": "module FullAdder(    input [3:0] A,    input [3:0] B,    input Operation,    output [3:0] S,    output Cout);"}
{"task_id": 84, "completion": "module sqrt_43 ( clk, ena, radical, q, remainder ); input clk; input ena; input [42:0] radical; output [21:0] q; output [22:0] remainder;"}
{"task_id": 116, "completion": "module sync_signal #(\n    parameter WIDTH=1, // width of the input and output signals\n    parameter N=2 // depth of synchronizer\n)(\n    input wire clk,\n    input wire [WIDTH-1:0] in,\n    output wire [WIDTH-1:0] out\n);"}
{"task_id": 59, "completion": "module ZUMA_TB_wrapper (\n    input reset,\n    input clk,\n    input [NUM_INPUTS-1:0] inputs,\n    output [NUM_OUTPUTS-1:0] outputs\n);"}
{"task_id": 186, "completion": "module sky130_fd_sc_lp__nand3_m (\n    output Y,\n    input  A,\n    input  B,\n    input  C\n);"}
{"task_id": 101, "completion": "module mux(\n        input [3:0] opA, opB,\n        input [4:0] sum,\n        input [1:0] dsp_sel,\n        output [3:0] out\n    );"}
{"task_id": 144, "completion": "module regalu(    input [31:0] Aselect,    input [31:0] Bselect,    input [31:0] Dselect,    input clk,    input [2:0] S,    input Cin,    output [31:0] abus,    output [31:0] bbus,    output [31:0] dbus);"}
{"task_id": 155, "completion": "module multiplexer(q, data, select); output q; input [31:0] data; input [5:0] select;"}
{"task_id": 131, "completion": "module wdt(\n        input clk,\n        input ena,\n        input cnt,\n        output out\n    );"}
{"task_id": 64, "completion": "module decode_cond_mode #(         \n    parameter WORD_WIDTH = 32,           \n    parameter OPCODE_WIDTH = 8,           \n    parameter INST_TYPE_WIDTH = 32        \n)(       \n    input wire [WORD_WIDTH-1:0] w,       \n    input wire [OPCODE_WIDTH-1:0] oc,    \n    output reg [INST_TYPE_WIDTH-1:0] inst, \n    output reg [2:0] decoder_result       \n);"}
{"task_id": 74, "completion": "module ao486_rst_controller(\n   input wire clk_sys,\n   input wire rst,\n   output reg ao486_rst,\n   input wire [1:0] address,\n   input wire write,\n   input wire [31:0] writedata\n);"}
{"task_id": 197, "completion": "module icache_data_ram(\n    input           clk_i,\n    input           rst_i,\n    input  [ 10:0]  addr_i,\n    input  [ 31:0]  data_i,\n    input           wr_i,\n    output [ 31:0]  data_o\n);"}
{"task_id": 170, "completion": "module sky130_fd_sc_hs__dlxtp (Q, D, GATE, VPWR, VGND);"}
{"task_id": 110, "completion": "module var14_multi (A, B, C, D, E, F, G, H, I, J, K, L, M, N, valid); input A, B, C, D, E, F, G, H, I, J, K, L, M, N; output valid;"}
{"task_id": 171, "completion": "module sky130_fd_sc_hdll__nand4bb_1 (\n    Y,\n    A_N,\n    B_N,\n    C,\n    D,\n    VPWR,\n    VGND,\n    VPB,\n    VNB\n);"}
{"task_id": 113, "completion": "module Rotate_Mux_Array\n    #(parameter SWR=26)\n    (\n    input wire [SWR-1:0] Data_i,\n    input wire select_i,\n    output wire [SWR-1:0] Data_o\n    );"}
{"task_id": 195, "completion": "module sky130_fd_sc_hdll__o2bb2a_2 (\n    output X,\n    input  A1_N,\n    input  A2_N,\n    input  B1,\n    input  B2,\n    input  VPWR,\n    input  VGND,\n    input  VPB,\n    input  VNB\n);"}
{"task_id": 94, "completion": "module altera_reset_synchronizer #(\n    parameter ASYNC_RESET = 1,\n    parameter DEPTH       = 2\n)(\n    input   reset_in,\n    input   clk,\n    output  reset_out\n);"}
{"task_id": 21, "completion": "module control(clk,en,dsp_sel,an); input clk, en; output [1:0]dsp_sel; output [3:0]an;"}
{"task_id": 23, "completion": "module altera_avalon_st_pipeline_base (\n                                       clk,\n                                       reset,\n                                       in_ready,\n                                       in_valid,\n                                       in_data,\n                                       out_ready,\n                                       out_valid,\n                                       out_data\n                                       );\n   parameter  SYMBOLS_PER_BEAT  = 1;\n   parameter  BITS_PER_SYMBOL   = 8;\n   parameter  PIPELINE_READY    = 1;\n   localparam DATA_WIDTH = SYMBOLS_PER_BEAT * BITS_PER_SYMBOL;\n   input clk;\n   input reset;\n   output in_ready;\n   input  in_valid;\n   input [DATA_WIDTH-1:0] in_data;\n   input                  out_ready;\n   output                 out_valid;\n   output [DATA_WIDTH-1:0] out_data;"}
{"task_id": 193, "completion": "module ringbuffer #(parameter AW = 8, DW = 48)(input reset,input clock,input read_clock_enable,input write_clock_enable,output [DW-1:0] read_data,input [DW-1:0] write_data,output reg empty,output reg overflow);"}
{"task_id": 6, "completion": "module dyn_pll # (parameter SPEED_MHZ = 25 )(\n\tinput CLKIN_IN,\n\toutput CLKFX1_OUT,\n\toutput CLKFX2_OUT,\n\toutput CLKDV_OUT,\n\toutput DCM_SP_LOCKED_OUT,\n\tinput dcm_progclk,\n\tinput dcm_progdata,\n\tinput dcm_progen,\n\tinput dcm_reset,\n\toutput dcm_progdone,\n\toutput dcm_locked,\n\toutput [2:1] dcm_status\n);"}
{"task_id": 145, "completion": "module sky130_fd_sc_ls__o2bb2ai (\n    Y   ,\n    A1_N,\n    A2_N,\n    B1  ,\n    B2  ,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 159, "completion": "module sky130_fd_sc_hs__sdlclkp (    GCLK,    GATE,    CLK ,    SCE ,    VPWR,    VGND);"}
{"task_id": 92, "completion": "module control( clk, en, dsp_sel, an ); input clk, en; output [1:0] dsp_sel; output [3:0] an;"}
{"task_id": 119, "completion": "module shift_mux_array\n\t#(parameter SWR=26, parameter LEVEL=5)\n    (\n    input wire [SWR-1:0] Data_i,\n    input wire select_i,\n    input wire bit_shift_i,\n    output wire [SWR-1:0] Data_o\n    );"}
{"task_id": 105, "completion": "module altera_reset_synchronizer\n#(\n    parameter ASYNC_RESET = 1,\n    parameter DEPTH       = 2\n)\n(\n    input   reset_in,\n\n    input   clk,\n    output  reset_out\n);"}
{"task_id": 166, "completion": "module uart_tx(\n\tinput wire clk,\n\tinput wire reset,\n\tinput wire tx_start,\n\tinput wire s_tick,\n\tinput wire [7:0] din,\n\toutput reg tx_done_tick,\n\toutput wire tx\n);"}
{"task_id": 111, "completion": "module data_whiting(\n    output [7:0] dout,\n    output next_indicator,\n    input [7:0] din,\n    input indicator,\n    input clk,\n    input reset_n\n);"}
{"task_id": 142, "completion": "module ANN_dexp_64ns_64ns_64_18_full_dsp\n#(parameter\n    ID         = 8,\n    NUM_STAGE  = 18,\n    din0_WIDTH = 64,\n    din1_WIDTH = 64,\n    dout_WIDTH = 64\n)(\n    input  wire                  clk,\n    input  wire                  reset,\n    input  wire                  ce,\n    input  wire [din0_WIDTH-1:0] din0,\n    input  wire [din1_WIDTH-1:0] din1,\n    output wire [dout_WIDTH-1:0] dout\n);"}
{"task_id": 28, "completion": "module uart\n\t#( \n\t\tparameter DBIT = 8,\n\t\tparameter SB_TICK = 16,\n\t\tparameter DVSR = 163,\n\t\tparameter DVSR_BIT = 8,\n\t\tparameter FIFO_W = 4 \n\t)\n\t(\n\t\tinput wire clk, \n\t\tinput wire reset,\n\t\tinput wire rd_uart,\n\t\tinput wire rx, \n\t\tinput wire wr_uart,\n\t\tinput wire [DBIT-1:0] w_data,\n\t\toutput wire rx_empty,\n\t\toutput wire tx_done_tick,\n\t\toutput wire tx,\n\t\toutput wire [DBIT-1:0] r_data\n\t);"}
{"task_id": 191, "completion": "module sky130_fd_sc_hdll__sdfxtp_1 (\n    output Q ,\n    input  CLK ,\n    input  D ,\n    input  SCD ,\n    input  SCE ,\n    input  VPWR,\n    input  VGND,\n    input  VPB ,\n    input  VNB\n);"}
{"task_id": 163, "completion": "module eth_random (MTxClk, Reset, StateJam, StateJam_q, RetryCnt, NibCnt, ByteCnt, RandomEq0, RandomEqByteCnt);\nparameter Tp = 1;\ninput MTxClk;\ninput Reset;\ninput StateJam;\ninput StateJam_q;\ninput [3:0] RetryCnt;\ninput [15:0] NibCnt;\ninput [9:0] ByteCnt;\noutput RandomEq0;\noutput RandomEqByteCnt;"}
{"task_id": 176, "completion": "module axi_axis_tx_core ( dac_clk, dac_rd, dac_valid, dac_data, dma_clk, dma_fs, dma_valid, dma_data, dma_ready, up_rstn, up_clk, up_sel, up_wr, up_addr, up_wdata, up_rdata, up_ack);"}
{"task_id": 115, "completion": "module fifo_1kx16 ( aclr, clock, data, rdreq, wrreq, almost_empty, empty, full, q, usedw );"}
{"task_id": 36, "completion": "module sqrt_pipelined(\n   input clk,\n   input reset_n,\n   input start,\n   input [INPUT_BITS-1:0] radicand,\n   output reg data_valid,\n   output reg [OUTPUT_BITS-1:0] root\n);"}
{"task_id": 139, "completion": "module top(\n    input  wire clk,\n    input  wire [7:0] sw,\n    output wire [7:0] led,\n    input  wire jc1,\n    output wire jc2,\n    input  wire jc3,\n    output wire jc4\n);"}
{"task_id": 188, "completion": "module ALU_Cell_1bit(\n\tA,\n\tB,\n\tA_from_next_bit,\n\tC_in,\n\tFS,\n\tF,\n\tC_out\n);\n\n\tinput wire\tA;\n\tinput wire\tB;\n\tinput wire\tA_from_next_bit;\n\tinput wire\tC_in;\n\tinput wire\t[4:0] FS;\n\toutput wire F;\n\toutput wire C_out;"}
{"task_id": 217, "completion": "module inst_b_e (\n\tinput port_b_1\n);"}
{"task_id": 181, "completion": "module data_path( input [15:0] din16, output [31:0] dout32, input [31:0] control_reg, output [63:0] freq_reg, output [63:0] total_size, input data_path_rst, input clk_50m, input clk_pcie, input adc_clk, input ddr3_fifo_full, output fifo_empty, output fifo_full, output total_size_mannul_reset, output fifo_rd_en );"}
{"task_id": 164, "completion": "module opl3_cpu_wrapper(\n    inout [14:0]DDR_addr,\n    inout [2:0]DDR_ba,\n    inout DDR_cas_n,\n    inout DDR_ck_n,\n    inout DDR_ck_p,\n    inout DDR_cke,\n    inout DDR_cs_n,\n    inout [3:0]DDR_dm,\n    inout [31:0]DDR_dq,\n    inout [3:0]DDR_dqs_n,\n    inout [3:0]DDR_dqs_p,\n    inout DDR_odt,\n    inout DDR_ras_n,\n    inout DDR_reset_n,\n    inout DDR_we_n,\n    inout FIXED_IO_ddr_vrn,\n    inout FIXED_IO_ddr_vrp,\n    inout [53:0]FIXED_IO_mio,\n    inout FIXED_IO_ps_clk,\n    inout FIXED_IO_ps_porb,\n    inout FIXED_IO_ps_srstb,\n    output ac_mclk,\n    output ac_mute_n,\n    input clk125,\n    output i2s_sclk,\n    output i2s_sd,\n    output i2s_ws,\n    inout iic_0_scl_io,\n    inout iic_0_sda_io,\n    output [3:0]led\n);"}
{"task_id": 161, "completion": "module top_nto1_pll_diff_rx_and_tx (\ninput\treset,\ninput\t[5:0]datain_p, datain_n,\ninput\tclkin_p, clkin_n,\noutput\t[5:0]dataout_p, dataout_n,\noutput\tclkout_p, clkout_n);"}
{"task_id": 37, "completion": "module debounce_switch  #(\n    parameter WIDTH=1, \n    parameter N=3, \n    parameter RATE=125000 \n)(\n    input wire clk,\n    input wire rst,\n    input wire [WIDTH-1:0] in,\n    output wire [WIDTH-1:0] out\n);"}
{"task_id": 58, "completion": "module GS_cpld(\n        output wire        config_n,\n        input  wire        status_n,\n        input  wire        conf_done,\n        output wire        cs,\n        input  wire        init_done,\n        input  wire        clk24in,\n        input  wire        clk20in,\n        input  wire        clksel0,\n        input  wire        clksel1,\n        output wire        clkout,\n        input  wire        clkin,\n        input  wire        coldres_n,\n        output wire        warmres_n,\n        input  wire        iorq_n,\n        input  wire        mreq_n,\n        input  wire        rd_n,\n        input  wire        wr_n,\n        inout  wire [ 7:0] d,\n        input  wire        a6,\n        input  wire        a7,\n        input  wire        a10,\n        input  wire        a11,\n        input  wire        a12,\n        input  wire        a13,\n        input  wire        a14,\n        input  wire        a15,\n        output wire        mema14,\n        output wire        mema15,\n        output wire        mema19,\n        inout  wire        romcs_n,\n        inout  wire        memoe_n,\n        inout  wire        memwe_n,\n        input  wire        in_ramcs0_n,\n        input  wire        in_ramcs1_n,\n        input  wire        in_ramcs2_n,\n        input  wire        in_ramcs3_n,\n        output wire        out_ramcs0_n,\n        output wire        out_ramcs1_n,\n        output wire        ra6,\n        output wire        ra7,\n        output wire        ra10,\n        output wire        ra11,\n        output wire        ra12,\n        output wire        ra13,\n        inout  wire [ 7:0] rd\n    );"}
{"task_id": 83, "completion": "module sky130_fd_sc_ms__fa ( COUT, SUM , A , B , CIN , VPWR, VGND, VPB , VNB );"}
{"task_id": 50, "completion": "module control(\n        input clk,\n        input en,\n        output [1:0] dsp_sel,\n        output [3:0] an\n    );"}
{"task_id": 232, "completion": "module top (input clk, input [15:0] sw, output [15:0] led, input rx, output tx);"}
{"task_id": 82, "completion": "module Priority_Codec_32(\n    input wire [25:0] Data_Dec_i,\n    output reg [4:0] Data_Bin_o\n);"}
{"task_id": 226, "completion": "module sky130_fd_sc_hd__ha (output COUT, output SUM, input A, input B);"}
{"task_id": 216, "completion": "module bsg_link_isdr_phy\n\n #(parameter `BSG_INV_PARAM(width_p ))\n\n  (input                clk_i\n  ,output               clk_o\n  ,input  [width_p-1:0] data_i\n  ,output [width_p-1:0] data_o\n  );"}
{"task_id": 130, "completion": "module control(clk,en,dsp_sel,an); input clk, en; output [1:0]dsp_sel; output [3:0]an;"}
{"task_id": 129, "completion": "module fifo_1kx16 (aclr, clock, data, rdreq, wrreq, almost_empty, empty, full, q, usedw); input aclr; input clock; input [15:0] data; input rdreq; input wrreq; output almost_empty; output empty; output full; output [15:0] q; output [9:0] usedw;"}
{"task_id": 125, "completion": "module pipeline_registers(\n   input clk,\n   input reset_n,\n   input [BIT_WIDTH-1:0] pipe_in,\n   output reg [BIT_WIDTH-1:0] pipe_out\n   );\n   parameter BIT_WIDTH = 10,\n             NUMBER_OF_STAGES = 5;"}
{"task_id": 96, "completion": "module FIFO_pixelq_op_img_data_stream_1_V (\n    input clk,\n    input reset,\n    output if_empty_n,\n    input if_read_ce,\n    input if_read,\n    output [DATA_WIDTH - 1:0] if_dout,\n    output if_full_n,\n    input if_write_ce,\n    input if_write,\n    input [DATA_WIDTH - 1:0] if_din\n);\nparameter MEM_STYLE = \"auto\";\nparameter DATA_WIDTH = 32'd8;\nparameter ADDR_WIDTH = 32'd1;\nparameter DEPTH = 32'd2;"}
{"task_id": 26, "completion": "module log2_table(\n        input clk,\n        input trilinear_en,\n        input [31:0] val,\n        output [9:0] log2\n    );"}
{"task_id": 114, "completion": "module axi_infrastructure_v1_1_axic_srl_fifo #(\n  parameter         C_FAMILY     = \"virtex7\",\n  parameter integer C_PAYLOAD_WIDTH = 1,\n  parameter integer C_FIFO_DEPTH = 16\n)(\n  input  wire                        aclk,\n  input  wire                        aresetn,\n  input  wire [C_PAYLOAD_WIDTH-1:0]  s_payload,\n  input  wire                        s_valid,\n  output reg                         s_ready,\n  output wire [C_PAYLOAD_WIDTH-1:0]  m_payload,\n  output reg                         m_valid,\n  input  wire                        m_ready\n);"}
{"task_id": 31, "completion": "module axi_infrastructure_v1_1_axic_srl_fifo #(\n  parameter         C_FAMILY     = \"virtex7\",\n  parameter integer C_PAYLOAD_WIDTH = 1,\n  parameter integer C_FIFO_DEPTH = 16\n)(\n  input  wire                        aclk,\n  input  wire                        aresetn,\n  input  wire [C_PAYLOAD_WIDTH-1:0]  s_payload,\n  input  wire                        s_valid,\n  output reg                         s_ready,\n  output wire [C_PAYLOAD_WIDTH-1:0]  m_payload,\n  output reg                         m_valid,\n  input  wire                        m_ready\n);"}
{"task_id": 268, "completion": "module sky130_fd_sc_hs__sdlclkp (input SCE, input CLK, input GATE, output GCLK);"}
{"task_id": 104, "completion": "module control(clk,en,dsp_sel,an);  input clk, en;  output [1:0] dsp_sel;  output [3:0] an;"}
{"task_id": 248, "completion": "module sky130_fd_sc_lp__xnor3(\n        input wire A,\n        input wire B,\n        input wire C,\n        input wire VPWR,\n        input wire VGND,\n        input wire VPB,\n        input wire VNB,\n        output wire X\n    );"}
{"task_id": 219, "completion": "module sky130_fd_sc_ls__dlymetal6s6s (    output X,    input  A,    input  VPWR,    input  VGND,    input  VPB,    input  VNB );"}
{"task_id": 66, "completion": "module dyn_pll # (parameter SPEED_MHZ = 25 ) (CLKIN_IN, CLKFX1_OUT, CLKFX2_OUT, CLKDV_OUT, DCM_SP_LOCKED_OUT, dcm_progclk, dcm_progdata, dcm_progen, dcm_reset, dcm_progdone, dcm_locked, dcm_status); input CLKIN_IN; wire CLKIN_IBUFG_OUT; wire CLK0_OUT; output CLKFX1_OUT; output CLKFX2_OUT; output CLKDV_OUT; output DCM_SP_LOCKED_OUT; input dcm_progclk; input dcm_progdata; input dcm_progen; input dcm_reset; output dcm_progdone; output dcm_locked; output [2:1] dcm_status;"}
{"task_id": 47, "completion": "module axi_protocol_converter_v2_1_b2s_incr_cmd #(\n        parameter integer C_AXI_ADDR_WIDTH = 32\n    )(\n        input  wire                                 clk           ,\n        input  wire                                 reset         ,\n        input  wire [C_AXI_ADDR_WIDTH-1:0]          axaddr        ,\n        input  wire [7:0]                           axlen         ,\n        input  wire [2:0]                           axsize        ,\n        input  wire                                 axhandshake   ,\n        output wire [C_AXI_ADDR_WIDTH-1:0]          cmd_byte_addr ,\n        input  wire                                 next          ,\n        output reg                                  next_pending\n    );"}
{"task_id": 271, "completion": "module sky130_fd_sc_lp__a2bb2o (input wire A1_N, input wire A2_N, input wire B1, input wire B2, input wire VPWR, input wire VGND, input wire VPB, input wire VNB, output wire X);"}
{"task_id": 244, "completion": "module delayLine #(\n        parameter   DELAY = 0,\n        parameter   WIDTH = 8\n    )(\n        input                   ce,\n        input                   rst,\n        input                   clk,\n        input  [WIDTH - 1:0]    in,\n        output [WIDTH - 1:0]    out\n    );"}
{"task_id": 246, "completion": "module sky130_fd_sc_hvl__or3_1 (X, A, B, C, VPWR, VGND, VPB, VNB);"}
{"task_id": 286, "completion": "module sky130_fd_sc_lp__dfstp (Q, CLK, D, SET_B, VPWR, VGND, VPB, VNB);"}
{"task_id": 241, "completion": "module ip_design_rst_ps7_0_100M_0(slowest_sync_clk, ext_reset_in, aux_reset_in, mb_debug_sys_rst, dcm_locked, mb_reset, bus_struct_reset, peripheral_reset, interconnect_aresetn, peripheral_aresetn);"}
{"task_id": 249, "completion": "module sky130_fd_sc_ls__o21ai ( Y, A1, A2, B1, VPWR, VGND, VPB, VNB );"}
{"task_id": 78, "completion": "module FSM_Add_Subtract(\n\tinput wire clk,\n\tinput wire rst,\n\tinput wire rst_FSM,\n\tinput wire beg_FSM,\n\tinput wire zero_flag_i,\n\tinput wire norm_iteration_i,\n\tinput wire add_overflow_i,\n\tinput wire round_i,\n\toutput wire load_1_o,\n\toutput wire load_2_o,\n\toutput reg load_3_o,\n\toutput reg load_8_o,\n\toutput reg A_S_op_o,\n\toutput reg load_4_o,\n\toutput reg left_right_o,\n\toutput reg bit_shift_o,\n\toutput reg load_5_o,\n\toutput reg load_6_o,\n\toutput reg load_7_o,\n\toutput reg ctrl_a_o,\n\toutput reg [1:0] ctrl_b_o,\n\toutput reg ctrl_b_load_o,\n\toutput reg ctrl_c_o,\n\toutput reg ctrl_d_o,\n\toutput reg rst_int,\n\toutput reg ready);"}
{"task_id": 280, "completion": "module NIOS_onchip_memory2_0 (\n                               input   [ 12: 0] address,\n                               input   [  3: 0] byteenable,\n                               input            chipselect,\n                               input            clk,\n                               input            clken,\n                               input            reset,\n                               input            reset_req,\n                               input            write,\n                               input   [ 31: 0] writedata,\n                               output  [ 31: 0] readdata\n                             );"}
{"task_id": 235, "completion": "module sky130_fd_sc_ms__a41oi_2 ( Y, A1, A2, A3, A4, B1, VPWR, VGND, VPB, VNB );"}
{"task_id": 27, "completion": "module uart_v3 #(\n  parameter DEFAULT_BAUDRATE  = 115200,\n  parameter STOP_BITS         = 1\n)(\n  input               clk,\n  input               rst,\n\n  output  reg         tx,\n  input               transmit,\n  input       [7:0]   tx_byte,\n  output              is_transmitting,\n\n  input               rx,\n  output  reg         rx_error,\n  output  reg [7:0]   rx_byte,\n  output  reg         received,\n  output              is_receiving,\n\n  output      [31:0]  prescaler,\n\n  input               set_clock_div,\n\n  input       [31:0]  user_clock_div,\n  output      [31:0]  default_clock_div\n);"}
{"task_id": 213, "completion": "module Nonoverlapping_template(\n    input wire clk,\n\t input wire rst,\n    input wire rand,\n    output reg pass\n    );"}
{"task_id": 222, "completion": "module Control(input [3:0] opcode,output [2:0] ALUControl,output RegWrite,RegDst,ALUSrc,Branch,MemWrite,MemtoReg);"}
{"task_id": 117, "completion": "module ps2_mouse (\n    input clk,                \n    input reset,              \n    inout ps2_clk,            \n    inout ps2_dat,            \n\n    input  [7:0] the_command,        \n    input        send_command,       \n    output       command_was_sent,   \n    output       error_communication_timed_out,\n\n    output [7:0] received_data,        \n    output       received_data_en,     \n    output       start_receiving_data,\n    output       wait_for_incoming_data\n  );"}
{"task_id": 233, "completion": "module altera_tse_rgmii_in4 (\n        input   aclr,\n        input   [3:0] datain,\n        input   inclock,\n        output  [3:0] dataout_h,\n        output  [3:0] dataout_l\n    );"}
{"task_id": 34, "completion": "module FSM_Add_Subtract (\n    input wire clk,\n    input wire rst,\n    input wire rst_FSM,\n    input wire beg_FSM,\n    input wire zero_flag_i,\n    input wire norm_iteration_i,\n    input wire add_overflow_i,\n    input wire round_i,\n    output wire load_1_o,\n    output wire load_2_o,\n    output reg load_3_o,\n    output reg load_8_o,\n    output reg A_S_op_o,\n    output reg load_4_o,\n    output reg left_right_o,\n    output reg bit_shift_o,\n    output reg load_5_o,\n    output reg load_6_o,\n    output reg load_7_o,\n    output reg ctrl_a_o,\n    output reg [1:0] ctrl_b_o,\n    output reg ctrl_b_load_o,\n    output reg ctrl_c_o,\n    output reg ctrl_d_o,\n    output reg rst_int,\n    output reg ready\n);"}
{"task_id": 289, "completion": "module sky130_fd_sc_ms__ha (output COUT, output SUM, input A, input B);"}
{"task_id": 67, "completion": "module Oper_Start_In # (parameter W = 32 ) (input wire clk, input wire rst, input wire load_a_i, input wire load_b_i, input wire add_subt_i, input wire [W-1:0] Data_X_i, input wire [W-1:0] Data_Y_i, output wire [W-2:0] DMP_o, output wire [W-2:0] DmP_o, output wire zero_flag_o, output wire real_op_o, output wire sign_final_result_o);"}
{"task_id": 127, "completion": "module soc_design_niosII_core_cpu_mult_cell (\n                                             output  [ 31: 0] M_mul_cell_p1,\n                                             output  [ 31: 0] M_mul_cell_p2,\n                                             output  [ 31: 0] M_mul_cell_p3,\n                                             input   [ 31: 0] E_src1,\n                                             input   [ 31: 0] E_src2,\n                                             input            M_en,\n                                             input            clk,\n                                             input            reset_n\n                                          );"}
{"task_id": 292, "completion": "module sky130_fd_sc_ls__o22a_4 ( X, A1, A2, B1, B2, VPWR, VGND, VPB, VNB );"}
{"task_id": 220, "completion": "module Raster_Laser_Projector_Video_In_video_scaler_0 (\n\tclk,\n\treset,\n\tstream_in_data,\n\tstream_in_startofpacket,\n\tstream_in_endofpacket,\n\tstream_in_empty,\n\tstream_in_valid,\n\tstream_out_ready,\n\tstream_in_ready,\n\tstream_out_channel,\n\tstream_out_data,\n\tstream_out_startofpacket,\n\tstream_out_endofpacket,\n\tstream_out_empty,\n\tstream_out_valid\n);"}
{"task_id": 290, "completion": "module ClockDivider (input clk, output clk_vga, output clk_cpu, output clk_2cpu);"}
{"task_id": 231, "completion": "module vga_driver(input clk_50MHz, output vs_vga, output hs_vga, output [2:0] RED, output [2:0] GREEN, output [1:0] BLUE, output [9:0] CURX, output [8:0] CURY, input [7:0] COLOR, output CLK_DATA, input RESET);"}
{"task_id": 135, "completion": "module nukv_Predicate_Eval_Pipeline_v2 #(    parameter MEMORY_WIDTH = 512,    parameter META_WIDTH = 96,    parameter GENERATE_COMMANDS = 1,    parameter SUPPORT_SCANS = 0,    parameter PIPE_DEPTH = 1    )(    input wire         clk,    input wire         rst,    input wire [META_WIDTH+MEMORY_WIDTH-1:0] pred_data,    input wire pred_valid,    input wire pred_scan,    output wire pred_ready,    input  wire [MEMORY_WIDTH-1:0] value_data,    input  wire         value_valid,    input  wire         value_last,    input  wire         value_drop,    output wire         value_ready,    output wire [MEMORY_WIDTH-1:0] output_data,    output wire         output_valid,    output wire         output_last,    output wire         output_drop,    input  wire         output_ready,    input scan_on_outside,    output wire  cmd_valid,    output wire[15:0] cmd_length,    output wire[META_WIDTH-1:0] cmd_meta,    input  wire     cmd_ready,     output wire error_input    );"}
{"task_id": 35, "completion": "module axi_infrastructure_v1_1_axi2vector #(\n  parameter integer C_AXI_PROTOCOL = 0,\n  parameter integer C_AXI_ID_WIDTH = 4,\n  parameter integer C_AXI_ADDR_WIDTH = 32,\n  parameter integer C_AXI_DATA_WIDTH = 32,\n  parameter integer C_AXI_SUPPORTS_USER_SIGNALS = 0,\n  parameter integer C_AXI_SUPPORTS_REGION_SIGNALS = 0,\n  parameter integer C_AXI_AWUSER_WIDTH = 1,\n  parameter integer C_AXI_WUSER_WIDTH = 1,\n  parameter integer C_AXI_BUSER_WIDTH = 1,\n  parameter integer C_AXI_ARUSER_WIDTH = 1,\n  parameter integer C_AXI_RUSER_WIDTH = 1,\n  parameter integer C_AWPAYLOAD_WIDTH = 61,\n  parameter integer C_WPAYLOAD_WIDTH = 73,\n  parameter integer C_BPAYLOAD_WIDTH = 6,\n  parameter integer C_ARPAYLOAD_WIDTH = 61,\n  parameter integer C_RPAYLOAD_WIDTH = 69\n)(\n  input  wire [C_AXI_ID_WIDTH-1:0] s_axi_awid,\n  input  wire [C_AXI_ADDR_WIDTH-1:0] s_axi_awaddr,\n  input  wire [((C_AXI_PROTOCOL == 1) ? 4 : 8)-1:0] s_axi_awlen,\n  input  wire [3-1:0] s_axi_awsize,\n  input  wire [2-1:0] s_axi_awburst,\n  input  wire [((C_AXI_PROTOCOL == 1) ? 2 : 1)-1:0] s_axi_awlock,\n  input  wire [4-1:0] s_axi_awcache,\n  input  wire [3-1:0] s_axi_awprot,\n  input  wire [4-1:0] s_axi_awregion,\n  input  wire [4-1:0] s_axi_awqos,\n  input  wire [C_AXI_AWUSER_WIDTH-1:0] s_axi_awuser,\n  input  wire [C_AXI_ID_WIDTH-1:0] s_axi_wid,\n  input  wire [C_AXI_DATA_WIDTH-1:0] s_axi_wdata,\n  input  wire [C_AXI_DATA_WIDTH/8-1:0] s_axi_wstrb,\n  input  wire s_axi_wlast,\n  input  wire [C_AXI_WUSER_WIDTH-1:0] s_axi_wuser,\n  output wire [C_AXI_ID_WIDTH-1:0] s_axi_bid,\n  output wire [2-1:0] s_axi_bresp,\n  output wire [C_AXI_BUSER_WIDTH-1:0] s_axi_buser,\n  input  wire [C_AXI_ID_WIDTH-1:0] s_axi_arid,\n  input  wire [C_AXI_ADDR_WIDTH-1:0] s_axi_araddr,\n  input  wire [((C_AXI_PROTOCOL == 1) ? 4 : 8)-1:0] s_axi_arlen,\n  input  wire [3-1:0] s_axi_arsize,\n  input  wire [2-1:0] s_axi_arburst,\n  input  wire [((C_AXI_PROTOCOL == 1) ? 2 : 1)-1:0] s_axi_arlock,\n  input  wire [4-1:0] s_axi_arcache,\n  input  wire [3-1:0] s_axi_arprot,\n  input  wire [4-1:0] s_axi_arregion,\n  input  wire [4-1:0] s_axi_arqos,\n  input  wire [C_AXI_ARUSER_WIDTH-1:0] s_axi_aruser,\n  output wire [C_AXI_ID_WIDTH-1:0] s_axi_rid,\n  output wire [C_AXI_DATA_WIDTH-1:0] s_axi_rdata,\n  output wire [2-1:0] s_axi_rresp,\n  output wire s_axi_rlast,\n  output wire [C_AXI_RUSER_WIDTH-1:0] s_axi_ruser,\n  output wire [C_AWPAYLOAD_WIDTH-1:0] s_awpayload,\n  output wire [C_WPAYLOAD_WIDTH-1:0] s_wpayload,\n  input  wire [C_BPAYLOAD_WIDTH-1:0] s_bpayload,\n  output wire [C_ARPAYLOAD_WIDTH-1:0] s_arpayload,\n  input  wire [C_RPAYLOAD_WIDTH-1:0] s_rpayload\n);"}
{"task_id": 255, "completion": "module top\n( \n    input clk_i, \n    input rst_i, \n    output fault_o,\n    output break_o,\n    input intr_i\n);"}
{"task_id": 234, "completion": "module sky130_fd_sc_ms__maj3_2 (\n    X,\n    A,\n    B,\n    C\n);"}
{"task_id": 307, "completion": "module sky130_fd_sc_ms__and3b_1 (\n    output X,\n    input A_N,\n    input B,\n    input C\n);"}
{"task_id": 303, "completion": "module sky130_fd_sc_hd__or4bb (input wire A, input wire B, input wire C_N, input wire D_N, input wire VPWR, input wire VGND, input wire VPB, input wire VNB, output wire X);"}
{"task_id": 91, "completion": "module fifo_1kx16 (aclr, clock, data, rdreq, wrreq, almost_empty, empty, full, q, usedw);"}
{"task_id": 300, "completion": "module sky130_fd_sc_hdll__nor4bb_2 (\n    Y   ,\n    A   ,\n    B   ,\n    C_N ,\n    D_N ,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 228, "completion": "module nextRC(    input mc,    input [`DST_WIDTH-1:0] dst,    input [`DST_LIST_WIDTH-1:0] dstList,    input [`PC_INDEX_WIDTH-1:0] indir,    output [`NUM_PORT * 4 -1:0] nextPPV );"}
{"task_id": 160, "completion": "module fifo_128x128a (\n\taclr,\n\tdata,\n\trdclk,\n\trdreq,\n\twrclk,\n\twrreq,\n\tq,\n\trdempty,\n\trdusedw,\n\twrempty,\n\twrusedw);"}
{"task_id": 185, "completion": "module ii2dcam\n #( parameter                CDEP = `CDEP , // CAM depth (k-entries, power of 2)\n    parameter                PWID = `PWID , // pattern width (9-bits multiply)\n    parameter                PIPE = `PIPE , // pipelined?\n    parameter                REGI = `REGI , // register inputs?\n    parameter                REGO = `REGO ) // register outputs?\n  ( input                    clk          ,  // clock\n    input                    rst          ,  // global reset\n    input                    wEnb         ,  // write enable\n    input  [`log2(CDEP)+9:0] wAddr        ,  // write address\n    input  [PWID*9-1:0]      mPatt        ,  // match pattern\n    input  [PWID*9-1:0]      wPatt        ,  // write pattern\n    output                   match        ,  // match\n    output [`log2(CDEP)+9:0] mAddr        ); // match indicators"}
{"task_id": 310, "completion": "module sky130_fd_sc_ls__nand3b ( Y, A_N, B, C, VPWR, VGND, VPB, VNB );"}
{"task_id": 295, "completion": "module sky130_fd_sc_ls__sdfrbp (input wire D, input wire SCD, input wire SCE, input wire RESET_B, input wire VPWR, input wire VGND, input wire VPB, input wire VNB, output wire Q, output wire Q_N, input wire CLK);"}
{"task_id": 323, "completion": "module ALU(ALUop, Ain, Bin, ALUComputedValue, overflow);\n\tinput [1:0] ALUop;\n\tinput [15:0] Ain, Bin;\n\toutput [15:0] ALUComputedValue;\n\toutput overflow;"}
{"task_id": 284, "completion": "module sky130_fd_sc_ls__sdfxtp_1 (\n    Q,\n    CLK,\n    D,\n    SCD,\n    SCE,\n    VPWR,\n    VGND,\n    VPB,\n    VNB\n);"}
{"task_id": 267, "completion": "module sky130_fd_sc_ls__o31ai ( Y, A1, A2, A3, B1, VPWR, VGND, VPB, VNB );"}
{"task_id": 334, "completion": "module sky130_fd_sc_ms__fill_diode ();"}
{"task_id": 46, "completion": "module vga ( input wb_clk_i, input wb_rst_i, input [15:0] wb_dat_i, output [15:0] wb_dat_o, input [16:1] wb_adr_i, input wb_we_i, input wb_tga_i, input [1:0] wb_sel_i, input wb_stb_i, input wb_cyc_i, output wb_ack_o, output [3:0] vga_red_o, output [3:0] vga_green_o, output [3:0] vga_blue_o, output horiz_sync, output vert_sync, output [17:1] csrm_adr_o, output [1:0] csrm_sel_o, output csrm_we_o, output [15:0] csrm_dat_o, input [15:0] csrm_dat_i );"}
{"task_id": 72, "completion": "module or1200_ic_fsm(\n\tclk,\n\trst,\n\tic_en,\n\ticqmem_cycstb_i,\n\ticqmem_ci_i,\n\ttagcomp_miss,\n\tbiudata_valid,\n\tbiudata_error,\n\tstart_addr,\n\tsaved_addr,\n\ticram_we,\n\tbiu_read,\n\tfirst_hit_ack,\n\tfirst_miss_ack,\n\tfirst_miss_err,\n\tburst,\n\ttag_we\n);"}
{"task_id": 269, "completion": "module register_bank #(    parameter                              DATA_WIDTH       = 16,    parameter                              REGISTER_ID_WIDTH = 4,    parameter                              REGISTER_COUNT   = 8) (    input                               clk_i,    input                               rst_i,    input                               alu_active_i,    input          [DATA_WIDTH-1:0]     alu_result_i,    input          [REGISTER_ID_WIDTH-1:0] choose_register_i1,    input          [REGISTER_ID_WIDTH-1:0] choose_register_i2,    input          [DATA_WIDTH-1:0]     load_value_i,    input                               mem_read_rdy_i,    input                               register_active_i,    input          [DATA_WIDTH-1:0]     register_input,    output reg     [DATA_WIDTH-1:0]     register_output1,    output reg     [DATA_WIDTH-1:0]     register_output2 );"}
{"task_id": 203, "completion": "module fifo_full_block (\n   input           reset,\n   input           wr_clk,\n   input [AW:0]    wr_rd_gray_pointer,\n   input           wr_write,\n   output           wr_fifo_full,\n   output           wr_fifo_progfull,\n   output [AW-1:0]  wr_addr,\n   output [AW:0]    wr_gray_pointer\n);"}
{"task_id": 291, "completion": "module sky130_fd_sc_hs__o21ba (output X, input A1, input A2, input B1_N);"}
{"task_id": 304, "completion": "module sky130_fd_sc_lp__einvp_8 (    Z,    A,    TE,    VPWR,    VGND,    VPB,    VNB );    output Z;    input  A;    input  TE;    input  VPWR;    input  VGND;    input  VPB;    input  VNB;"}
{"task_id": 51, "completion": "module ps2_mouse (\n    input clk,                // Clock Input\n    input reset,              // Reset Input\n    inout ps2_clk,            // PS2 Clock, Bidirectional\n    inout ps2_dat,            // PS2 Data, Bidirectional\n\n    input  [7:0] the_command,        // Command to send to mouse\n    input        send_command,       // Signal to send\n    output       command_was_sent,   // Signal command finished sending\n    output       error_communication_timed_out,\n\n    output [7:0] received_data,        // Received data\n    output       received_data_en,     // If 1 - new data has been received\n    output       start_receiving_data,\n    output       wait_for_incoming_data\n  );"}
{"task_id": 336, "completion": "module sky130_fd_sc_hd__a31oi_2 (\n    Y   ,\n    A1  ,\n    A2  ,\n    A3  ,\n    B1  ,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 335, "completion": "module sky130_fd_sc_lp__busreceiver (\n        input A,\n        input VPWR,\n        input VGND,\n        input VPB,\n        input VNB,\n        output X\n    );"}
{"task_id": 333, "completion": "module bsg_counter_clear_up_one_hot #(parameter `BSG_INV_PARAM(max_val_p), width_lp=max_val_p+1, init_val_p=(width_lp) ' (1)) (input clk_i, input reset_i, input clear_i, input up_i, output [width_lp-1:0] count_r_o);"}
{"task_id": 95, "completion": "module axi_protocol_converter_v2_1_b2s_cmd_translator #(\n        parameter integer C_AXI_ADDR_WIDTH = 32\n    )(\n        input  wire clk,\n        input  wire reset,\n        input  wire [C_AXI_ADDR_WIDTH-1:0] s_axaddr,\n        input  wire [7:0] s_axlen,\n        input  wire [2:0] s_axsize,\n        input  wire [1:0] s_axburst,\n        input  wire s_axhandshake,\n        output wire [C_AXI_ADDR_WIDTH-1:0] m_axaddr,\n        output wire incr_burst,\n        input  wire next,\n        output wire next_pending\n    );"}
{"task_id": 14, "completion": "module zc702_auto_us_df_1 (\n  input wire s_axi_aclk,\n  input wire s_axi_aresetn,\n  input wire [31 : 0] s_axi_awaddr,\n  input wire [7 : 0] s_axi_awlen,\n  input wire [2 : 0] s_axi_awsize,\n  input wire [1 : 0] s_axi_awburst,\n  input wire [0 : 0] s_axi_awlock,\n  input wire [3 : 0] s_axi_awcache,\n  input wire [2 : 0] s_axi_awprot,\n  input wire [3 : 0] s_axi_awregion,\n  input wire [3 : 0] s_axi_awqos,\n  input wire s_axi_awvalid,\n  output wire s_axi_awready,\n  input wire [31 : 0] s_axi_wdata,\n  input wire [3 : 0] s_axi_wstrb,\n  input wire s_axi_wlast,\n  input wire s_axi_wvalid,\n  output wire s_axi_wready,\n  output wire [1 : 0] s_axi_bresp,\n  output wire s_axi_bvalid,\n  input wire s_axi_bready,\n  input wire [31 : 0] s_axi_araddr,\n  input wire [7 : 0] s_axi_arlen,\n  input wire [2 : 0] s_axi_arsize,\n  input wire [1 : 0] s_axi_arburst,\n  input wire [0 : 0] s_axi_arlock,\n  input wire [3 : 0] s_axi_arcache,\n  input wire [2 : 0] s_axi_arprot,\n  input wire [3 : 0] s_axi_arregion,\n  input wire [3 : 0] s_axi_arqos,\n  input wire s_axi_arvalid,\n  output wire s_axi_arready,\n  output wire [31 : 0] s_axi_rdata,\n  output wire [1 : 0] s_axi_rresp,\n  output wire s_axi_rlast,\n  output wire s_axi_rvalid,\n  input wire s_axi_rready,\n  output wire [31 : 0] m_axi_awaddr,\n  output wire [7 : 0] m_axi_awlen,\n  output wire [2 : 0] m_axi_awsize,\n  output wire [1 : 0] m_axi_awburst,\n  output wire [0 : 0] m_axi_awlock,\n  output wire [3 : 0] m_axi_awcache,\n  output wire [2 : 0] m_axi_awprot,\n  output wire [3 : 0] m_axi_awregion,\n  output wire [3 : 0] m_axi_awqos,\n  output wire m_axi_awvalid,\n  input wire m_axi_awready,\n  output wire [63 : 0] m_axi_wdata,\n  output wire [7 : 0] m_axi_wstrb,\n  output wire m_axi_wlast,\n  output wire m_axi_wvalid,\n  input wire m_axi_wready,\n  input wire [1 : 0] m_axi_bresp,\n  input wire m_axi_bvalid,\n  output wire m_axi_bready,\n  output wire [31 : 0] m_axi_araddr,\n  output wire [7 : 0] m_axi_arlen,\n  output wire [2 : 0] m_axi_arsize,\n  output wire [1 : 0] m_axi_arburst,\n  output wire [0 : 0] m_axi_arlock,\n  output wire [3 : 0] m_axi_arcache,\n  output wire [2 : 0] m_axi_arprot,\n  output wire [3 : 0] m_axi_arregion,\n  output wire [3 : 0] m_axi_arqos,\n  output wire m_axi_arvalid,\n  input wire m_axi_arready,\n  input wire [63 : 0] m_axi_rdata,\n  input wire [1 : 0] m_axi_rresp,\n  input wire m_axi_rlast,\n  input wire m_axi_rvalid,\n  output wire m_axi_rready\n);"}
{"task_id": 124, "completion": "module nonrestore_div #(\n\tparameter\tNUMERATOR_WIDTH\t\t= 64,\n\tparameter\tDENOMINATOR_WIDTH\t= 64\n)(\n\tinput\t\t\t\t\t\tclk,\n\tinput\t\t\t\t\t\tclr,\n\tinput\t\t[NUMERATOR_WIDTH\t- 1\t: 0]\tnumer_in,\n\tinput\t\t[DENOMINATOR_WIDTH - 1\t: 0]\tdenom_in,\n\toutput\treg\t[NUMERATOR_WIDTH\t- 1\t: 0]\tquot_out,\n\toutput\treg\t[DENOMINATOR_WIDTH - 1: 0]\trem_out,\n\toutput\treg\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trdy_out\n);"}
{"task_id": 277, "completion": "module NewHammingDecoder(\n        input [6:0] H,\n        output [3:0] D\n    );"}
{"task_id": 319, "completion": "module irq(\n\tinput WR_ACK,\n\tinput [2:0] ACK_BITS,\n\tinput RESET_IRQ,\n\tinput TIMER_IRQ,\n\tinput VBL_IRQ,\n\tinput CLK,\n\toutput IPL0,\n\toutput IPL1\n);"}
{"task_id": 351, "completion": "module soc_system_sysid_qsys (               // inputs:                address,                clock,                reset_n,               // outputs:                readdata             ); output  [ 31: 0] readdata; input            address; input            clock; input            reset_n; wire    [ 31: 0] readdata;"}
{"task_id": 340, "completion": "module MC6502Shifter (input [7:0] i_data, input i_rotate, input i_right, input i_c, output [7:0] o_data, output o_n, output o_z, output o_c);"}
{"task_id": 360, "completion": "module sky130_fd_sc_ms__fahcin (input  A, input  B, input  CIN, output COUT, output SUM);"}
{"task_id": 288, "completion": "module Player\n#( parameter\n    SMALL   = 40,\n    BIG     = 80\n)\n(\n    input wire [9:0] xpos,\n    input wire [8:0] ypos,\n    input wire direction,\n    input wire size,\n    input wire fire,\n    input wire [9:0] hcount_in,\n    input wire hsync_in,\n    input wire [9:0] vcount_in,\n    input wire vsync_in,\n    input wire blnk_in,\n    input wire rst,\n    input wire clk,\n    input wire [23:0] rgb_in,\n    input wire [23:0] rom_data,\n    \n    output reg [10:0] rom_addr,\n    output reg [9:0] hcount_out,\n    output reg hsync_out,\n    output reg [9:0] vcount_out,\n    output reg vsync_out,\n    output reg [23:0] rgb_out,\n    output reg blnk_out\n);"}
{"task_id": 305, "completion": "module mux8way16(a, b, c, d, e, f, g, h, sel, out);\n    input [15:0] a, b, c, d, e, f, g, h;\n    input [2:0] sel;\n    output reg [15:0] out;"}
{"task_id": 321, "completion": "module axi_ad6676_channel (\n  input           adc_clk,\n  input           adc_rst,\n  input   [31:0]  adc_data,\n  input           adc_or,\n  output  [31:0]  adc_dfmt_data,\n  output          adc_enable,\n  output          up_adc_pn_err,\n  output          up_adc_pn_oos,\n  output          up_adc_or,\n  input           up_rstn,\n  input           up_clk,\n  input           up_wreq,\n  input   [13:0]  up_waddr,\n  input   [31:0]  up_wdata,\n  output          up_wack,\n  input           up_rreq,\n  input   [13:0]  up_raddr,\n  output  [31:0]  up_rdata,\n  output          up_rack);"}
{"task_id": 342, "completion": "module sky130_fd_sc_ls__and4b_2 (\n    X,\n    A_N,\n    B,\n    C,\n    D,\n    VPWR,\n    VGND,\n    VPB,\n    VNB\n);"}
{"task_id": 367, "completion": "module sky130_fd_sc_hdll__muxb16to1 (\n    Z,\n    D,\n    S\n);"}
{"task_id": 212, "completion": "module uc(input wire clock,reset,z, input wire [1:0] id_out, input wire [5:0] opcode, output reg s_inc, s_inm, we3, rwe1, rwe2, rwe3, rwe4, sec, sece, s_es, s_rel, swe, s_ret, output wire [2:0] op);"}
{"task_id": 349, "completion": "module qm_fetch(\n    input wire [31:0] di_PC,\n    output reg [31:0] do_IR,\n    output reg [31:0] do_NextPC,\n    output wire [31:0] icache_address,\n    input wire icache_hit,\n    input wire icache_should_stall,\n    input wire [31:0] icache_data\n);"}
{"task_id": 381, "completion": "module sky130_fd_sc_lp__a2111oi ( Y, A1, A2, B1, C1, D1 );"}
{"task_id": 361, "completion": "module sky130_fd_sc_hs__a21oi (input VPWR, input VGND, output Y, input A1, input A2, input B1);"}
{"task_id": 263, "completion": "module sky130_fd_sc_hdll__and2_6 (X, A, B, VPWR, VGND, VPB, VNB);"}
{"task_id": 373, "completion": "module forward_mem_stage(mem_wb_op,mem_wb_regA,mem_wb_regC,ex_mem_op,ex_mem_regA,F3,mem_wb_CCR_write,ex_mem_CCR_write);"}
{"task_id": 382, "completion": "module sky130_fd_sc_hs__a221o (\n    VPWR,\n    VGND,\n    X   ,\n    A1  ,\n    A2  ,\n    B1  ,\n    B2  ,\n    C1\n);"}
{"task_id": 205, "completion": "module TX_PLL (input areset, input inclk0, output c0, output locked);"}
{"task_id": 379, "completion": "module sky130_fd_sc_lp__iso1n (\n    output X,\n    input A,\n    input SLEEP_B\n);"}
{"task_id": 396, "completion": "module sky130_fd_sc_hd__clkdlybuf4s18 (output X, input A);"}
{"task_id": 324, "completion": "module RegFileWW (rd1data,rd2data,wrdata,rd1addr,rd2addr,wraddr,rd1en,rd2en,wren,wrbyteen,clk);"}
{"task_id": 302, "completion": "module prueba_lectura_rtc_2(\n    input wire clk, reset,\n    input wire sw,\n    inout [7:0]dato,\n    output wire AD, CS, WR, RD,\n    output [7:0] RGB,\n    output hsync, vsync\n);"}
{"task_id": 344, "completion": "module sfifo_144x256 (\n\taclr,\n\tclock,\n\tdata,\n\trdreq,\n\twrreq,\n\tempty,\n\tfull,\n\tq);\n\n\tinput\t aclr;\n\tinput\t clock;\n\tinput\t[143:0]  data;\n\tinput\t rdreq;\n\tinput\t wrreq;\n\toutput\t empty;\n\toutput\t full;\n\toutput\t[143:0]  q;"}
{"task_id": 402, "completion": "module sky130_fd_sc_ms__sedfxbp (    output Q,    output Q_N,    input CLK,    input D,    input DE,    input SCD,    input SCE);"}
{"task_id": 391, "completion": "module sky130_fd_sc_ms__nor3b_4 (    Y   ,    A   ,    B   ,    C_N ,    VPWR,    VGND,    VPB ,    VNB  );    output Y   ;    input  A   ;    input  B   ;    input  C_N ;    input  VPWR;    input  VGND;    input  VPB ;    input  VNB ;"}
{"task_id": 401, "completion": "module sky130_fd_sc_hs__a41o (\n    output X   ,\n    input  A1  ,\n    input  A2  ,\n    input  A3  ,\n    input  A4  ,\n    input  B1  ,\n    input  VPWR,\n    input  VGND\n);"}
{"task_id": 387, "completion": "module sky130_fd_sc_lp__a2bb2oi (  Y, A1_N, A2_N, B1, B2, VPWR, VGND, VPB, VNB );"}
{"task_id": 327, "completion": "module arbiter_ibus(\n   input wire [wb_adr_width-1:0] wbm_adr_o,\n   input wire [wb_dat_width-1:0] wbm_dat_o,\n   input wire [3:0] wbm_sel_o,\n   input wire wbm_we_o,\n   input wire wbm_cyc_o,\n   input wire wbm_stb_o,\n   input wire [2:0] wbm_cti_o,\n   input wire [1:0] wbm_bte_o,\n   output wire [wb_dat_width-1:0] wbm_dat_i,\n   output wire wbm_ack_i,\n   output wire wbm_err_i,\n   output wire wbm_rty_i,\n   output wire [wb_adr_width-1:0] wbs0_adr_i,\n   output wire [wb_dat_width-1:0] wbs0_dat_i,\n   output wire [3:0] wbs0_sel_i,\n   output wire wbs0_we_i,\n   output wire wbs0_cyc_i,\n   output wire wbs0_stb_i,\n   output wire [2:0] wbs0_cti_i,\n   output wire [1:0] wbs0_bte_i,\n   input wire [wb_dat_width-1:0] wbs0_dat_o,\n   input wire wbs0_ack_o,\n   input wire wbs0_err_o,\n   input wire wbs0_rty_o,\n   output wire [wb_adr_width-1:0] wbs1_adr_i,\n   output wire [wb_dat_width-1:0] wbs1_dat_i,\n   output wire [3:0] wbs1_sel_i,\n   output wire wbs1_we_i,\n   output wire wbs1_cyc_i,\n   output wire wbs1_stb_i,\n   output wire [2:0] wbs1_cti_i,\n   output wire [1:0] wbs1_bte_i,\n   input wire [wb_dat_width-1:0] wbs1_dat_o,\n   input wire wbs1_ack_o,\n   input wire wbs1_err_o,\n   input wire wbs1_rty_o,\n   input wire wb_clk,\n   input wire wb_rst\n   );"}
{"task_id": 318, "completion": "module cdc #(parameter integer DW = 1, parameter integer FF = 4, parameter integer SS = 2, parameter RI = 1, parameter RO = 1)(input  wire          ffi_clk, input  wire          ffi_rst, input  wire [DW-1:0] ffi_dat, input  wire          ffi_vld, output wire          ffi_rdy, input  wire          ffo_clk, input  wire          ffo_rst, output wor  [DW-1:0] ffo_dat, output wire          ffo_vld, input  wire          ffo_rdy);"}
{"task_id": 362, "completion": "module bsg_fifo_1r1w_small_hardened #(parameter `BSG_INV_PARAM(width_p), parameter `BSG_INV_PARAM(els_p), parameter ready_THEN_valid_p = 0)(input clk_i, input reset_i, input v_i, output ready_o, input [width_p-1:0] data_i, output v_o, output [width_p-1:0] data_o, input yumi_i);"}
{"task_id": 378, "completion": "module sky130_fd_sc_lp__inv_4 (    Y,    A,    VPWR,    VGND,    VPB,    VNB );"}
{"task_id": 377, "completion": "module sky130_fd_sc_ms__udp_mux_4to2(  input wire A0,  input wire A1,  input wire A2,  input wire A3,  input wire S0,  input wire S1,  output wire X);"}
{"task_id": 389, "completion": "module stack(clk, rst, pop, push, wr, mem_fault, rd);\n\tparameter width = 'd16;\n\tparameter depth = 'd256;\n\tparameter add_width = 'd8;\n\tinput wire clk;\n\tinput wire rst;\n\tinput wire pop;\n\tinput wire push;\n\tinput wire [width-1:0] wr;\n\toutput reg mem_fault;\n\toutput reg [width-1:0] rd;\n\treg [add_width-1:0] stk_loc;\n\treg [width-1:0] rd_out;\n\treg [width-1:0] mem_arr [0:depth-1];"}
{"task_id": 352, "completion": "module spu_lsurpt (\n        output [63:0] spu_lsurpt_ldxa_data_out,\n        output [122:0] spu_lsurpt_ldst_pckt_out,\n        output [134:0] spu_lsurpt_cpx_data_out,\n        input [63:0] spu_lsurpt_ldxa_data_in,\n        input [122:0] spu_lsurpt_ldst_pckt_in,\n        input [134:0] spu_lsurpt_cpx_data_in);"}
{"task_id": 388, "completion": "module spi #( parameter AW = 32, parameter PW = 104, parameter UREGS = 13 ) ( input nreset, input clk, input hw_en, output spi_irq, input access_in, input [PW-1:0] packet_in, input wait_in, output access_out, output [PW-1:0] packet_out, output wait_out, output m_sclk, output m_mosi, output m_ss, input m_miso, input s_sclk, input s_mosi, input s_ss, output s_miso );"}
{"task_id": 337, "completion": "module altera_up_av_config_auto_init_ob_adv7180 ( rom_address, rom_data ); input [5: 0] rom_address; output [26: 0] rom_data;"}
{"task_id": 266, "completion": "module displayIK_7seg_16(\n  input  wire        CLK,\n  input  wire        RSTN,\n  input  wire [15:0] data0,\n  input  wire [15:0] data1,\n  input  wire [15:0] data2,\n  input  wire [15:0] data3,\n  input  wire [15:0] data4,\n  input  wire [15:0] data5,\n  input  wire [15:0] data6,\n  input  wire [15:0] data7,\n  input  wire [15:0] data8,\n  input  wire [15:0] data9,\n  input  wire [15:0] data10,\n  input  wire [15:0] data11,\n  input  wire [15:0] data12,\n  input  wire [15:0] data13,\n  input  wire [15:0] data14,\n  input  wire [15:0] data15,\n  output wire [7:0]  SEG_A,\n  output wire [7:0]  SEG_B,\n  output wire [7:0]  SEG_C,\n  output wire [7:0]  SEG_D,\n  output wire [7:0]  SEG_E,\n  output wire [7:0]  SEG_F,\n  output wire [7:0]  SEG_G,\n  output wire [7:0]  SEG_H,\n  output wire [8:0]  SEG_SEL\n);"}
{"task_id": 418, "completion": "module sky130_fd_sc_hdll__muxb16to1 (\n    input  [15:0] D,\n    output        Z,\n    input  [15:0] S\n);"}
{"task_id": 405, "completion": "module sky130_fd_sc_hs__einvn_1 (\n    A   ,\n    TE_B,\n    Z   ,\n    VPWR,\n    VGND\n);"}
{"task_id": 230, "completion": "module mem_arbiter ( input clock_i, input reset_i, output reg [22:0] adr_o, output [15:0] dat_o, output [1:0] dm_o, output reg rd_o, output reg wr_o, output reg enable_o, input busy_i, input valid_i, input req1_i, output reg ack1_o, input [22:0] adr1_i, input [15:0] dat1_i, input [1:0] dm1_i, input rd1_i, input wr1_i, input req2_i, output reg ack2_o, input [22:0] adr2_i, input [15:0] dat2_i, input [1:0] dm2_i, input rd2_i, input wr2_i, input req3_i, output reg ack3_o, input [22:0] adr3_i, input [15:0] dat3_i, input [1:0] dm3_i, input rd3_i, input wr3_i, input req4_i, output reg ack4_o, input [22:0] adr4_i, input [15:0] dat4_i, input [1:0] dm4_i, input rd4_i, input wr4_i );"}
{"task_id": 408, "completion": "module sky130_fd_sc_ms__o311ai_4 ( Y, A1, A2, A3, B1, C1, VPWR, VGND, VPB, VNB );"}
{"task_id": 414, "completion": "module sky130_fd_sc_lp__clkdlybuf4s50 (\n    input  A,\n    output X\n);"}
{"task_id": 70, "completion": "module MiniAlu ( input wire Clock, input wire Reset, output wire [7:0] oLed, output wire VGA_HSYNC, output wire VGA_VSYNC, output wire VGA_RED, output wire VGA_GREEN, output wire VGA_BLUE );"}
{"task_id": 253, "completion": "module SGMII_PORT(\n    input wire clk,\n    input wire ammc_clk,\n    input wire reset,\n    input wire sgmii_clk,\n    input wire out2_pkt_wrreq,\n    input wire [133:0] out2_pkt,\n    output wire out2_pkt_almost_full,\n    input wire out2_valid_wrreq,\n    input wire out2_valid,\n    output wire out_pkt_wrreq,\n    output wire [133:0] out_pkt,\n    input wire out_pkt_almostfull,\n    output wire out_valid_wrreq,\n    output wire out_valid,\n    output wire pkt_receive_add,\n    output wire pkt_discard_add,\n    output wire pkt_send_add,\n    input wire ref_clk,\n    output wire txp,\n    input wire rxp,\n    input wire [7:0] address,\n    input wire write,\n    input wire read,\n    input wire [31:0] writedata,\n    output wire [31:0] readdata,\n    output wire waitrequest,\n    input wire reconfig_clk\n);"}
{"task_id": 316, "completion": "module register_sync #(\n  parameter reg_width = 16,\n  parameter reg_preset = {reg_width{1'b0}},\n  parameter resync_stages = 2\n) (\n  clk,\n  clk_en,\n  nrst,\n  reg_i,\n  reg_o\n);\n\ninput clk;\ninput clk_en;\ninput nrst;\n\ninput [reg_width-1:0] reg_i;\noutput [reg_width-1:0] reg_o;"}
{"task_id": 412, "completion": "module altera_reset_controller\n#(\n    parameter NUM_RESET_INPUTS        = 6,\n    parameter OUTPUT_RESET_SYNC_EDGES = \"deassert\",\n    parameter SYNC_DEPTH              = 2\n)\n(\n    input reset_in0,\n    input reset_in1,\n    input reset_in2,\n    input reset_in3,\n    input reset_in4,\n    input reset_in5,\n    input reset_in6,\n    input reset_in7,\n    input reset_in8,\n    input reset_in9,\n    input reset_in10,\n    input reset_in11,\n    input reset_in12,\n    input reset_in13,\n    input reset_in14,\n    input reset_in15,\n\n    input  clk,\n    output reset_out\n);"}
{"task_id": 400, "completion": "module sky130_fd_sc_ls__clkinv_4 ( Y, A, VPWR, VGND, VPB, VNB );"}
{"task_id": 251, "completion": "module CPU (clk, reset, pc, inst, Addr, Data_I, Data_O, WE, ACK, STB, debug_next_pc);"}
{"task_id": 429, "completion": "module sky130_fd_sc_ms__clkinv (    Y   ,    A   ,    VPWR,    VGND,    VPB ,    VNB );"}
{"task_id": 422, "completion": "module sky130_fd_sc_ms__a21bo (    X   ,    A1  ,    A2  ,    B1_N); output X; input A1; input A2; input B1_N;"}
{"task_id": 133, "completion": "module axi_crossbar_v2_1_addr_decoder #(parameter C_FAMILY = \"none\", parameter integer C_NUM_TARGETS = 2, parameter integer C_NUM_TARGETS_LOG = 1, parameter integer C_NUM_RANGES = 1, parameter integer C_ADDR_WIDTH = 32, parameter integer C_TARGET_ENC = 0, parameter integer C_TARGET_HOT = 1, parameter integer C_REGION_ENC = 0, parameter [C_NUM_TARGETS*C_NUM_RANGES*64-1:0] C_BASE_ADDR = {C_NUM_TARGETS*C_NUM_RANGES*64{1'b1}}, parameter [C_NUM_TARGETS*C_NUM_RANGES*64-1:0] C_HIGH_ADDR = {C_NUM_TARGETS*C_NUM_RANGES*64{1'b0}}, parameter [C_NUM_TARGETS:0] C_TARGET_QUAL = {C_NUM_TARGETS{1'b1}}, parameter integer C_RESOLUTION = 0, parameter integer C_COMPARATOR_THRESHOLD = 6) (input wire [C_ADDR_WIDTH-1:0] ADDR, output wire [C_NUM_TARGETS-1:0] TARGET_HOT, output wire [C_NUM_TARGETS_LOG-1:0] TARGET_ENC, output wire MATCH, output wire [3:0] REGION);"}
{"task_id": 311, "completion": "module top_ASCCI(\n    input clk,\n    input [76:0] string,\n    input new_string,\n    input [7:0] dir,\n    output [15:0] datoram,\n    output [6:0] efect,\n    output run_efect\n);"}
{"task_id": 261, "completion": "module zc702_get_0_0 ( val_r_ap_vld, ap_clk, ap_rst_n, ap_start, ap_done, ap_idle, ap_ready, ap_return, m_axi_gmem_AWADDR, m_axi_gmem_AWLEN, m_axi_gmem_AWSIZE, m_axi_gmem_AWBURST, m_axi_gmem_AWLOCK, m_axi_gmem_AWREGION, m_axi_gmem_AWCACHE, m_axi_gmem_AWPROT, m_axi_gmem_AWQOS, m_axi_gmem_AWVALID, m_axi_gmem_AWREADY, m_axi_gmem_WDATA, m_axi_gmem_WSTRB, m_axi_gmem_WLAST, m_axi_gmem_WVALID, m_axi_gmem_WREADY, m_axi_gmem_BRESP, m_axi_gmem_BVALID, m_axi_gmem_BREADY, m_axi_gmem_ARADDR, m_axi_gmem_ARLEN, m_axi_gmem_ARSIZE, m_axi_gmem_ARBURST, m_axi_gmem_ARLOCK, m_axi_gmem_ARREGION, m_axi_gmem_ARCACHE, m_axi_gmem_ARPROT, m_axi_gmem_ARQOS, m_axi_gmem_ARVALID, m_axi_gmem_ARREADY, m_axi_gmem_RDATA, m_axi_gmem_RRESP, m_axi_gmem_RLAST, m_axi_gmem_RVALID, m_axi_gmem_RREADY, data, key, val_r );"}
{"task_id": 427, "completion": "module sky130_fd_sc_hd__lpflow_clkinvkapwr_4 (    Y,    A,    KAPWR,    VPWR ,    VGND ,    VPB  ,    VNB );"}
{"task_id": 264, "completion": "module k7_mBuf_128x72(  clk,  rst,  din,  wr_en,  rd_en,  dout,  full,  empty,  prog_full );  input clk;  input rst;  input [71 : 0] din;  input wr_en;  input rd_en;  output [71 : 0] dout;  output full;  output empty;  output prog_full;"}
{"task_id": 435, "completion": "module sky130_fd_sc_lp__and3 (    output X,    input  A,    input  B,    input  C,    input  VPWR,    input  VGND,    input  VPB,    input  VNB );"}
{"task_id": 25, "completion": "module Decodificador(\n   input [6:0] Cuenta,\n\toutput reg [7:0] catodo1,catodo2,catodo3,catodo4\n);"}
{"task_id": 386, "completion": "module alu_mul (\n\tinput [7:0] dataa,\n\tinput [7:0] datab,\n\toutput [15:0] result\n);"}
{"task_id": 16, "completion": "module altera_avalon_sc_fifo #(\n    parameter SYMBOLS_PER_BEAT  = 1,\n    parameter BITS_PER_SYMBOL   = 8,\n    parameter FIFO_DEPTH        = 16,\n    parameter CHANNEL_WIDTH     = 0,\n    parameter ERROR_WIDTH       = 0,\n    parameter USE_PACKETS       = 0,\n    parameter USE_FILL_LEVEL    = 0,\n    parameter USE_STORE_FORWARD = 0,\n    parameter USE_ALMOST_FULL_IF = 0,\n    parameter USE_ALMOST_EMPTY_IF = 0,\n    parameter EMPTY_LATENCY     = 3,\n    parameter USE_MEMORY_BLOCKS = 1,\n    parameter DATA_WIDTH  = SYMBOLS_PER_BEAT * BITS_PER_SYMBOL,\n    parameter EMPTY_WIDTH = log2ceil(SYMBOLS_PER_BEAT)\n)(\n    input                       clk,\n    input                       reset,\n    input [DATA_WIDTH-1: 0]     in_data,\n    input                       in_valid,\n    input                       in_startofpacket,\n    input                       in_endofpacket,\n    input [((EMPTY_WIDTH>0) ? (EMPTY_WIDTH-1):0) : 0]     in_empty,\n    input [((ERROR_WIDTH>0) ? (ERROR_WIDTH-1):0) : 0]     in_error,\n    input [((CHANNEL_WIDTH>0) ? (CHANNEL_WIDTH-1):0): 0]  in_channel,\n    output                      in_ready,\n    output [DATA_WIDTH-1 : 0]   out_data,\n    output reg                  out_valid,\n    output                      out_startofpacket,\n    output                      out_endofpacket,\n    output [((EMPTY_WIDTH>0) ? (EMPTY_WIDTH-1):0) : 0]    out_empty,\n    output [((ERROR_WIDTH>0) ? (ERROR_WIDTH-1):0) : 0]    out_error,\n    output [((CHANNEL_WIDTH>0) ? (CHANNEL_WIDTH-1):0): 0] out_channel,\n    input                       out_ready,\n    input [(USE_STORE_FORWARD ? 2 : 1) : 0]   csr_address,\n    input                       csr_write,\n    input                       csr_read,\n    input [31 : 0]              csr_writedata,\n    output reg [31 : 0]         csr_readdata,\n    output  wire                almost_full_data,\n    output  wire                almost_empty_data\n);"}
{"task_id": 326, "completion": "module game_text(\n    input wire clk, \n    input wire [1:0] ball,\n    input wire [3:0] dig0, dig1,\n    input wire [9:0] pix_x, pix_y,\n    output wire [3:0] text_on,\n    output reg [2:0] text_rgb\n);"}
{"task_id": 409, "completion": "module peripheral_ultrsnd (clk , reset , d_in , cs , addr , rd , wr, d_out, echo, done, trigger, [15:0]distance);"}
{"task_id": 446, "completion": "module sky130_fd_sc_lp__a221oi ( Y , A1 , A2 , B1 , B2 , C1 , VPWR, VGND, VPB , VNB );"}
{"task_id": 423, "completion": "module sky130_fd_sc_lp__clkbuflp_4 ( X , A , VPWR, VGND, VPB , VNB );"}
{"task_id": 407, "completion": "module main(CLOCK_50, KEY, LEDR, SW, UART_RXD, UART_TXD);\n    input CLOCK_50;\n    input KEY[3:0];\n    output [17:0] LEDR;\n    input [17:0] SW;\n    input UART_RXD;\n    output UART_TXD;"}
{"task_id": 404, "completion": "module machine( inc_pc, load_acc, load_pc, rd, wr, load_ir, datactl_ena, halt, clk1, zero, ena, opcode );"}
{"task_id": 350, "completion": "module statusLED (\n\tinput nReset,\n\tinput clock,\n\t\n\t// Outputs\n\toutput reg [7:0] leds\n);"}
{"task_id": 61, "completion": "module main(clk, led, nConfig, epp_nReset, pport_data, nWrite, nWait, nDataStr, nAddrStr, dout, din, step, dir);\nparameter W=10;\nparameter F=11;\nparameter T=4;\ninput clk;\noutput led, nConfig;\ninout [7:0] pport_data;\ninput nWrite;\noutput nWait;\ninput nDataStr, nAddrStr, epp_nReset;\n\ninput [15:0] din;\n\nreg Spolarity;\nreg[13:0] real_dout; output [13:0] dout = do_tristate ? 14'bZ : real_dout; \nwire[3:0] real_step; output [3:0] step = do_tristate ? 4'bZ : real_step ^ {4{Spolarity}};\nwire[3:0] real_dir; output [3:0] dir = do_tristate ? 4'bZ : real_dir;"}
{"task_id": 437, "completion": "module sky130_fd_sc_hdll__a32oi (Y, A1, A2, A3, B1, B2);"}
{"task_id": 452, "completion": "module sky130_fd_sc_hd__a32oi ( Y , A1, A2, A3, B1, B2 );"}
{"task_id": 438, "completion": "module Adder64(\n    input [63:0] A,\n    input [63:0] B,\n    input C0,\n    output [3:0] P,\n    output [3:0] G,\n    output [63:0] sum,\n    output SF,\n    output CF,\n    output OF,\n    output PF,\n    output ZF\n);"}
{"task_id": 345, "completion": "module sky130_fd_sc_hs__nor2b (\n    VPWR,\n    VGND,\n    Y   ,\n    A   ,\n    B_N\n);"}
{"task_id": 430, "completion": "module romsel(\n\tinput [3:0] selector_i,\n\toutput [7:0] d_o,\n\tinput [7:0] d0_i,\n\tinput [7:0] d1_i,\n\tinput [7:0] d2_i,\n\tinput [7:0] d3_i,\n\tinput [7:0] d4_i,\n\tinput [7:0] d5_i,\n\tinput [7:0] d6_i,\n\tinput [7:0] d7_i,\n\tinput [7:0] d8_i,\n\tinput [7:0] d9_i,\n\tinput [7:0] d10_i,\n\tinput [7:0] d11_i,\n\tinput [7:0] d12_i,\n\tinput [7:0] d13_i,\n\tinput [7:0] d14_i,\n\tinput [7:0] d15_i\n);"}
{"task_id": 465, "completion": "module sky130_fd_sc_ls__dlymetal6s2s_1 ( X, A, VPWR, VGND, VPB, VNB );"}
{"task_id": 208, "completion": "module io_bus(\n   input wire         clk_sys,\n   input wire         rst,\n   input wire [15:0]  ao486_avalon_io_address,\n   output wire        ao486_avalon_io_waitrequest,\n   input wire [3:0]   ao486_avalon_io_byteenable,\n   input wire         ao486_avalon_io_read,\n   output wire [31:0] ao486_avalon_io_readdata,\n   output wire        ao486_avalon_io_readdatavalid,\n   input wire         ao486_avalon_io_write,\n   input wire [31:0]  ao486_avalon_io_writedata,\n   output wire [3:0]  vga_io_b_address,\n   output wire        vga_io_b_write,\n   output wire [7:0]  vga_io_b_writedata,\n   output wire        vga_io_b_read,\n   input wire [7:0]   vga_io_b_readdata,\n   output wire [3:0]  vga_io_c_address,\n   output wire        vga_io_c_write,\n   output wire [7:0]  vga_io_c_writedata,\n   output wire        vga_io_c_read,\n   input wire [7:0]   vga_io_c_readdata,\n   output wire [3:0]  vga_io_d_address,\n   output wire        vga_io_d_write,\n   output wire [7:0]  vga_io_d_writedata,\n   output wire        vga_io_d_read,\n   input wire [7:0]   vga_io_d_readdata,\n   output wire [2:0]  ps2_io_address,\n   output wire        ps2_io_write,\n   output wire [7:0]  ps2_io_writedata,\n   output wire        ps2_io_read,\n   input wire [7:0]   ps2_io_readdata,\n   output wire [3:0]  ps2_sysctl_address,\n   output wire        ps2_sysctl_write,\n   output wire [7:0]  ps2_sysctl_writedata,\n   output wire        ps2_sysctl_read,\n   input wire [7:0]   ps2_sysctl_readdata,\n   output wire [1:0]  pit_io_address,\n   output wire        pit_io_write,\n   output wire [7:0]  pit_io_writedata,\n   output wire        pit_io_read,\n   input wire [7:0]   pit_io_readdata,\n   output wire        rtc_io_address,\n   output wire        rtc_io_write,\n   output wire [7:0]  rtc_io_writedata,\n   output wire        rtc_io_read,\n   input wire [7:0]   rtc_io_readdata,\n   output wire        pic_master_address,\n   output wire        pic_master_write,\n   output wire [7:0]  pic_master_writedata,\n   output wire        pic_master_read,\n   input wire [7:0]   pic_master_readdata,\n   output wire        pic_slave_address,\n   output wire        pic_slave_write,\n   output wire [7:0]  pic_slave_writedata,\n   output wire        pic_slave_read,\n   input wire [7:0]   pic_slave_readdata,\n   output wire        hdd_io_address,\n   output wire        hdd_io_write,\n   output wire [31:0] hdd_io_writedata,\n   output wire        hdd_io_read,\n   input wire [31:0]  hdd_io_readdata,\n   output wire [3:0]  hdd_io_byteenable,\n   output wire        ide_3f6_write,\n   output wire [7:0]  ide_3f6_writedata,\n   output wire        ide_3f6_read,\n   input wire [7:0]   ide_3f6_readdata\n);"}
{"task_id": 399, "completion": "module butterfly1_8(    input enable,    input signed [17:0] i_0,    input signed [17:0] i_1,    input signed [17:0] i_2,    input signed [17:0] i_3,    input signed [17:0] i_4,    input signed [17:0] i_5,    input signed [17:0] i_6,    input signed [17:0] i_7,    output signed [18:0] o_0,    output signed [18:0] o_1,    output signed [18:0] o_2,    output signed [18:0] o_3,    output signed [18:0] o_4,    output signed [18:0] o_5,    output signed [18:0] o_6,    output signed [18:0] o_7);"}
{"task_id": 463, "completion": "module cpx_databuf_ca(\n   output [144:0]  sctag_cpx_data_buf_pa,\n   input  [144:0]  sctag_cpx_data_pa\n);"}
{"task_id": 450, "completion": "module sky130_fd_sc_hd__dlrtp ( Q, RESET_B, D, GATE );"}
{"task_id": 102, "completion": "module processing_system7_bfm_v2_0_5_unused_ports();"}
{"task_id": 448, "completion": "module sky130_fd_sc_lp__nand2b ("}
{"task_id": 442, "completion": "module sky130_fd_sc_hs__a2bb2o (\n    VPWR,\n    VGND,\n    X,\n    A1_N,\n    A2_N,\n    B1,\n    B2\n);"}
{"task_id": 474, "completion": "module sky130_fd_sc_hs__dlrbn_1 (\n    RESET_B,\n    D      ,\n    GATE_N ,\n    Q      ,\n    Q_N    ,\n    VPWR   ,\n    VGND\n);"}
{"task_id": 477, "completion": "module sky130_fd_sc_hd__or3 (    output X ,    input  A ,    input  B ,    input  C ,    input  VPWR,    input  VGND,    input  VPB ,    input  VNB );"}
{"task_id": 398, "completion": "module up_busif (\n  input           up_rstn,\n  input           up_clk,\n  input           upif_sel,\n  input           upif_rwn,\n  input   [31:0]  upif_addr,\n  input   [31:0]  upif_wdata,\n  output          upif_wack,\n  output  [31:0]  upif_rdata,\n  output          upif_rack,\n  output          up_sel,\n  output          up_wr,\n  output  [13:0]  up_addr,\n  output  [31:0]  up_wdata,\n  input   [31:0]  up_rdata,\n  input           up_ack,\n  output  [31:0]  pid);"}
{"task_id": 455, "completion": "module sky130_fd_sc_hd__o21a_4 (X, A1, A2, B1, VPWR, VGND, VPB, VNB);"}
{"task_id": 482, "completion": "module sky130_fd_sc_hdll__mux2_1 (\n    output X,\n    input  A0,\n    input  A1,\n    input  S,\n    input  VPWR,\n    input  VGND,\n    input  VPB,\n    input  VNB\n);"}
{"task_id": 483, "completion": "module sky130_fd_sc_hs__or3b_2 (    output X,    input  A,    input  B,    input  C_N,    input  VPWR,    input  VGND);"}
{"task_id": 472, "completion": "module tawas_rcn_master(\n    input rst,\n    input clk,\n    input [68:0] rcn_in,\n    output [68:0] rcn_out,\n    input cs,\n    input [4:0] seq,\n    output busy,\n    input wr,\n    input [3:0] mask,\n    input [23:0] addr,\n    input [31:0] wdata,\n    output rdone,\n    output wdone,\n    output [4:0] rsp_seq,\n    output [3:0] rsp_mask,\n    output [23:0] rsp_addr,\n    output [31:0] rsp_data\n);"}
{"task_id": 441, "completion": "module aurora_64b66b_25p4G_TX_LL_DATAPATH (\n     input     [0:63]     s_axi_tx_tdata,\n     input                s_axi_tx_tready,\n     input                s_axi_tx_tvalid,\n     input                s_axi_tx_tlast,\n     output               TX_PE_DATA_V,\n     output    [0:63]     TX_PE_DATA,\n     input                CHANNEL_UP,\n     input                USER_CLK\n );"}
{"task_id": 458, "completion": "module mpemu(\n    input wire clk,\n    input wire [23:0] mpcand_i,\n    input wire [23:0] mplier_i,\n    output wire [27:0] mprod_o);"}
{"task_id": 492, "completion": "module mpemu(\n    input wire clk,\n    input wire [23:0] mpcand_i,\n    input wire [23:0] mplier_i,\n    output wire [27:0] mprod_o\n);"}
{"task_id": 491, "completion": "module sky130_fd_sc_hd__bufbuf (input wire A, input wire VPWR, input wire VGND, input wire VPB, input wire VNB, output wire X);"}
{"task_id": 487, "completion": "module sky130_fd_sc_hs__sdfxtp (\n    VPWR,\n    VGND,\n    Q   ,\n    CLK ,\n    D   ,\n    SCD ,\n    SCE\n);"}
{"task_id": 364, "completion": "module lname_mbus_member_ctrl (input RESETn, input CIN, input DIN, input COUT_FROM_BUS, input DOUT_FROM_BUS, output COUT, output DOUT, input SLEEP_REQ, input WAKEUP_REQ, output MBC_ISOLATE, output MBC_ISOLATE_B, output MBC_RESET, output MBC_RESET_B, output MBC_SLEEP, output MBC_SLEEP_B, input CLR_EXT_INT, output EXTERNAL_INT, input ADDR_WR_EN, input ADDR_CLR_B, input [3:0] ADDR_IN, output [3:0] ADDR_OUT, output ADDR_VALID, input LRC_SLEEP, input MBUS_BUSY);"}
{"task_id": 420, "completion": "module all_case (     input clk_in,     input rst,     input pa,     input pb,     input pc,     input ddd,     input ddd0,     input [1:0] sell,     output clk0,     output clk1,     output clk2,     output clk3,     output rst0,     output rst1,     output rst2,     output rst3,     output p0,     output p1,     output p2,     output p00,     output p01,     output p02,     output ps,     output pd,     output ph,     output df,     output df_0,     output [1:0] sel_o );"}
{"task_id": 436, "completion": "module axis_async_fifo_64 #(\n    parameter ADDR_WIDTH = 12,\n    parameter DATA_WIDTH = 64,\n    parameter KEEP_WIDTH = (DATA_WIDTH/8)\n)(\n    input  wire                   input_clk,\n    input  wire                   input_rst,\n    input  wire [DATA_WIDTH-1:0]  input_axis_tdata,\n    input  wire [KEEP_WIDTH-1:0]  input_axis_tkeep,\n    input  wire                   input_axis_tvalid,\n    output wire                   input_axis_tready,\n    input  wire                   input_axis_tlast,\n    input  wire                   input_axis_tuser,\n    input  wire                   output_clk,\n    input  wire                   output_rst,\n    output wire [DATA_WIDTH-1:0]  output_axis_tdata,\n    output wire [KEEP_WIDTH-1:0]  output_axis_tkeep,\n    output wire                   output_axis_tvalid,\n    input  wire                   output_axis_tready,\n    output wire                   output_axis_tlast,\n    output wire                   output_axis_tuser\n);"}
{"task_id": 471, "completion": "module riscv_core_ex (    input                                       clk,    input                                       rstn,    //CT interface    input  [31:0]                               ct_ex_op1_st2,    input  [31:0]                               ct_ex_op2_st2,    //ID interface    input  [9:0]                                id_ex_funct,    input                                       id_ex_mux1_cntl,    input  [31:0]                               id_ex_pc,    input                                       id_ex_mux2_cntl,    input  [31:0]                               id_ex_immed,    //MEM interface    output                                      ex_mem_result);"}
{"task_id": 485, "completion": "module bw_clk_cl_sctag_cmp (\n   // Outputs\n   dbginit_l, cluster_grst_l, rclk, so, \n   // Inputs\n   gclk, cluster_cken, arst_l, grst_l, adbginit_l, gdbginit_l, si, \n   se\n   );\n\ninput       gclk;\ninput       cluster_cken;\ninput       arst_l;\ninput       grst_l;\ninput       adbginit_l;\ninput       gdbginit_l;\noutput      dbginit_l;\noutput      cluster_grst_l;\noutput      rclk;\n\ninput       si;\ninput       se;\noutput      so;"}
{"task_id": 500, "completion": "module sky130_fd_sc_hvl__udp_dlatch$PR (input wire D, input wire RESET, output wire Q, input wire GATE);"}
{"task_id": 495, "completion": "module pll(\n\tinput wire refclk,\n\tinput wire rst,\n\toutput wire outclk_0,\n\toutput wire locked\n);"}
{"task_id": 479, "completion": "module iobdg_1r2w_vec (\n   dout, dout_vec,\n   clk, rst_l, tx_en, rd_a, wr1_a, wr2_a, din1, din2, wen1, wen2\n   );\n\n   parameter WIDTH = 32;\n   parameter INDEX = 5;\n\n   input clk;\n   input rst_l;\n   input tx_en;\n   input [INDEX-1:0] rd_a;\n   input [INDEX-1:0] wr1_a;\n   input [INDEX-1:0] wr2_a;\n   input din1;\n   input din2;\n   input wen1;\n   input wen2;\n   output dout;\n   output [WIDTH-1:0] dout_vec;"}
{"task_id": 459, "completion": "module Ram(\n  clka,\n  wea,\n  addra,\n  dina,\n  douta\n);\n\ninput clka;\ninput [0 : 0] wea;\ninput [13 : 0] addra;\ninput [31 : 0] dina;\noutput [31 : 0] douta;"}
{"task_id": 516, "completion": "module sky130_fd_sc_hs__dlygate4sd3 (output X, input A, input VPWR, input VGND);"}
{"task_id": 510, "completion": "module sky130_fd_sc_ls__ha_4 ( COUT, SUM , A   , B   , VPWR, VGND, VPB , VNB );"}
{"task_id": 515, "completion": "module Rectifier ( y, y_dx, x ); output signed [15:0] y; reg signed [15:0] y; output signed [15:0] y_dx; reg signed [15:0] y_dx; input signed [15:0] x;"}
{"task_id": 431, "completion": "module top( input SDK_CLK, input SDK_RSTN, input [7:0] SDK_FIFO_CH, output SDK_FIFO_RD, input [15:0] SDK_FIFO_DI, input SDK_FIFO_Empty, input SDK_FIFO_AlmostEmpty, output SDK_FIFO_WR, output [15:0] SDK_FIFO_DO, input SDK_FIFO_Full, input SDK_FIFO_AlmostFull, output SDK_Interrupt, input core0_UART_RXD, output core0_UART_TXD, output [7:0] GPIO_o, output [7:0] LED, input [1:0] GPIO_i );"}
{"task_id": 548, "completion": "module sky130_fd_sc_hs__a2bb2oi ( Y, A1_N, A2_N, B1, B2 );"}
{"task_id": 513, "completion": "module ddr2_phy_dm_iob ( input  clk90, input  dm_ce, input  mask_data_rise, input  mask_data_fall, output ddr_dm );"}
{"task_id": 525, "completion": "module sky130_fd_sc_lp__o2111a (\n        input A1,\n        input A2,\n        input B1,\n        input C1,\n        input D1,\n        input VPWR,\n        input VGND,\n        input VPB,\n        input VNB,\n        output X\n    );"}
{"task_id": 541, "completion": "module sky130_fd_sc_hd__xnor2 (output Y, input A, input B);"}
{"task_id": 445, "completion": "module ethernet_top(                                                                                                                                                                                                        \n  input                i_rst,                                                                                                                                                                                                \n  input                i_clk_125,                                                                                                                                                                                            \n  input                i_clk_200,                                                                                                                                                                                            \n  output               phy_resetn,                                                                                                                                                                                            \n  output [7:0]         gmii_txd,                                                                                                                                                                                              \n  output               gmii_tx_en,                                                                                                                                                                                             \n  output               gmii_tx_er,                                                                                                                                                                                             \n  output               gmii_tx_clk,                                                                                                                                                                                           \n  input  [7:0]         gmii_rxd,                                                                                                                                                                                              \n  input                gmii_rx_dv,                                                                                                                                                                                            \n  input                gmii_rx_er,                                                                                                                                                                                              \n  input                gmii_rx_clk,                                                                                                                                                                                            \n  input                gmii_col,                                                                                                                                                                                               \n  input                gmii_crs,                                                                                                                                                                                               \n  input                mii_tx_clk,                                                                                                                                                                                            \n  input                gtrefclk_p,            \n  input                gtrefclk_n,            \n  output               txp,                   \n  output               txn,                   \n  input                rxp,                   \n  input                rxn,                   \n  output        synchronization_done,                                                                                                                                                                                            \n  output        linkup,                                                                                                                                                                                                        \n  output        mdio_out,                                                                                                                                                                                                    \n  input         mdio_in,                                                                                                                                                                                                     \n  output        mdc_out,                                                                                                                                                                                                     \n  output        mdio_t,                                                                                                                                                                                                        \n  input                i_enet_enable,          \n  input                i_enet_loopback,        \n  input   [31:0]       i_enet_ddr_source_addr, \n  input   [31:0]       i_enet_ddr_dest_addr,   \n  input   [31:0]       i_enet_rcv_data_size,   \n  input   [31:0]       i_enet_snd_data_size,   \n  output  [31:0]       o_enet_rx_cnt,          \n  output  [31:0]       o_enet_tx_cnt,          \n  output               o_enet_rx_done,         \n  output               o_enet_tx_done,         \n  output               o_ddr_wr_req,          \n  output               o_ddr_rd_req,          \n  output   [255:0]     o_ddr_wr_data,          \n  output      [31:0]   o_ddr_wr_be,           \n  output      [31:0]   o_ddr_wr_addr,         \n  output      [31:0]   o_ddr_rd_addr,          \n  input       [255:0]  i_ddr_rd_data,         \n  input                i_ddr_wr_ack,          \n  input                i_ddr_rd_ack,          \n  input                i_ddr_rd_data_valid\n);"}
{"task_id": 511, "completion": "module hls_contrast_streeOg(\n    din0,\n    din1,\n    din2,\n    dout);\n\nparameter ID = 32'd1;\nparameter NUM_STAGE = 32'd1;\nparameter din0_WIDTH = 32'd1;\nparameter din1_WIDTH = 32'd1;\nparameter din2_WIDTH = 32'd1;\nparameter dout_WIDTH = 32'd1;\ninput[din0_WIDTH - 1:0] din0;\ninput[din1_WIDTH - 1:0] din1;\ninput[din2_WIDTH - 1:0] din2;\noutput[dout_WIDTH - 1:0] dout;\n\n\nhls_contrast_streeOg_DSP48_3 hls_contrast_streeOg_DSP48_3_U(\n    .in0( din0 ),\n    .in1( din1 ),\n    .in2( din2 ),\n    .dout( dout ));\n\nendmodule"}
{"task_id": 424, "completion": "module EmitOneCH(\n  input   Transmit_CLK,\n  input   RX_Gate,\n  input   [7:0] EmitDelay,\n  input   [6:0] Emit_Width,\n  output  reg TXP,\n  output  reg TXN\n);"}
{"task_id": 524, "completion": "module sky130_fd_sc_ls__dlrtn (\n    output Q,\n    input RESET_B,\n    input D,\n    input GATE_N\n);"}
{"task_id": 530, "completion": "module sky130_fd_sc_hvl__a21oi ( Y, A1, A2, B1, VPWR, VGND, VPB, VNB );"}
{"task_id": 547, "completion": "module data_gen_submodule ( input clk, input reset_n, output [11:0] Data_A, output [11:0] Data_B, output [11:0] Data_C, output [11:0] Data_D, output [11:0] Data_E, output [11:0] Data_F, output [11:0] Data_G, output [11:0] Data_H );"}
{"task_id": 523, "completion": "module spi (\n\tinput wire \t\tclk,\n\tinput wire \t\tresn,\n\tinput wire \t\ttrig,\n\toutput wire \tdone,\n\toutput reg [15:0] rdData,\n\tinput wire [15:0] wrData,\n\t\n\t// SPI interface\n\toutput reg \t\tSCLK,\n\toutput reg \t\tSS,\n\toutput reg \t\tMOSI,\n\tinput wire \t\tMISO\n);"}
{"task_id": 473, "completion": "module ent_ac(\n\toutput\tport_ac_2\n);"}
{"task_id": 238, "completion": "module axi_ad9144_channel (\n  input           dac_clk,\n  input           dac_rst,\n  output          dac_enable,\n  output  [63:0]  dac_data,\n  input   [63:0]  dma_data,\n  input           dac_data_sync,\n  input           dac_dds_format,\n  input           up_rstn,\n  input           up_clk,\n  input           up_wreq,\n  input   [13:0]  up_waddr,\n  input   [31:0]  up_wdata,\n  output          up_wack,\n  input           up_rreq,\n  input   [13:0]  up_raddr,\n  output  [31:0]  up_rdata,\n  output          up_rack);\n  parameter CHID = 32'h0;\n  parameter DP_DISABLE = 0;"}
{"task_id": 505, "completion": "module reading (\n\taddress,\n\tclock,\n\tq\n);\n\n\tinput\t[11:0]  address;\n\tinput\tclock;\n\toutput\t[11:0]  q;"}
{"task_id": 543, "completion": "module gerneric_fifo (\n        clk,\n        reset,\n        write,\n        read,\n        data_in,\n        full,\n        empty,\n        data_out,\n        size\n    );\n    parameter DATA_SIZE = 32;\n    parameter DEPTH = 8;\n    input wire clk, reset, write, read;\n    input wire [DATA_SIZE-1:0] data_in;\n    output wire full;\n    output reg empty;\n    output reg [DATA_SIZE-1:0] data_out;\n    `include \"../includes/log2func.v\"\n    reg [DATA_SIZE:0] mem [DEPTH-1:0];\n    parameter POINTER_SIZE = `CLOG2(DEPTH);\n    reg [POINTER_SIZE-1:0] rd_pointer, rd_tmp, wr_pointer;\n    output reg [POINTER_SIZE-1:0] size;\n    wire empty_loc;"}
{"task_id": 478, "completion": "module tile_datapath #(  parameter SIZE = 16'd256, parameter LOOP = 16'd4, parameter PRV_SIZE = 16'd10, parameter PRV_LOOP = 16'd10, parameter BIAS = 16'd0, parameter WEIGHT_WIDTH = 3 )( input clk_i, input rst_i, input en_i, input [7:0] data_i, input [$clog2(SIZE) - 1'b1:0] sig_mux_sel_i, input [SIZE*WEIGHT_WIDTH - 1:0] weight_bus_i, output wire [7:0] data_o );"}
{"task_id": 493, "completion": "module ac97_soc(clk, wclk, rst, ps_ce, resume, suspended, sync, out_le, in_valid, ld, valid);"}
{"task_id": 520, "completion": "module rw_manager_ac_ROM_reg(\n        rdaddress,\n        clock,\n        wraddress,\n        data,\n        wren,\n        q);\n\nparameter AC_ROM_DATA_WIDTH = \"\";\nparameter AC_ROM_ADDRESS_WIDTH = \"\";\n\ninput   [(AC_ROM_ADDRESS_WIDTH-1):0]  rdaddress;\ninput     clock;\ninput [(AC_ROM_ADDRESS_WIDTH-1):0] wraddress;\ninput [(AC_ROM_DATA_WIDTH-1):0] data;\ninput wren;\noutput reg [(AC_ROM_DATA_WIDTH-1):0]  q;\n\nreg [(AC_ROM_DATA_WIDTH-1):0] ac_mem[(2**AC_ROM_ADDRESS_WIDTH-1):0];"}
{"task_id": 544, "completion": "module sky130_fd_sc_hs__a31o_2 (\n    X   ,\n    A1  ,\n    A2  ,\n    A3  ,\n    B1  ,\n    VPWR,\n    VGND\n);"}
{"task_id": 432, "completion": "module sirv_AsyncResetRegVec_36(\n  input   clock,\n  input   reset,\n  input  [2:0] io_d,\n  output [2:0] io_q,\n  input   io_en\n);"}
{"task_id": 531, "completion": "module messbauer_saw_tooth_generator #(\n    parameter GCLK_PERIOD = 20,\n    parameter DIRECT_SLOPE_DURATION = 512,\n    parameter CHANNEL_DURATION = (16 * (`MAX_CHANNEL_NUMBER / DIRECT_SLOPE_DURATION)) * 1000 / (2 * GCLK_PERIOD),\n    parameter REVERSE_SLOPE_DURATION = (15464000 / (2 * GCLK_PERIOD)) / CHANNEL_DURATION ,\n    parameter DATA_WIDTH = 12\n)(\n    input wire clk,\n    input wire areset_n,\n    output reg [DATA_WIDTH-1:0] out_value\n);"}
{"task_id": 554, "completion": "module softusb_timer(\n\tinput usb_clk,\n\tinput usb_rst,\n\n\tinput io_we,\n\tinput [5:0] io_a,\n\toutput reg [7:0] io_do\n);"}
{"task_id": 372, "completion": "module tes_pll (\n    input areset,\n    input inclk0,\n    output c0,\n    output c1,\n    output c2,\n    output c3,\n    output c4\n);"}
{"task_id": 555, "completion": "module CLK_gen (\n\tinput\t\t\tclk_i,\n\tinput\t\t\treset_n_i,\n\tinput\t\t\tclk_en,\n\tinput [3:0]\t\tclk_div_i,\n\toutput\t\t\tclk_o\n);"}
{"task_id": 451, "completion": "module miller_enc( output miller_data, output mil_complete, input clk_mil, input rst_for_new_package, input clk_blf, input send_data, input en_fm0, input trext, input st_enc, input fg_complete );"}
{"task_id": 374, "completion": "module nes_hci ( input               clk, input               rst, input               i_reset_sm, input       [7:0]   i_opcode, input               i_opcode_strobe, output  reg [15:0]  o_opcode_status, output  reg         o_opcode_ack, input       [15:0]  i_address, input       [31:0]  i_count, input               i_data_strobe, output  reg         o_hci_ready, input       [7:0]   i_data, output  reg         o_data_strobe, input               i_host_ready, output  reg [7:0]   o_data, input               i_cpu_break, output  reg         o_cpu_r_nw, output  reg [15:0]  o_cpu_address, input       [7:0]   i_cpu_din, output  reg [7:0]   o_cpu_dout, output              o_dbg_active, output  reg         o_cpu_dbg_reg_wr, output  reg [3:0]   o_cpu_dbg_reg_sel, input       [7:0]   i_cpu_dbg_reg_din, output  reg [7:0]   o_cpu_dbg_reg_dout, output  reg         o_ppu_vram_wr, output  reg [15:0]  o_ppu_vram_address, input       [7:0]   i_ppu_vram_din, output  reg [7:0]   o_ppu_vram_dout, output  reg [39:0]  o_cart_cfg, output  reg         o_cart_cfg_update );"}
{"task_id": 583, "completion": "module Mux_3x1_bv2 #(parameter W=32)(input wire [1:0] select,input wire [W-1:0] ch_0,input wire [W-1:0] ch_1,input wire [W-1:0] ch_2,output reg [W-1:0] data_out);"}
{"task_id": 509, "completion": "module sky130_fd_sc_ls__sdfrbp_1 (\n    Q      ,\n    Q_N    ,\n    CLK    ,\n    D      ,\n    SCD    ,\n    SCE    ,\n    RESET_B,\n    VPWR   ,\n    VGND   ,\n    VPB    ,\n    VNB\n);"}
{"task_id": 579, "completion": "module sky130_fd_sc_ms__nand4 (    input  A,    input  B,    input  C,    input  D,    output Y,    input  VPB,    input  VPWR,    input  VGND,    input  VNB);"}
{"task_id": 571, "completion": "module mem(input mclock, input pclock, input resetn, input run, output done, output [8:0] bus);"}
{"task_id": 444, "completion": "module spi_master\n  #(parameter DATA_WIDTH=16,\n    NUM_PORTS=1,\n    CLK_DIVIDER_WIDTH=8\n    )\n  (input clk,\n   input resetb,\n   input CPOL, \n   input CPHA,\n   input half_cycle_n,\n   input [CLK_DIVIDER_WIDTH-1:0] clk_divider,\n\n   input go,\n   input [(NUM_PORTS*DATA_WIDTH)-1:0] datai,\n   output [(NUM_PORTS*DATA_WIDTH)-1:0] datao,\n   output reg busy,\n   output reg done,\n\n   input [NUM_PORTS-1:0] dout,\n   output [NUM_PORTS-1:0] din,\n   output reg csb,\n   output reg sclk\n   );"}
{"task_id": 403, "completion": "module chan_ctrl(\n\tinput  wire clk,\n\tinput  wire rst_n,\n\toutput reg  [ 6:0] rd_addr,\n\tinput  wire [31:0] rd_data,\n\toutput reg  [ 6:0] wr_addr,\n\toutput wire [31:0] wr_data,\n\toutput reg         wr_stb,\n\tinput  wire        sync_stb,\n\tinput  wire [31:0] ch_enas,\n\toutput reg  [ 7:0] out_data,\n\toutput reg         out_stb_addr,\n\toutput reg         out_stb_mix\n);"}
{"task_id": 416, "completion": "module alt_mem_ddrx_mm_st_converter # (\n        parameter\n            AVL_SIZE_WIDTH     = 3,\n            AVL_ADDR_WIDTH     = 25,\n            AVL_DATA_WIDTH     = 32,\n            LOCAL_ID_WIDTH     = 8,\n            CFG_DWIDTH_RATIO   = 4,\n            CFG_MM_ST_CONV_REG = 0\n    )(\n        input ctl_clk,\n        input ctl_reset_n,\n        input ctl_half_clk,\n        input ctl_half_clk_reset_n,\n        output                      avl_ready,\n        input                       avl_read_req,\n        input                       avl_write_req,\n        input  [AVL_SIZE_WIDTH-1:0] avl_size,\n        input                       avl_burstbegin,\n        input  [AVL_ADDR_WIDTH-1:0] avl_addr,\n        output                      avl_rdata_valid,\n        output [3:0]                local_rdata_error,\n        output [AVL_DATA_WIDTH-1:0] avl_rdata,\n        input  [AVL_DATA_WIDTH-1:0] avl_wdata,\n        input  [AVL_BE_WIDTH-1:0]   avl_be,\n        input local_multicast,\n        input local_autopch_req,\n        input local_priority,\n        input                       itf_cmd_ready,\n        output                      itf_cmd_valid,\n        output                      itf_cmd,\n        output [AVL_ADDR_WIDTH-1:0] itf_cmd_address,\n        output [AVL_SIZE_WIDTH-1:0] itf_cmd_burstlen,\n        output [LOCAL_ID_WIDTH-1:0] itf_cmd_id,\n        output                      itf_cmd_priority,\n        output                      itf_cmd_autopercharge,\n        output                      itf_cmd_multicast,\n        input                       itf_wr_data_ready,\n        output                      itf_wr_data_valid,\n        output [AVL_DATA_WIDTH-1:0] itf_wr_data,\n        output [AVL_BE_WIDTH-1:0]   itf_wr_data_byte_en,\n        output                      itf_wr_data_begin,\n        output                      itf_wr_data_last,\n        output [LOCAL_ID_WIDTH-1:0] itf_wr_data_id,\n        output                     itf_rd_data_ready,\n        input                      itf_rd_data_valid,\n        input [AVL_DATA_WIDTH-1:0] itf_rd_data,\n        input                      itf_rd_data_error,\n        input                      itf_rd_data_begin,\n        input                      itf_rd_data_last,\n        input [LOCAL_ID_WIDTH-1:0] itf_rd_data_id\n    );"}
{"task_id": 581, "completion": "module sky130_fd_sc_ms__dlygate4sd3 (\n    input A,\n    input VPWR,\n    input VGND,\n    input VPB,\n    input VNB,\n    output X\n);"}
{"task_id": 540, "completion": "module sram (input wire iCLK, inout wire [15:0] SRAM_DQ, output wire [17:0] SRAM_ADDR, output wire SRAM_UB_N, output wire SRAM_LB_N, output wire SRAM_WE_N, output wire SRAM_CE_N, output wire SRAM_OE_N, input wire [15:0] iDATA, output wire [15:0] oDATA, input wire [17:0] iADDR, input wire iWE_N, input wire iOE_N, input wire iCE_N, input wire [1:0] iBE_N, input wire iRST_N);"}
{"task_id": 568, "completion": "module sky130_fd_sc_hd__sdfstp (\n    Q    ,\n    CLK  ,\n    D    ,\n    SCD  ,\n    SCE  ,\n    SET_B,\n    VPWR ,\n    VGND ,\n    VPB  ,\n    VNB  \n);"}
{"task_id": 359, "completion": "module hdrram (\n\tinput\tclk,\n\tinput [3:0] addr0,\n\tinput we,\n\tinput [31:0] data0_in,\n\tinput [3:0] addr1,\n\toutput [31:0] data1_out\n);"}
{"task_id": 572, "completion": "module sky130_fd_sc_hs__edfxtp_1 (\n    output Q,\n    input CLK,\n    input D,\n    input DE,\n    input VPWR,\n    input VGND\n);"}
{"task_id": 597, "completion": "module qm_regfile(\n    input wire we3,\n    input wire [4:0] ra1,\n    input wire [4:0] ra2,\n    input wire [4:0] wa3,\n    output wire [31:0] rd1,\n    output wire [31:0] rd2,\n    input wire [31:0] wd3\n    );"}
{"task_id": 411, "completion": "module bch_syndrome #(    parameter [`BCH_PARAM_SZ-1:0] P = `BCH_SANE,    parameter BITS = 1,    parameter REG_RATIO = 1,    parameter PIPELINE_STAGES = 0) (    input clk,    input start,        input ce,    input [BITS-1:0] data_in,    output ready,    output [`BCH_SYNDROMES_SZ(P)-1:0] syndromes,    output reg done = 0);"}
{"task_id": 566, "completion": "module Bks8(a, b, d);\n    input wire [7:0] a;\n    input wire [7:0] b;\n    output wire [14:0] d;"}
{"task_id": 592, "completion": "module sky130_fd_sc_hd__dlrtn (\n    Q, \n    RESET_B,\n    D, \n    GATE_N\n);"}
{"task_id": 481, "completion": "module control (clk, cEnter, cEne, cDelete, cCounter, cNum, new, reset, complete, enter, delete, add, load, addEnhe, change, virgul, changeVirgul);"}
{"task_id": 512, "completion": "module RMON_CTRL (Clk, Reset, Reg_apply_0, Reg_addr_0, Reg_data_0, Reg_next_0, Reg_apply_1, Reg_addr_1, Reg_data_1, Reg_next_1, Addra, Dina, Douta, Wea, CPU_rd_addr, CPU_rd_apply, CPU_rd_grant, CPU_rd_dout); input Clk; input Reset; input Reg_apply_0; input [4:0] Reg_addr_0; input [15:0] Reg_data_0; output Reg_next_0; input Reg_apply_1; input [4:0] Reg_addr_1; input [15:0] Reg_data_1; output Reg_next_1; output [5:0] Addra; output [31:0] Dina; input [31:0] Douta; output Wea; input [5:0] CPU_rd_addr; input CPU_rd_apply; output CPU_rd_grant; output [31:0] CPU_rd_dout;"}
{"task_id": 496, "completion": "module ps2_wb(                          // Wishbone interface\n    input  wire       wb_clk_i,\n    input  wire       wb_rst_i,\n    input  wire [7:0] wb_dat_i,\n    output wire [7:0] wb_dat_o,\n    input  wire [0:0] wb_adr_i,\n    input  wire       wb_stb_i,\n    input  wire       wb_we_i,\n    output wire       wb_ack_o,\n\n    // IRQ output\n    output wire       irq_o,\n\n    // PS2 signals\n    inout wire ps2_clk,\n    inout wire ps2_dat\n);"}
{"task_id": 517, "completion": "module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix(GPIO_I, GPIO_O, GPIO_T, SDIO0_WP, TTC0_WAVE0_OUT, TTC0_WAVE1_OUT, TTC0_WAVE2_OUT, USB0_PORT_INDCTL, USB0_VBUS_PWRSELECT, USB0_VBUS_PWRFAULT, M_AXI_GP0_ARVALID, M_AXI_GP0_AWVALID, M_AXI_GP0_BREADY, M_AXI_GP0_RREADY, M_AXI_GP0_WLAST, M_AXI_GP0_WVALID, M_AXI_GP0_ARID, M_AXI_GP0_AWID, M_AXI_GP0_WID, M_AXI_GP0_ARBURST, M_AXI_GP0_ARLOCK, M_AXI_GP0_ARSIZE, M_AXI_GP0_AWBURST, M_AXI_GP0_AWLOCK, M_AXI_GP0_AWSIZE, M_AXI_GP0_ARPROT, M_AXI_GP0_AWPROT, M_AXI_GP0_ARADDR, M_AXI_GP0_AWADDR, M_AXI_GP0_WDATA, M_AXI_GP0_ARCACHE, M_AXI_GP0_ARLEN, M_AXI_GP0_ARQOS, M_AXI_GP0_AWCACHE, M_AXI_GP0_AWLEN, M_AXI_GP0_AWQOS, M_AXI_GP0_WSTRB, M_AXI_GP0_ACLK, M_AXI_GP0_ARREADY, M_AXI_GP0_AWREADY, M_AXI_GP0_BVALID, M_AXI_GP0_RLAST, M_AXI_GP0_RVALID, M_AXI_GP0_WREADY, M_AXI_GP0_BID, M_AXI_GP0_RID, M_AXI_GP0_BRESP, M_AXI_GP0_RRESP, M_AXI_GP0_RDATA, IRQ_F2P, FCLK_CLK0, FCLK_RESET0_N, MIO, DDR_CAS_n, DDR_CKE, DDR_Clk_n, DDR_Clk, DDR_CS_n, DDR_DRSTB, DDR_ODT, DDR_RAS_n, DDR_WEB, DDR_BankAddr, DDR_Addr, DDR_VRN, DDR_VRP, DDR_DM, DDR_DQ, DDR_DQS_n, DDR_DQS, PS_SRSTB, PS_CLK, PS_PORB);"}
{"task_id": 610, "completion": "module sky130_fd_sc_hd__dfrtn (\n    Q      ,\n    CLK_N  ,\n    D      ,\n    RESET_B\n);"}
{"task_id": 585, "completion": "module LAG_pl_free_pool (input [num_pls_global-1:0] flits_tail, input [num_pls_global-1:0] flits_valid, input [num_pls_global-1:0] pl_allocated, output [num_pls_global-1:0] pl_alloc_status, input [num_pls_global-1:0] pl_empty, input clk, input rst_n);"}
{"task_id": 613, "completion": "module sky130_fd_sc_hvl__mux2 (input A0, input A1, output X, input S);"}
{"task_id": 454, "completion": "module sm_cpu(\n    input           clk,\n    input           rst_n,\n    input   [ 4:0]  regAddr,\n    output  [31:0]  regData,\n    output  [31:0]  imAddr,\n    input   [31:0]  imData,\n    input   [7:0]   exData\n);"}
{"task_id": 614, "completion": "module sky130_fd_sc_hvl__dfrtp (Q, CLK, D, RESET_B);"}
{"task_id": 605, "completion": "module sky130_fd_sc_hdll__o22a (   output X,   input A1,   input A2,   input B1,   input B2,   input VPWR,   input VGND,   input VPB,   input VNB );"}
{"task_id": 612, "completion": "module sky130_fd_sc_ls__a32o_4 (\n    X   ,\n    A1  ,\n    A2  ,\n    A3  ,\n    B1  ,\n    B2  ,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 532, "completion": "module fpga(    input spcki,    input mosi,    input ncs,    output miso,    input pck0i,    input ck_1356meg,    input ck_1356megb,    output pwr_lo,    output pwr_hi,    output pwr_oe1,    output pwr_oe2,    output pwr_oe3,    output pwr_oe4,    input [7:0] adc_d,    output adc_clk,    output adc_noe,    input ssp_dout,    output ssp_frame,    output ssp_din,    output ssp_clk,    input cross_hi,    input cross_lo,    output dbg);"}
{"task_id": 618, "completion": "module sky130_fd_sc_hd__nand2_8 ( Y, A, B, VPWR, VGND, VPB, VNB );"}
{"task_id": 582, "completion": "module fifo (aclr, data, rdclk, rdreq, wrclk, wrreq, q, rdempty, wrfull);"}
{"task_id": 617, "completion": "module sky130_fd_sc_ls__conb (    output HI,    output LO);"}
{"task_id": 503, "completion": "module TEST_TX_DP_RAM(\n  input clka,\n  input ena,\n  input [0 : 0] wea,\n  input [10 : 0] addra,\n  input [31 : 0] dina,\n  input clkb,\n  input enb,\n  input [10 : 0] addrb,\n  output [31 : 0] doutb\n);"}
{"task_id": 588, "completion": "module sky130_fd_sc_hvl__sdlclkp (GCLK, SCE, GATE, CLK, VPWR, VGND, VPB, VNB);"}
{"task_id": 619, "completion": "module sky130_fd_sc_hs__and3b(input wire A_N, input wire B, input wire C, input wire VPWR, input wire VGND, output wire X);"}
{"task_id": 631, "completion": "module sky130_fd_sc_lp__tapvpwrvgnd ( input VPWR, input VGND, input VPB, input VNB );"}
{"task_id": 625, "completion": "module sky130_fd_sc_lp__bufkapwr (output X, input A);"}
{"task_id": 622, "completion": "module add3 (input [3:0] in, output [3:0] out);"}
{"task_id": 587, "completion": "module sky130_fd_sc_hdll__a221oi ( Y , A1 , A2 , B1 , B2 , C1 , VPWR, VGND, VPB , VNB );"}
{"task_id": 599, "completion": "module SimpleMmu(    input wire clk,    input wire reset,    input wire [31:0] addrA,    input wire [31:0] addrB,    input wire writeEnable,    input wire [7:0] dataIn,    input wire requestA,    input wire requestB,    output wire [7:0] outA,    output wire [7:0] outB,    output wire busyA,    output wire busyB,    input wire [15:0] displayIn,    output wire [31:0] displayAddr,    output wire displayWE,    output wire [31:0] mmioInB,    output wire [31:0] mmioAddrB,    output wire mmioWEB );"}
{"task_id": 642, "completion": "module sky130_fd_sc_lp__fa (\n    output COUT,\n    output SUM,\n    input  A,\n    input  B,\n    input  CIN\n);"}
{"task_id": 647, "completion": "module sky130_fd_sc_hs__ebufn (\n    input  A,\n    input  TE_B,\n    output Z\n);"}
{"task_id": 650, "completion": "module sky130_fd_sc_lp__sleep_sergate_plv (\n    output VIRTPWR,\n    input  SLEEP\n);"}
{"task_id": 646, "completion": "module sky130_fd_sc_ms__o21ba (\n        input A1,\n        input A2,\n        input B1_N,\n        input VPWR,\n        input VGND,\n        input VPB,\n        input VNB,\n        output X\n    );"}
{"task_id": 69, "completion": "module axi_crossbar_v2_1_addr_decoder #(\n   parameter C_FAMILY = \"none\",\n   parameter integer C_NUM_TARGETS = 2,\n   parameter integer C_NUM_TARGETS_LOG = 1,\n   parameter integer C_NUM_RANGES = 1,\n   parameter integer C_ADDR_WIDTH = 32,\n   parameter integer C_TARGET_ENC = 0,\n   parameter integer C_TARGET_HOT = 1,\n   parameter integer C_REGION_ENC = 0,\n   parameter [C_NUM_TARGETS*C_NUM_RANGES*64-1:0] C_BASE_ADDR = {C_NUM_TARGETS*C_NUM_RANGES*64{1'b1}},\n   parameter [C_NUM_TARGETS*C_NUM_RANGES*64-1:0] C_HIGH_ADDR = {C_NUM_TARGETS*C_NUM_RANGES*64{1'b0}},\n   parameter [C_NUM_TARGETS:0] C_TARGET_QUAL = {C_NUM_TARGETS{1'b1}},\n   parameter integer C_RESOLUTION = 0,\n   parameter integer C_COMPARATOR_THRESHOLD = 6\n)(\n   input wire [C_ADDR_WIDTH-1:0] ADDR,\n   output wire [C_NUM_TARGETS-1:0] TARGET_HOT,\n   output wire [C_NUM_TARGETS_LOG-1:0] TARGET_ENC,\n   output wire MATCH,\n   output wire [3:0] REGION\n);"}
{"task_id": 661, "completion": "module sky130_fd_sc_hs__bufbuf (output X, input A);"}
{"task_id": 611, "completion": "module arbiter_for_mem(//input\n                            clk,\n                            rst,\n                            v_mem_download,\n                            v_d_m_areg,\n                            v_i_m_areg,\n                            mem_access_done,\n                            //output\n                            ack_m_download,\n                            ack_d_m_areg,\n                            ack_i_m_areg,\n                            v_m_download_m,\n                            v_d_m_areg_m,\n                            v_i_m_areg_m\n                            );\n                           //input              \n input                           clk;\n input                           rst;\n input                           v_mem_download;\n input                           v_d_m_areg;\n input                           v_i_m_areg;\n input                           mem_access_done;\n                            //output\n output                           ack_m_download;\n output                           ack_d_m_areg;\n output                           ack_i_m_areg;\n output                           v_m_download_m;\n output                           v_d_m_areg_m;\n output                           v_i_m_areg_m;  \n /// parameter  for fsm state\n parameter       arbiter_idle=2'b00;\n parameter       i_m_areg_busy=2'b01;\n parameter       d_m_areg_busy=2'b10;\n parameter       m_download_busy=2'b11;\n reg  [1:0]   nstate;\n reg  [1:0]   state;\n wire   [2:0] seled_v;\n reg        ack_m_download;\n reg        ack_d_m_areg;\n reg        ack_i_m_areg;\n reg        v_m_download_m;\n reg        v_d_m_areg_m;\n reg        v_i_m_areg_m;"}
{"task_id": 662, "completion": "module sky130_fd_sc_lp__mux2 (\n    output X ,\n    input  A0,\n    input  A1,\n    input  S \n);"}
{"task_id": 608, "completion": "module bd_350b_slot_2_aw_0 (\n  In0,\n  In1,\n  dout\n);\n\ninput wire [0 : 0] In0;\ninput wire [0 : 0] In1;\noutput wire [1 : 0] dout;"}
{"task_id": 567, "completion": "module hamdec(\n        data_in,\n        edc_in,\n        data_out,\n        error);\n\n    input [`uart_data_width-1:0] data_in;\n    input [`uart_rx_hamming_decoder_edc_width-1:0] edc_in;\n    output reg [`uart_data_width-1:0] data_out;\n    output reg error;"}
{"task_id": 462, "completion": "module CPU #(parameter INSTR_MEM_SIZE = 1024, parameter DATA_MEM_SIZE = 4096)(input wire clock, input wire reset);"}
{"task_id": 558, "completion": "module cf_mul (\n  input clk,\n  input [16:0] data_a,\n  input [7:0] data_b,\n  output [24:0] data_p,\n  input [DW:0] ddata_in,\n  output [DW:0] ddata_out\n);"}
{"task_id": 598, "completion": "module axi_dmac_regmap #(\n  parameter ID = 0,\n  parameter DISABLE_DEBUG_REGISTERS = 0,\n  parameter BYTES_PER_BEAT_WIDTH_DEST = 1,\n  parameter BYTES_PER_BEAT_WIDTH_SRC = 1,\n  parameter BYTES_PER_BURST_WIDTH = 7,\n  parameter DMA_AXI_ADDR_WIDTH = 32,\n  parameter DMA_LENGTH_WIDTH = 24,\n  parameter DMA_LENGTH_ALIGN = 3,\n  parameter DMA_CYCLIC = 0,\n  parameter HAS_DEST_ADDR = 1,\n  parameter HAS_SRC_ADDR = 1,\n  parameter DMA_2D_TRANSFER = 0,\n  parameter SYNC_TRANSFER_START = 0\n) (\n  input s_axi_aclk,\n  input s_axi_aresetn,\n  input s_axi_awvalid,\n  output s_axi_awready,\n  input [11:0] s_axi_awaddr,\n  input [2:0] s_axi_awprot,\n  input s_axi_wvalid,\n  output s_axi_wready,\n  input [31:0] s_axi_wdata,\n  input [3:0] s_axi_wstrb,\n  output s_axi_bvalid,\n  input s_axi_bready,\n  output [1:0] s_axi_bresp,\n  input s_axi_arvalid,\n  output s_axi_arready,\n  input [11:0] s_axi_araddr,\n  input [2:0] s_axi_arprot,\n  output s_axi_rvalid,\n  input s_axi_rready,\n  output [1:0] s_axi_rresp,\n  output [31:0] s_axi_rdata,\n  output reg irq,\n  output reg ctrl_enable = 1'b0,\n  output reg ctrl_pause = 1'b0,\n  output request_valid,\n  input request_ready,\n  output [DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_DEST] request_dest_address,\n  output [DMA_AXI_ADDR_WIDTH-1:BYTES_PER_BEAT_WIDTH_SRC] request_src_address,\n  output [DMA_LENGTH_WIDTH-1:0] request_x_length,\n  output [DMA_LENGTH_WIDTH-1:0] request_y_length,\n  output [DMA_LENGTH_WIDTH-1:0] request_dest_stride,\n  output [DMA_LENGTH_WIDTH-1:0] request_src_stride,\n  output request_sync_transfer_start,\n  output request_last,\n  input response_eot,\n  input [BYTES_PER_BURST_WIDTH-1:0] response_measured_burst_length,\n  input response_partial,\n  input response_valid,\n  output response_ready,\n  input [DMA_AXI_ADDR_WIDTH-1:0] dbg_src_addr,\n  input [DMA_AXI_ADDR_WIDTH-1:0] dbg_dest_addr,\n  input [11:0] dbg_status,\n  input [31:0] dbg_ids0,\n  input [31:0] dbg_ids1\n);"}
{"task_id": 626, "completion": "module t (/*AUTOARG*/\n   // Inputs\n   clk\n   );\n   input clk;"}
{"task_id": 518, "completion": "module i2c_master_top(    wb_clk_i, wb_rst_i, arst_i, wb_adr_i, wb_dat_i, wb_dat_o,    wb_we_i, wb_stb_i, wb_cyc_i, wb_ack_o, wb_inta_o,    scl_pad_i, scl_pad_o, scl_padoen_o, sda_pad_i, sda_pad_o, sda_padoen_o );"}
{"task_id": 672, "completion": "module millcpu(\n\tinput\t\twire\t\t\tclk, rst,\n\tinput\t\twire\t[`REGW-1:0]\tins,\n\toutput\t\twire\t\t\tmem_we,\n\toutput\t\twire\t[`REGW-1:0]\tpaddr, mem_waddr, mem_wdata\n);"}
{"task_id": 651, "completion": "module FB_VVI_Pacemaker (\n\tinput wire clk,\n\tinput wire VPulse_eI,\n\tinput wire VRP_Timer_Timeout_eI,\n\tinput wire LRI_Timer_Timeout_eI,\n\toutput wire VPace_eO,\n\toutput wire VRefractory_eO,\n\toutput wire VRP_Start_Timer_eO,\n\toutput wire LRI_Timer_Start_eO,\n\toutput wire LRI_Timer_Stop_eO,\n\toutput wire signed [15:0] VRP_Timeout_Value_O,\n\toutput wire signed [15:0] LRI_Timeout_Value_O,\n\tinput reset\n);"}
{"task_id": 652, "completion": "module usb_fifo_rcv  #(\n                      parameter                     ADDR_WIDTH=4,\n                      parameter                     WDATA_WIDTH=0,\n                      parameter                     RDATA_WIDTH=0\n                      )\n                      (\n                      input                         clk,\n                      input                         rst0_async,\n                      input                         rst0_sync,\n\n                      input                         wr_en,\n                      input[(1<<WDATA_WIDTH)-1:0]   wr_data,\n\n                      input                         rd_en,\n                      output[(1<<RDATA_WIDTH)-1:0]  rd_data,\n\n                      output                        fifo_full,\n                      output                        fifo_empty\n                      );"}
{"task_id": 433, "completion": "module system_ov7670_vga_0_1 (input pclk, input [7:0] data, output [15:0] rgb);"}
{"task_id": 658, "completion": "module inst_b_e(\n\tinput\t\tp_mix_signal_aa_ba_gi,\n\toutput\t[7:0]\tp_mix_signal_bb_ab_go\n);"}
{"task_id": 578, "completion": "module contadores_configuracion(\n  input wire clk,\n  input wire reset,\n  input wire [7:0] in_dato, port_id,\n  input wire write_strobe, k_write_strobe,\n  output wire [7:0] btn_data_SS, btn_data_MM, btn_data_HH, btn_data_YEAR, btn_data_MES, btn_data_DAY,\n  btn_data_SS_T, btn_data_MM_T, btn_data_HH_T,\n  output wire [1:0] cursor_location,\n  output wire [1:0] config_mode\n);"}
{"task_id": 563, "completion": "module mand_core (input clk, input reset, input [31:0] cx0, input [31:0] cxstep, input [31:0] cy, input rq, output ack, output [(7*11)-1:0] counters);"}
{"task_id": 501, "completion": "module dacclk_mmcm(\n  input         CLK_IN1,\n  output        CLK_OUT1,\n  output        CLK_OUT2,\n  output        CLK_OUT3,\n  output        CLK_OUT4,\n  output        CLK_OUT5,\n  output        LOCKED\n);"}
{"task_id": 623, "completion": "module wb_mux_2 #(\n    parameter DATA_WIDTH = 32,\n    parameter ADDR_WIDTH = 32,\n    parameter SELECT_WIDTH = (DATA_WIDTH/8)\n)(\n    input  wire                    clk,\n    input  wire                    rst,\n    input  wire [ADDR_WIDTH-1:0]   wbm_adr_i,\n    input  wire [DATA_WIDTH-1:0]   wbm_dat_i,\n    output wire [DATA_WIDTH-1:0]   wbm_dat_o,\n    input  wire                    wbm_we_i,\n    input  wire [SELECT_WIDTH-1:0] wbm_sel_i,\n    input  wire                    wbm_stb_i,\n    output wire                    wbm_ack_o,\n    output wire                    wbm_err_o,\n    output wire                    wbm_rty_o,\n    input  wire                    wbm_cyc_i,\n    output wire [ADDR_WIDTH-1:0]   wbs0_adr_o,\n    input  wire [DATA_WIDTH-1:0]   wbs0_dat_i,\n    output wire [DATA_WIDTH-1:0]   wbs0_dat_o,\n    output wire                    wbs0_we_o,\n    output wire [SELECT_WIDTH-1:0] wbs0_sel_o,\n    output wire                    wbs0_stb_o,\n    input  wire                    wbs0_ack_i,\n    input  wire                    wbs0_err_i,\n    input  wire                    wbs0_rty_i,\n    output wire                    wbs0_cyc_o,\n    input  wire [ADDR_WIDTH-1:0]   wbs0_addr,\n    input  wire [ADDR_WIDTH-1:0]   wbs0_addr_msk,\n    output wire [ADDR_WIDTH-1:0]   wbs1_adr_o,\n    input  wire [DATA_WIDTH-1:0]   wbs1_dat_i,\n    output wire [DATA_WIDTH-1:0]   wbs1_dat_o,\n    output wire                    wbs1_we_o,\n    output wire [SELECT_WIDTH-1:0] wbs1_sel_o,\n    output wire                    wbs1_stb_o,\n    input  wire                    wbs1_ack_i,\n    input  wire                    wbs1_err_i,\n    input  wire                    wbs1_rty_i,\n    output wire                    wbs1_cyc_o,\n    input  wire [ADDR_WIDTH-1:0]   wbs1_addr,\n    input  wire [ADDR_WIDTH-1:0]   wbs1_addr_msk\n);"}
{"task_id": 673, "completion": "module ByteMuxOct (  input[7:0] A_i,  input[7:0] B_i,  input[7:0] C_i,  input[7:0] D_i,  input[7:0] E_i,  input[7:0] F_i,  input[7:0] G_i,  input[7:0] H_i,  input SAB_i,  input SC_i,  input SD_i,  input SE_i,  input SF_i,  input SG_i,  input SH_i,  output[7:0] Y_o );"}
{"task_id": 275, "completion": "module tx_engine\n    #(parameter C_DATA_WIDTH = 128,\n      parameter C_DEPTH_PACKETS = 10,\n      parameter C_PIPELINE_INPUT = 1,\n      parameter C_PIPELINE_OUTPUT = 0,\n      parameter C_FORMATTER_DELAY = 1,\n      parameter C_MAX_HDR_WIDTH  = 128,\n      parameter C_MAX_PAYLOAD_DWORDS = 64,\n      parameter C_VENDOR = \"ALTERA\")\n    (\n     input                                CLK,\n     input                                RST_IN,\n     input                                TX_HDR_VALID,\n     input [C_MAX_HDR_WIDTH-1:0]          TX_HDR,\n     input [`SIG_LEN_W-1:0]               TX_HDR_PAYLOAD_LEN,\n     input [`SIG_NONPAY_W-1:0]            TX_HDR_NONPAY_LEN,\n     input [`SIG_PACKETLEN_W-1:0]         TX_HDR_PACKET_LEN,\n     input                                TX_HDR_NOPAYLOAD,\n     output                               TX_HDR_READY,\n     input                                TX_DATA_VALID,\n     input [C_DATA_WIDTH-1:0]             TX_DATA,\n     input                                TX_DATA_START_FLAG,\n     input [clog2s(C_DATA_WIDTH/32)-1:0]  TX_DATA_START_OFFSET,\n     input                                TX_DATA_END_FLAG,\n     input [clog2s(C_DATA_WIDTH/32)-1:0]  TX_DATA_END_OFFSET,\n     output                               TX_DATA_READY,\n     input                                TX_PKT_READY,\n     output [C_DATA_WIDTH-1:0]            TX_PKT,\n     output                               TX_PKT_START_FLAG,\n     output [clog2s(C_DATA_WIDTH/32)-1:0] TX_PKT_START_OFFSET,\n     output                               TX_PKT_END_FLAG,\n     output [clog2s(C_DATA_WIDTH/32)-1:0] TX_PKT_END_OFFSET,\n     output                               TX_PKT_VALID\n    );"}
{"task_id": 694, "completion": "module sky130_fd_sc_hvl__udp_dff$PS (input D, output Q, input SET, input CLK);"}
{"task_id": 666, "completion": "module udiv\n    #(parameter aw = 18,\n      parameter bw = 10)(\n      input      [aw   -1:0] a,\n      input      [bw   -1:0] b,\n      output     [aw-1:0] quo,\n      output     [bw-1:0] res,\n      output              divide_by_0\n    );"}
{"task_id": 569, "completion": "module blk_mem_gen_outputMem(\n  input clka,\n  input [0 : 0] wea,\n  input [12 : 0] addra,\n  input [7 : 0] dina,\n  input clkb,\n  input [12 : 0] addrb,\n  output [7 : 0] doutb\n);"}
{"task_id": 695, "completion": "module sky130_fd_sc_lp__clkbuf_1 ( X, A, VPWR, VGND, VPB, VNB );"}
{"task_id": 676, "completion": "module divider (clk,rst,load,n,d,q,r,ready);"}
{"task_id": 601, "completion": "module altera_avalon_st_handshake_clock_crosser #(parameter DATA_WIDTH = 8, parameter BITS_PER_SYMBOL = 8, parameter USE_PACKETS = 0, parameter USE_CHANNEL = 0, parameter CHANNEL_WIDTH = 1, parameter USE_ERROR = 0, parameter ERROR_WIDTH = 1, parameter VALID_SYNC_DEPTH = 2, parameter READY_SYNC_DEPTH = 2, parameter USE_OUTPUT_PIPELINE = 1, parameter SYMBOLS_PER_BEAT = DATA_WIDTH / BITS_PER_SYMBOL, parameter EMPTY_WIDTH = log2ceil(SYMBOLS_PER_BEAT)) (input in_clk, input in_reset, input out_clk, input out_reset, output in_ready, input in_valid, input [DATA_WIDTH - 1 : 0] in_data, input [CHANNEL_WIDTH - 1 : 0] in_channel, input [ERROR_WIDTH - 1 : 0] in_error, input in_startofpacket, input in_endofpacket, input [(EMPTY_WIDTH ? (EMPTY_WIDTH - 1) : 0) : 0] in_empty, input out_ready, output out_valid, output [DATA_WIDTH - 1 : 0] out_data, output [CHANNEL_WIDTH - 1 : 0] out_channel, output [ERROR_WIDTH - 1 : 0] out_error, output out_startofpacket, output out_endofpacket, output [(EMPTY_WIDTH ? (EMPTY_WIDTH - 1) : 0) : 0] out_empty);"}
{"task_id": 616, "completion": "module divmmc(\n    input         clk_sys,\n    input   [1:0] mode,\n    input         nWR,\n    input         nRD,\n    input         nMREQ,\n    input         nRFSH,\n    input         nIORQ,\n    input         nM1,\n    input  [15:0] addr,\n    input   [7:0] din,\n    output  [7:0] dout,\n    input         enable,\n    input         disable_pagein,\n    output        active_io,\n    output        rom_active,\n    output        ram_active,\n    output  [3:0] ram_bank,\n    output reg    spi_ss,\n    output        spi_clk,\n    input         spi_di,\n    output        spi_do\n);"}
{"task_id": 595, "completion": "module ddr2_usr_rd #(\n   parameter DQ_PER_DQS    = 8,\n   parameter DQS_WIDTH     = 9,\n   parameter APPDATA_WIDTH = 144,\n   parameter ECC_WIDTH     = 72,\n   parameter ECC_ENABLE    = 0\n )(\n   input clk0,\n   input rst0,\n   input [(DQS_WIDTH*DQ_PER_DQS)-1:0] rd_data_in_rise,\n   input [(DQS_WIDTH*DQ_PER_DQS)-1:0] rd_data_in_fall,\n   input [DQS_WIDTH-1:0] ctrl_rden,\n   input [DQS_WIDTH-1:0] ctrl_rden_sel,\n   output reg [1:0] rd_ecc_error,\n   output rd_data_valid,\n   output reg [(APPDATA_WIDTH/2)-1:0] rd_data_out_rise,\n   output reg [(APPDATA_WIDTH/2)-1:0] rd_data_out_fall\n );"}
{"task_id": 453, "completion": "module hostcontroller (RXStatus, clearTXReq, clk, getPacketREn, getPacketRdy, isoEn, rst, sendPacketArbiterGnt, sendPacketArbiterReq, sendPacketPID, sendPacketRdy, sendPacketWEn, transDone, transReq, transType);"}
{"task_id": 682, "completion": "module axi_traffic_gen_v2_0_static_cmdgen# (  parameter C_ATG_STATIC_ADDRESS = 32'h12A0_0000,  parameter C_M_AXI_DATA_WIDTH = 32,  parameter C_ATG_MIF_ADDR_BITS = 4,  parameter C_ATG_STATIC_LENGTH = 3,  parameter C_ATG_SYSTEM_INIT = 0,  parameter C_ATG_SYSTEM_TEST = 0) ( input Clk, input rst_l, input static_ctl_en, input [7:0] static_len, input [9:0] rom_addr_ptr_ff, input [31:0] rom_addr, input [31:0] rom_data, output [127:0] cmd_out_mw, output [C_M_AXI_DATA_WIDTH-1:0] cmd_data, output [127:0] cmd_out_mr );"}
{"task_id": 574, "completion": "module FPU_Add_Subtract_Function\n#(parameter W = 32, parameter EW = 8, parameter SW = 23, parameter SWR = 26, parameter EWR = 5)(\n    input wire clk,\n    input wire rst,\n    input wire beg_FSM,\n    input wire ack_FSM,\n    input wire [W-1:0] Data_X,\n    input wire [W-1:0] Data_Y,\n    input wire add_subt,\n    input wire [1:0] r_mode,\n    output wire overflow_flag,\n    output wire underflow_flag,\n    output wire ready,\n    output wire [W-1:0] final_result_ieee\n);"}
{"task_id": 607, "completion": "module altera_avalon_mm_clock_crossing_bridge #(\n    parameter DATA_WIDTH            = 32,\n    parameter SYMBOL_WIDTH          = 8,\n    parameter HDL_ADDR_WIDTH        = 10,\n    parameter BURSTCOUNT_WIDTH      = 1,\n    parameter COMMAND_FIFO_DEPTH    = 4,\n    parameter RESPONSE_FIFO_DEPTH   = 4,\n    parameter MASTER_SYNC_DEPTH     = 2,\n    parameter SLAVE_SYNC_DEPTH      = 2,\n    parameter BYTEEN_WIDTH = DATA_WIDTH / SYMBOL_WIDTH\n)(\n    input                           s0_clk,\n    input                           s0_reset,\n    input                           m0_clk,\n    input                           m0_reset,\n    output                          s0_waitrequest,\n    output [DATA_WIDTH-1:0]         s0_readdata,\n    output                          s0_readdatavalid,\n    input  [BURSTCOUNT_WIDTH-1:0]   s0_burstcount,\n    input  [DATA_WIDTH-1:0]         s0_writedata,\n    input  [HDL_ADDR_WIDTH-1:0]     s0_address, \n    input                           s0_write,\n    input                           s0_read,\n    input  [BYTEEN_WIDTH-1:0]       s0_byteenable,\n    input                           s0_debugaccess,\n    input                           m0_waitrequest,\n    input  [DATA_WIDTH-1:0]         m0_readdata,\n    input                           m0_readdatavalid,\n    output [BURSTCOUNT_WIDTH-1:0]   m0_burstcount,\n    output [DATA_WIDTH-1:0]         m0_writedata,\n    output [HDL_ADDR_WIDTH-1:0]     m0_address, \n    output                          m0_write,\n    output                          m0_read,\n    output [BYTEEN_WIDTH-1:0]       m0_byteenable,\n    output                          m0_debugaccess\n);"}
{"task_id": 703, "completion": "module sky130_fd_sc_lp__a2111o (\n    output X ,\n    input  A1,\n    input  A2,\n    input  B1,\n    input  C1,\n    input  D1\n);"}
{"task_id": 718, "completion": "module sky130_fd_sc_ls__a2bb2oi ( Y, A1_N, A2_N, B1, B2 );"}
{"task_id": 641, "completion": "module afifo #(\n parameter TCQ = 100,\n parameter DSIZE = 32,\n parameter FIFO_DEPTH = 16,\n parameter ASIZE = 4,\n parameter SYNC = 1\n)(\n input wr_clk,\n input rst,\n input wr_en,\n input [DSIZE-1:0] wr_data,\n input rd_en,\n input rd_clk,\n output [DSIZE-1:0] rd_data,\n output reg full,\n output reg empty,\n output reg almost_full\n);"}
{"task_id": 705, "completion": "module sky130_fd_sc_hs__nor3 (\n    VPWR,\n    VGND,\n    Y   ,\n    A   ,\n    B   ,\n    C\n);"}
{"task_id": 710, "completion": "module ddr3_s4_amphy_ex_lfsr8 (clk, reset_n, enable, pause, load, data, ldata);   parameter seed  = 32;   input clk;   input reset_n;   input enable;   input pause;   input load;   output[8 - 1:0] data;   wire[8 - 1:0] data;   input[8 - 1:0] ldata;"}
{"task_id": 655, "completion": "module Snake(\n    input clk,\n    input rst,\n    input[15:0] point,\n    input left_press,\n    input right_press,\n    input up_press,\n    input down_press,\n    output reg [1:0]snake,\n    input [9:0]x_pos,\n    input [9:0]y_pos,\n    output [5:0]head_x,\n    output [5:0]head_y,\n    input add_cube,\n    input [1:0]game_status,\n    output reg [6:0]cube_num,\n    output reg hit_body,\n    output reg hit_wall,\n    input die_flash\n);"}
{"task_id": 712, "completion": "module sky130_fd_sc_hd__o221ai (\n    output Y   ,\n    input  A1  ,\n    input  A2  ,\n    input  B1  ,\n    input  B2  ,\n    input  C1  ,\n    input  VPWR,\n    input  VGND,\n    input  VPB ,\n    input  VNB\n);"}
{"task_id": 156, "completion": "module beq_nat (input wire [31:0] n, input wire [31:0] m) output wire result;"}
{"task_id": 683, "completion": "module sky130_fd_sc_ms__xnor2 ( Y , A , B , VPWR, VGND, VPB , VNB );"}
{"task_id": 720, "completion": "module sky130_fd_sc_ms__a2111o (\n    output X ,\n    input  A1,\n    input  A2,\n    input  B1,\n    input  C1,\n    input  D1\n);"}
{"task_id": 257, "completion": "module axis_eth_fcs_check(\n    input  wire        clk,\n    input  wire        rst,\n    input  wire [7:0]  s_axis_tdata,\n    input  wire        s_axis_tvalid,\n    output wire        s_axis_tready,\n    input  wire        s_axis_tlast,\n    input  wire        s_axis_tuser,\n    output wire [7:0]  m_axis_tdata,\n    output wire        m_axis_tvalid,\n    input  wire        m_axis_tready,\n    output wire        m_axis_tlast,\n    output wire        m_axis_tuser,\n    output wire        busy,\n    output wire        error_bad_fcs\n);"}
{"task_id": 684, "completion": "module sky130_fd_sc_lp__invlp (\n    input A,\n    input VPWR,\n    input VGND,\n    input VPB,\n    input VNB,\n    output Y\n);"}
{"task_id": 729, "completion": "module ANN_ddiv_64ns_64ns_64_31\n    #(parameter\n        ID         = 7,\n        NUM_STAGE  = 31,\n        din0_WIDTH = 64,\n        din1_WIDTH = 64,\n        dout_WIDTH = 64\n    )(\n        input  wire                  clk,\n        input  wire                  reset,\n        input  wire                  ce,\n        input  wire [din0_WIDTH-1:0] din0,\n        input  wire [din1_WIDTH-1:0] din1,\n        output wire [dout_WIDTH-1:0] dout\n    );"}
{"task_id": 150, "completion": "module sata_command_layer ( input rst, input linkup, input clk, input data_in_clk, input data_in_clk_valid, input data_out_clk, input data_out_clk_valid, output command_layer_ready, output reg sata_busy, input send_sync_escape, input [15:0] user_features, output hard_drive_error, input execute_command_stb, input command_layer_reset, output reg pio_data_ready, input [7:0] hard_drive_command, input [15:0] sector_count, input [47:0] sector_address, input [31:0] user_din, input user_din_stb, output [1:0] user_din_ready, input [1:0] user_din_activate, output [23:0] user_din_size, output user_din_empty, output [31:0] user_dout, output user_dout_ready, input user_dout_activate, input user_dout_stb, output [23:0] user_dout_size, input transport_layer_ready, output reg sync_escape, output t_send_command_stb, output reg t_send_control_stb, output t_send_data_stb, input t_dma_activate_stb, input t_d2h_reg_stb, input t_pio_setup_stb, input t_d2h_data_stb, input t_dma_setup_stb, input t_set_device_bits_stb, input t_remote_abort, input t_xmit_error, input t_read_crc_error, input t_pio_response, input t_pio_direction, input [15:0] t_pio_transfer_count, input [7:0] t_pio_e_status, output [7:0] h2d_command, output reg [15:0] h2d_features, output [7:0] h2d_control, output [3:0] h2d_port_mult, output [7:0] h2d_device, output [47:0] h2d_lba, output [15:0] h2d_sector_count, input d2h_interrupt, input d2h_notification, input [3:0] d2h_port_mult, input [7:0] d2h_device, input [47:0] d2h_lba, input [15:0] d2h_sector_count, input [7:0] d2h_status, input [7:0] d2h_error, output d2h_error_bbk, output d2h_error_unc, output d2h_error_mc, output d2h_error_idnf, output d2h_error_mcr, output d2h_error_abrt, output d2h_error_tk0nf, output d2h_error_amnf, output d2h_status_bsy, output d2h_status_drdy, output d2h_status_dwf, output d2h_status_dsc, output d2h_status_drq, output d2h_status_corr, output d2h_status_idx, output d2h_status_err, input t_if_strobe, output [31:0] t_if_data, output t_if_ready, input t_if_activate, output [23:0] t_if_size, input t_of_strobe, input [31:0] t_of_data, output [1:0] t_of_ready, input [1:0] t_of_activate, output [23:0] t_of_size, output [3:0] cl_c_state, output [3:0] cl_w_state );"}
{"task_id": 653, "completion": "module wasca_external_sdram_controller_input_efifo_module ( clk, rd, reset_n, wr, wr_data, almost_empty, almost_full, empty, full, rd_data );"}
{"task_id": 732, "completion": "module sky130_fd_sc_lp__o32ai ( input  A1, input  A2, input  A3, input  B1, input  B2, output Y );"}
{"task_id": 721, "completion": "module Display #(parameter CLOCK_DIVISOR = 800, parameter CLK_BITS = 16)(input wire clk, input wire [15:0] data, output reg [6:0] segments, output wire [3:0] anodes);"}
{"task_id": 606, "completion": "module MemScore(\n    input [7:0] a,\n    input clk,\n    output [11:0] spo\n);"}
{"task_id": 696, "completion": "module sky130_fd_sc_lp__inputiso0n (    output X,    input A,    input SLEEP_B,    input VPWR,    input VGND,    input VPB,    input VNB);"}
{"task_id": 43, "completion": "module ddrOutput2#(\n  parameter nbo = 12, \n  parameter i2o = 4, \n  parameter nbi = nbo*i2o)\n( input ddrClk, \n  input dcmResetN, \n  output dcmLocked, \n  output[nbo-1:0] dap,dan, \n  output[nbo-1:0] dbp,dbn, \n  output[nbo-1:0] dcp,dcn, \n  output[nbo-1:0] ddp,ddn, \n  output sdrClk, \n  input [nbo-1:0] sdrData0, \n  input [nbo-1:0] sdrData1, \n  input [nbo-1:0] sdrData2, \n  input [nbo-1:0] sdrData3, \n  input [nbo-1:0] sdrData4, \n  input [nbo-1:0] sdrData5, \n  input [nbo-1:0] sdrData6, \n  input [nbo-1:0] sdrData7, \n  input [nbo-1:0] sdrData8, \n  input [nbo-1:0] sdrData9, \n  input [nbo-1:0] sdrDataA, \n  input [nbo-1:0] sdrDataB, \n  input [nbo-1:0] sdrDataC, \n  input [nbo-1:0] sdrDataD, \n  input [nbo-1:0] sdrDataE, \n  input [nbo-1:0] sdrDataF\n);"}
{"task_id": 742, "completion": "module sky130_fd_sc_ms__udp_dff$PR (\n    input wire D,\n    input wire RESET,\n    input wire CLK,\n    output reg Q\n);"}
{"task_id": 750, "completion": "module inst_ac_e(\n\toutput wire bus20040728_oc\n);"}
{"task_id": 700, "completion": "module data_mem(\n        input   wire        clk,\n        input   wire[31:0]  addr_dmem_ram_i,\n        input   wire[31:0]  wr_data_dmem_ram_i,\n        input   wire[0:3]   wr_strb_dmem_ram_i,\n        input   wire        wr_en_dmem_ram_i,\n        output  wire[31:0]  read_data_dmem_ram_o\n    );"}
{"task_id": 200, "completion": "module nios_altmemddr_0_phy_alt_mem_phy_seq_wrapper (phy_clk_1x, reset_phy_clk_1x_n, ctl_cal_success, ctl_cal_fail, ctl_cal_warning, ctl_cal_req, int_RANK_HAS_ADDR_SWAP, ctl_cal_byte_lane_sel_n, seq_pll_inc_dec_n, seq_pll_start_reconfig, seq_pll_select, phs_shft_busy, pll_resync_clk_index, pll_measure_clk_index, sc_clk_dp, scan_enable_dqs_config, scan_update, scan_din, scan_enable_ck, scan_enable_dqs, scan_enable_dqsn, scan_enable_dq, scan_enable_dm, hr_rsc_clk, seq_ac_addr, seq_ac_ba, seq_ac_cas_n, seq_ac_ras_n, seq_ac_we_n, seq_ac_cke, seq_ac_cs_n, seq_ac_odt, seq_ac_rst_n, seq_ac_sel, seq_mem_clk_disable, ctl_add_1t_ac_lat_internal, ctl_add_1t_odt_lat_internal, ctl_add_intermediate_regs_internal, seq_rdv_doing_rd, seq_rdp_reset_req_n, seq_rdp_inc_read_lat_1x, seq_rdp_dec_read_lat_1x, ctl_rdata, int_rdata_valid_1t, seq_rdata_valid_lat_inc, seq_rdata_valid_lat_dec, ctl_rlat, seq_poa_lat_dec_1x, seq_poa_lat_inc_1x, seq_poa_protection_override_1x, seq_oct_oct_delay, seq_oct_oct_extend, seq_oct_val, seq_wdp_dqs_burst, seq_wdp_wdata_valid, seq_wdp_wdata, seq_wdp_dm, seq_wdp_dqs, seq_wdp_ovride, seq_dqs_add_2t_delay, ctl_wlat, seq_mmc_start, mmc_seq_done, mmc_seq_value, mem_err_out_n, parity_error_n, dbg_clk, dbg_reset_n, dbg_addr, dbg_wr, dbg_rd, dbg_cs, dbg_wr_data, dbg_rd_data, dbg_waitrequest);"}
{"task_id": 697, "completion": "module div_5_13( input wire clk, output wire div5, output wire div13 );"}
{"task_id": 758, "completion": "module sky130_fd_sc_ms__or2 (input A, input B, output X);"}
{"task_id": 570, "completion": "module axis_mt19937_64(\n    input  wire         clk,\n    input  wire         rst,\n    output wire [63:0]  output_axis_tdata,\n    output wire         output_axis_tvalid,\n    input  wire         output_axis_tready,\n    output wire         busy,\n    input  wire [63:0]  seed_val,\n    input  wire         seed_start\n);"}
{"task_id": 719, "completion": "module eth_mac_mii #(parameter TARGET = \"GENERIC\", parameter CLOCK_INPUT_STYLE = \"BUFIO2\", parameter ENABLE_PADDING = 1, parameter MIN_FRAME_LENGTH = 64)(input wire rst, output wire rx_clk, output wire rx_rst, output wire tx_clk, output wire tx_rst, input wire [7:0] tx_axis_tdata, input wire tx_axis_tvalid, output wire tx_axis_tready, input wire tx_axis_tlast, input wire tx_axis_tuser, output wire [7:0] rx_axis_tdata, output wire rx_axis_tvalid, output wire rx_axis_tlast, output wire rx_axis_tuser, input wire mii_rx_clk, input wire [3:0] mii_rxd, input wire mii_rx_dv, input wire mii_rx_er, input wire mii_tx_clk, output wire [3:0] mii_txd, output wire mii_tx_en, output wire mii_tx_er, output wire tx_start_packet, output wire tx_error_underflow, output wire rx_start_packet, output wire rx_error_bad_frame, output wire rx_error_bad_fcs, input wire [7:0] ifg_delay);"}
{"task_id": 765, "completion": "module sky130_fd_sc_lp__bufkapwr_8 (    X    ,    A    ,    VPWR ,    VGND ,    KAPWR,    VPB  ,    VNB );"}
{"task_id": 714, "completion": "module axi_ad9361_alt_lvds_tx (\n  output          tx_clk_out_p,\n  output          tx_clk_out_n,\n  output          tx_frame_out_p,\n  output          tx_frame_out_n,\n  output  [ 5:0]  tx_data_out_p,\n  output  [ 5:0]  tx_data_out_n,\n  input           tx_clk,\n  input           clk,\n  input   [ 3:0]  tx_frame,\n  input   [ 5:0]  tx_data_0,\n  input   [ 5:0]  tx_data_1,\n  input   [ 5:0]  tx_data_2,\n  input   [ 5:0]  tx_data_3,\n  output          tx_locked);"}
{"task_id": 734, "completion": "module Lab1_Frustration_Module(\n    output reg [9:0] LEDR,\n    output [6:0] HEX0,\n    output [6:0] HEX1,\n    output [6:0] HEX2,\n    output [6:0] HEX3,\n    output [6:0] HEX4,\n    output [6:0] HEX5,\n    input [3:0] KEY,\n    input CLOCK_50\n);"}
{"task_id": 754, "completion": "module sky130_fd_sc_lp__or4b (    output X,    input A,    input B,    input C,    input D_N,    input VPWR,    input VGND,    input VPB,    input VNB );"}
{"task_id": 733, "completion": "module sky130_fd_sc_hs__o2bb2a (\n    VPWR,\n    VGND,\n    X   ,\n    A1_N,\n    A2_N,\n    B1  ,\n    B2\n);"}
{"task_id": 741, "completion": "module gci_std_display_sync_fifo #(\n        parameter P_N = 16,\n        parameter P_DEPTH = 4,\n        parameter P_DEPTH_N = 2\n    )(\n        input iCLOCK,\n        input inRESET,\n        input iREMOVE,\n        output [P_DEPTH_N:0] oCOUNT,\n        input iWR_EN,\n        input [P_N-1:0] iWR_DATA,\n        output oWR_FULL,\n        output oWR_ALMOST_FULL,\n        input iRD_EN,\n        output [P_N-1:0] oRD_DATA,\n        output oRD_EMPTY,\n        output oRD_ALMOST_EMPTY\n    );"}
{"task_id": 756, "completion": "module sky130_fd_sc_hdll__a2bb2o ("}
{"task_id": 557, "completion": "module a23_core(\ninput                       i_clk,\n\ninput                       i_irq,\ninput                       i_firq,\n\ninput                       i_system_rdy,\n\noutput      [31:0]          o_wb_adr,\noutput      [3:0]           o_wb_sel,\noutput                      o_wb_we,\ninput       [31:0]          i_wb_dat,\noutput      [31:0]          o_wb_dat,\noutput                      o_wb_cyc,\noutput                      o_wb_stb,\ninput                       i_wb_ack,\ninput                       i_wb_err\n);"}
{"task_id": 731, "completion": "module sky130_fd_sc_ls__a21o (\n    output X,\n    input A1,\n    input A2,\n    input B1,\n    input VPWR,\n    input VGND,\n    input VPB,\n    input VNB\n);"}
{"task_id": 766, "completion": "module sky130_fd_sc_ls__nand2b_4 (\n    Y,\n    A_N,\n    B,\n    VPWR,\n    VGND,\n    VPB,\n    VNB\n);"}
{"task_id": 154, "completion": "module ip_demux #(parameter M_COUNT = 4, parameter DATA_WIDTH = 8, parameter KEEP_ENABLE = (DATA_WIDTH>8), parameter KEEP_WIDTH = (DATA_WIDTH/8), parameter ID_ENABLE = 0, parameter ID_WIDTH = 8, parameter DEST_ENABLE = 0, parameter DEST_WIDTH = 8, parameter USER_ENABLE = 1, parameter USER_WIDTH = 1)(input  wire clk, input  wire rst, input  wire s_ip_hdr_valid, output wire s_ip_hdr_ready, input  wire [47:0] s_eth_dest_mac, input  wire [47:0] s_eth_src_mac, input  wire [15:0] s_eth_type, input  wire [3:0] s_ip_version, input  wire [3:0] s_ip_ihl, input  wire [5:0] s_ip_dscp, input  wire [1:0] s_ip_ecn, input  wire [15:0] s_ip_length, input  wire [15:0] s_ip_identification, input  wire [2:0] s_ip_flags, input  wire [12:0] s_ip_fragment_offset, input  wire [7:0] s_ip_ttl, input  wire [7:0] s_ip_protocol, input  wire [15:0] s_ip_header_checksum, input  wire [31:0] s_ip_source_ip, input  wire [31:0] s_ip_dest_ip, input  wire [DATA_WIDTH-1:0] s_ip_payload_axis_tdata, input  wire [KEEP_WIDTH-1:0] s_ip_payload_axis_tkeep, input  wire s_ip_payload_axis_tvalid, output wire s_ip_payload_axis_tready, input  wire s_ip_payload_axis_tlast, input  wire [ID_WIDTH-1:0] s_ip_payload_axis_tid, input  wire [DEST_WIDTH-1:0] s_ip_payload_axis_tdest, input  wire [USER_WIDTH-1:0] s_ip_payload_axis_tuser, output wire [M_COUNT-1:0] m_ip_hdr_valid, input  wire [M_COUNT-1:0] m_ip_hdr_ready, output wire [M_COUNT*48-1:0] m_eth_dest_mac, output wire [M_COUNT*48-1:0] m_eth_src_mac, output wire [M_COUNT*16-1:0] m_eth_type, output wire [M_COUNT*4-1:0] m_ip_version, output wire [M_COUNT*4-1:0] m_ip_ihl, output wire [M_COUNT*6-1:0] m_ip_dscp, output wire [M_COUNT*2-1:0] m_ip_ecn, output wire [M_COUNT*16-1:0] m_ip_length, output wire [M_COUNT*16-1:0] m_ip_identification, output wire [M_COUNT*3-1:0] m_ip_flags, output wire [M_COUNT*13-1:0] m_ip_fragment_offset, output wire [M_COUNT*8-1:0] m_ip_ttl, output wire [M_COUNT*8-1:0] m_ip_protocol, output wire [M_COUNT*16-1:0] m_ip_header_checksum, output wire [M_COUNT*32-1:0] m_ip_source_ip, output wire [M_COUNT*32-1:0] m_ip_dest_ip, output wire [M_COUNT*DATA_WIDTH-1:0] m_ip_payload_axis_tdata, output wire [M_COUNT*KEEP_WIDTH-1:0] m_ip_payload_axis_tkeep, output wire [M_COUNT-1:0] m_ip_payload_axis_tvalid, input  wire [M_COUNT-1:0] m_ip_payload_axis_tready, output wire [M_COUNT-1:0] m_ip_payload_axis_tlast, output wire [M_COUNT*ID_WIDTH-1:0] m_ip_payload_axis_tid, output wire [M_COUNT*DEST_WIDTH-1:0] m_ip_payload_axis_tdest, output wire [M_COUNT*USER_WIDTH-1:0] m_ip_payload_axis_tuser, input  wire enable, input  wire drop, input  wire [$clog2(M_COUNT)-1:0] select);"}
{"task_id": 757, "completion": "module debounce_switch  #(\n    parameter WIDTH=1, // width of the input and output signals\n    parameter N=3, // length of shift register\n    parameter RATE=125000 // clock division factor\n)(\n    input wire clk,\n    input wire rst,\n    input wire [WIDTH-1:0] in,\n    output wire [WIDTH-1:0] out\n);"}
{"task_id": 722, "completion": "module PCIeGen2x8If128(\n        output [7:0] pci_exp_txp,\n        output [7:0] pci_exp_txn,\n        input [7:0] pci_exp_rxp,\n        input [7:0] pci_exp_rxn,\n        output user_clk_out,\n        output user_reset_out,\n        output user_lnk_up,\n        output user_app_rdy,\n        output [5:0] tx_buf_av,\n        output tx_cfg_req,\n        output tx_err_drop,\n        output s_axis_tx_tready,\n        input [127:0] s_axis_tx_tdata,\n        input [15:0] s_axis_tx_tkeep,\n        input s_axis_tx_tlast,\n        input s_axis_tx_tvalid,\n        input [3:0] s_axis_tx_tuser,\n        input tx_cfg_gnt,\n        output [127:0] m_axis_rx_tdata,\n        output [15:0] m_axis_rx_tkeep,\n        output m_axis_rx_tlast,\n        output m_axis_rx_tvalid,\n        input m_axis_rx_tready,\n        output [21:0] m_axis_rx_tuser,\n        input rx_np_ok,\n        input rx_np_req,\n        output [11:0] fc_cpld,\n        output [7:0] fc_cplh,\n        output [11:0] fc_npd,\n        output [7:0] fc_nph,\n        output [11:0] fc_pd,\n        output [7:0] fc_ph,\n        input [2:0] fc_sel,\n        output [15:0] cfg_status,\n        output [15:0] cfg_command,\n        output [15:0] cfg_dstatus,\n        output [15:0] cfg_dcommand,\n        output [15:0] cfg_lstatus,\n        output [15:0] cfg_lcommand,\n        output [15:0] cfg_dcommand2,\n        output [2:0] cfg_pcie_link_state,\n        output cfg_pmcsr_pme_en,\n        output [1:0] cfg_pmcsr_powerstate,\n        output cfg_pmcsr_pme_status,\n        output cfg_received_func_lvl_rst,\n        input cfg_trn_pending,\n        input cfg_pm_halt_aspm_l0s,\n        input cfg_pm_halt_aspm_l1,\n        input cfg_pm_force_state_en,\n        input [1:0] cfg_pm_force_state,\n        input [63:0] cfg_dsn,\n        input cfg_interrupt,\n        output cfg_interrupt_rdy,\n        input cfg_interrupt_assert,\n        input [7:0] cfg_interrupt_di,\n        output [7:0] cfg_interrupt_do,\n        output [2:0] cfg_interrupt_mmenable,\n        output cfg_interrupt_msienable,\n        output cfg_interrupt_msixenable,\n        output cfg_interrupt_msixfm,\n        input cfg_interrupt_stat,\n        input [4:0] cfg_pciecap_interrupt_msgnum,\n        output cfg_to_turnoff,\n        input cfg_turnoff_ok,\n        output [7:0] cfg_bus_number,\n        output [4:0] cfg_device_number,\n        output [2:0] cfg_function_number,\n        input cfg_pm_wake,\n        input cfg_pm_send_pme_to,\n        input [7:0] cfg_ds_bus_number,\n        input [4:0] cfg_ds_device_number,\n        input [2:0] cfg_ds_function_number,\n        output cfg_bridge_serr_en,\n        output cfg_slot_control_electromech_il_ctl_pulse,\n        output cfg_root_control_syserr_corr_err_en,\n        output cfg_root_control_syserr_non_fatal_err_en,\n        output cfg_root_control_syserr_fatal_err_en,\n        output cfg_root_control_pme_int_en,\n        output cfg_aer_rooterr_corr_err_reporting_en,\n        output cfg_aer_rooterr_non_fatal_err_reporting_en,\n        output cfg_aer_rooterr_fatal_err_reporting_en,\n        output cfg_aer_rooterr_corr_err_received,\n        output cfg_aer_rooterr_non_fatal_err_received,\n        output cfg_aer_rooterr_fatal_err_received,\n        output [6:0] cfg_vc_tcvc_map,\n        input sys_clk,\n        input sys_rst_n\n    );"}
{"task_id": 240, "completion": "module io_schedule( reset, clk, ssd_command_fifo_empty_or_not, ssd_command_fifo_out, dram_permit, data_from_dram, dram_ready, rd_data_valid, gc_command_fifo_out, gc_command_fifo_empty_or_not, command_available, ssd_command_fifo_out_en, controller_command_fifo_in, controller_command_fifo_in_en, write_data_fifo_in, write_data_fifo_in_en, dram_request, release_dram, addr_to_dram, data_to_dram, dram_data_mask, dram_en, dram_read_or_write, data_to_dram_en, data_to_dram_end, data_to_dram_ready, gc_command_fifo_out_en, flash_left_capacity, free_block_fifo_heads, free_block_fifo_tails, register_ready, state );"}
{"task_id": 664, "completion": "module execute_load_store(\n\t\tinput wire iCLOCK,\n\t\tinput wire inRESET,\n\t\tinput wire iRESET_SYNC,\n\t\tinput wire iEVENT_HOLD,\n\t\tinput wire iEVENT_START,\n\t\tinput wire iEVENT_IRQ_FRONT2BACK,\n\t\tinput wire iEVENT_IRQ_BACK2FRONT,\n\t\tinput wire iEVENT_END,\n\t\tinput wire iSTATE_NORMAL,\n\t\tinput wire iSTATE_LOAD,\n\t\tinput wire iSTATE_STORE,\n\t\tinput wire iPREV_VALID,\n\t\tinput wire iPREV_EX_LDST,\n\t\tinput wire [31:0] iPREV_PSR,\n\t\tinput wire [31:0] iPREV_TIDR,\n\t\tinput wire iPREV_SPR_VALID,\n\t\tinput wire [31:0] iPREV_SPR,\n\t\tinput wire iPREV_LDST_RW,\n\t\tinput wire [31:0] iPREV_LDST_PDT,\n\t\tinput wire [31:0] iPREV_LDST_ADDR,\n\t\tinput wire [31:0] iPREV_LDST_DATA,\n\t\tinput wire [1:0] iPREV_LDST_ORDER,\n\t\tinput wire [3:0] iPREV_LDST_MASK,\n\t\tinput wire [1:0] iPREV_LOAD_SHIFT,\n\t\toutput wire oLDST_REQ,\n\t\tinput wire iLDST_BUSY,\n\t\toutput wire oLDST_RW,\n\t\toutput wire [31:0] oLDST_PDT,\n\t\toutput wire [31:0] oLDST_ADDR,\n\t\toutput wire [31:0] oLDST_DATA,\n\t\toutput wire [1:0] oLDST_ORDER,\n\t\toutput wire [3:0] oLDST_MASK,\n\t\toutput wire [13:0] oLDST_ASID,\n\t\toutput wire [1:0] oLDST_MMUMOD,\n\t\toutput wire [2:0] oLDST_MMUPS,\n\t\tinput wire iLDST_VALID,\n\t\tinput wire iNEXT_BUSY,\n\t\toutput wire oNEXT_VALID,\n\t\toutput wire oNEXT_SPR_VALID,\n\t\toutput wire [31:0] oNEXT_SPR,\n\t\toutput wire [1:0] oNEXT_SHIFT,\n\t\toutput wire [3:0] oNEXT_MASK\n\t);"}
{"task_id": 764, "completion": "module sky130_fd_sc_hdll__ebufn (\n    input  A,\n    output Z,\n    input  TE_B,\n    input  VPB,\n    input  VPWR,\n    input  VGND,\n    input  VNB\n);"}
{"task_id": 167, "completion": "module ghrd( output ADC_CONVST, output ADC_SCK, output ADC_SDI, input ADC_SDO, inout [15:0] ARDUINO_IO, inout ARDUINO_RESET_N, `ifdef ENABLE_CLK output CLK_I2C_SCL, inout CLK_I2C_SDA, `endif input FPGA_CLK1_50, input FPGA_CLK2_50, input FPGA_CLK3_50, inout [35:0] GPIO_0, inout [35:0] GPIO_1, `ifdef ENABLE_HPS inout HPS_CONV_USB_N, output [14:0] HPS_DDR3_ADDR, output [2:0] HPS_DDR3_BA, output HPS_DDR3_CAS_N, output HPS_DDR3_CKE, output HPS_DDR3_CK_N, output HPS_DDR3_CK_P, output HPS_DDR3_CS_N, output [3:0] HPS_DDR3_DM, inout [31:0] HPS_DDR3_DQ, inout [3:0] HPS_DDR3_DQS_N, inout [3:0] HPS_DDR3_DQS_P, output HPS_DDR3_ODT, output HPS_DDR3_RAS_N, output HPS_DDR3_RESET_N, input HPS_DDR3_RZQ, output HPS_DDR3_WE_N, output HPS_ENET_GTX_CLK, inout HPS_ENET_INT_N, output HPS_ENET_MDC, inout HPS_ENET_MDIO, input HPS_ENET_RX_CLK, input [3:0] HPS_ENET_RX_DATA, input HPS_ENET_RX_DV, output [3:0] HPS_ENET_TX_DATA, output HPS_ENET_TX_EN, inout HPS_GSENSOR_INT, inout HPS_I2C0_SCLK, inout HPS_I2C0_SDAT, inout HPS_I2C1_SCLK, inout HPS_I2C1_SDAT, inout HPS_KEY, inout HPS_LED, inout HPS_LTC_GPIO, output HPS_SD_CLK, inout HPS_SD_CMD, inout [3:0] HPS_SD_DATA, output HPS_SPIM_CLK, input HPS_SPIM_MISO, output HPS_SPIM_MOSI, inout HPS_SPIM_SS, input HPS_UART_RX, output HPS_UART_TX, input HPS_USB_CLKOUT, inout [7:0] HPS_USB_DATA, input HPS_USB_DIR, input HPS_USB_NXT, output HPS_USB_STP, `endif input [1:0] KEY, output [7:0] LED, input [3:0] SW );"}
{"task_id": 659, "completion": "module double_to_float(\n        input_a,\n        input_a_stb,\n        output_z_ack,\n        clk,\n        rst,\n        output_z,\n        output_z_stb,\n        input_a_ack);\n\n  input     clk;\n  input     rst;\n\n  input     [63:0] input_a;\n  input     input_a_stb;\n  output    input_a_ack;\n\n  output    [31:0] output_z;\n  output    output_z_stb;\n  input     output_z_ack;\n\n  reg       s_output_z_stb;\n  reg       [31:0] s_output_z;\n  reg       s_input_a_ack;\n\n  reg       [1:0] state;\n  parameter get_a         = 3'd0,\n            unpack        = 3'd1,\n            denormalise   = 3'd2,\n            put_z         = 3'd3;\n\n  reg [63:0] a;\n  reg [31:0] z;\n  reg [10:0] z_e;\n  reg [23:0] z_m;\n  reg guard;\n  reg round;\n  reg sticky;"}
{"task_id": 775, "completion": "module sky130_fd_sc_ls__o211ai (\n    Y ,\n    A1,\n    A2,\n    B1,\n    C1\n);"}
{"task_id": 686, "completion": "module image_processing_2d_design_auto_pc_4 (input wire aclk, input wire aresetn, input wire [11 : 0] s_axi_awid, input wire [31 : 0] s_axi_awaddr, input wire [3 : 0] s_axi_awlen, input wire [2 : 0] s_axi_awsize, input wire [1 : 0] s_axi_awburst, input wire [1 : 0] s_axi_awlock, input wire [3 : 0] s_axi_awcache, input wire [2 : 0] s_axi_awprot, input wire [3 : 0] s_axi_awqos, input wire s_axi_awvalid, output wire s_axi_awready, input wire [11 : 0] s_axi_wid, input wire [31 : 0] s_axi_wdata, input wire [3 : 0] s_axi_wstrb, input wire s_axi_wlast, input wire s_axi_wvalid, output wire s_axi_wready, output wire [11 : 0] s_axi_bid, output wire [1 : 0] s_axi_bresp, output wire s_axi_bvalid, input wire s_axi_bready, input wire [11 : 0] s_axi_arid, input wire [31 : 0] s_axi_araddr, input wire [3 : 0] s_axi_arlen, input wire [2 : 0] s_axi_arsize, input wire [1 : 0] s_axi_arburst, input wire [1 : 0] s_axi_arlock, input wire [3 : 0] s_axi_arcache, input wire [2 : 0] s_axi_arprot, input wire [3 : 0] s_axi_arqos, input wire s_axi_arvalid, output wire s_axi_arready, output wire [11 : 0] s_axi_rid, output wire [31 : 0] s_axi_rdata, output wire [1 : 0] s_axi_rresp, output wire s_axi_rlast, output wire s_axi_rvalid, input wire s_axi_rready, output wire [11 : 0] m_axi_awid, output wire [31 : 0] m_axi_awaddr, output wire [7 : 0] m_axi_awlen, output wire [2 : 0] m_axi_awsize, output wire [1 : 0] m_axi_awburst, output wire [0 : 0] m_axi_awlock, output wire [3 : 0] m_axi_awcache, output wire [2 : 0] m_axi_awprot, output wire [3 : 0] m_axi_awregion, output wire [3 : 0] m_axi_awqos, output wire m_axi_awvalid, input wire m_axi_awready, output wire [31 : 0] m_axi_wdata, output wire [3 : 0] m_axi_wstrb, output wire m_axi_wlast, output wire m_axi_wvalid, input wire m_axi_wready, input wire [11 : 0] m_axi_bid, input wire [1 : 0] m_axi_bresp, input wire m_axi_bvalid, output wire m_axi_bready, output wire [11 : 0] m_axi_arid, output wire [31 : 0] m_axi_araddr, output wire [7 : 0] m_axi_arlen, output wire [2 : 0] m_axi_arsize, output wire [1 : 0] m_axi_arburst, output wire [0 : 0] m_axi_arlock, output wire [3 : 0] m_axi_arcache, output wire [2 : 0] m_axi_arprot, output wire [3 : 0] m_axi_arregion, output wire [3 : 0] m_axi_arqos, output wire m_axi_arvalid, input wire m_axi_arready, input wire [11 : 0] m_axi_rid, input wire [31 : 0] m_axi_rdata, input wire [1 : 0] m_axi_rresp, input wire m_axi_rlast, input wire m_axi_rvalid, output wire m_axi_rready);"}
{"task_id": 728, "completion": "module rcn_master_buf(\n    input rst,\n    input clk,\n    input [68:0] rcn_in,\n    output [68:0] rcn_out,\n    input cs,\n    input [1:0] seq,\n    output busy,\n    input wr,\n    input [3:0] mask,\n    input [23:0] addr,\n    input [31:0] wdata,\n    output issue,\n    output [1:0] iss_seq,\n    output rdone,\n    output wdone,\n    output [1:0] rsp_seq,\n    output [3:0] rsp_mask,\n    output [23:0] rsp_addr,\n    output [31:0] rsp_data\n);"}
{"task_id": 767, "completion": "module nkmd_arch #(\n    parameter NKMDDBG_WIDTH = 16*8\n)(\n    input wire clk,\n    input wire rst,\n    input wire uart_rx,\n    output wire uart_tx,\n    input wire [23:0] dai_data_i,\n    input wire dai_ack_i,\n    output wire [23:0] dai_data_o,\n    input wire dai_pop_i,\n    output wire dai_ack_o,\n    `ifdef PROMW\n    input wire [31:0] prog_addr_i,\n    input wire [31:0] prog_data_i,\n    input wire prog_ack_i,\n    `endif\n    output wire [(NKMDDBG_WIDTH-1):0] dbgout_o,\n    input wire [(NKMDDBG_WIDTH-1):0] dbgin_i\n);"}
{"task_id": 743, "completion": "module sky130_fd_sc_lp__dfsbp_1 (\n    Q,\n    Q_N,\n    CLK,\n    D,\n    SET_B,\n    VPWR,\n    VGND,\n    VPB,\n    VNB\n);"}
{"task_id": 708, "completion": "module spi_cmd(\n        input clk,\n        input reset,\n        input trigger,\n        output reg busy,\n        input [8:0] data_in_count,\n        input data_out_count,\n        input [260 * 8 - 1 : 0] data_in,\n        output reg [7:0] data_out,\n        input quad_mode,\n        inout [3:0] DQio,\n        output reg S\n    );"}
{"task_id": 784, "completion": "module sky130_fd_sc_ms__and2 (input A, input B, input VPWR, input VGND, input VPB, input VNB, output X);"}
{"task_id": 776, "completion": "module sky130_fd_sc_ls__dlrbn (  output Q,  output Q_N,  input RESET_B,  input D,  input GATE_N );"}
{"task_id": 781, "completion": "module sky130_fd_sc_lp__tapvgnd ();"}
{"task_id": 649, "completion": "module polymorphic_list #(\n        parameter DATA_TYPE = 8\n    )(\n        input wire clk,\n        input wire rst_n,\n        input wire [DATA_TYPE-1:0] data_in,\n        output wire [DATA_TYPE-1:0] data_out,\n        output wire valid\n    );"}
{"task_id": 772, "completion": "module CPU_top(\n\tinput wire stp,rst,clk,\n\tinput wire [1:0] dptype,\n\tinput wire [4:0] regselect,\n\toutput wire exec,\n\toutput wire [5:0] initype,\n\toutput wire [3:0] node,\n\toutput wire [7:0] segment\n);"}
{"task_id": 786, "completion": "module sky130_fd_sc_lp__lsbufiso0p_lp (\n    output X,\n    input SLEEP,\n    input A,\n    input DESTPWR,\n    input VPWR,\n    input VGND,\n    input DESTVPB,\n    input VPB,\n    input VNB\n);"}
{"task_id": 782, "completion": "module peripheral_mult(clk, reset, d_in, cs, addr, rd, wr, d_out); input clk; input reset; input [15:0] d_in; input cs; input [3:0] addr; input rd; input wr; output reg [15:0] d_out;"}
{"task_id": 774, "completion": "module regfile(\n        input [31:0] Aselect,\n        input [31:0] Bselect,\n        input [31:0] Dselect,\n        input [31:0] dbus,\n        output [31:0] abus,\n        output [31:0] bbus,\n        input clk\n    );"}
{"task_id": 770, "completion": "module sky130_fd_sc_ms__or4bb_1 (    X   ,    A   ,    B   ,    C_N ,    D_N ,    VPWR,    VGND,    VPB ,    VNB );"}
{"task_id": 338, "completion": "module simple_type_system (\n    input wire clk,\n    input wire rst_n\n);"}
{"task_id": 615, "completion": "module axis_cobs_decode(\n    input  wire        clk,\n    input  wire        rst,\n    input  wire [7:0]  s_axis_tdata,\n    input  wire        s_axis_tvalid,\n    output wire        s_axis_tready,\n    input  wire        s_axis_tlast,\n    input  wire        s_axis_tuser,\n    output wire [7:0]  m_axis_tdata,\n    output wire        m_axis_tvalid,\n    input  wire        m_axis_tready,\n    output wire        m_axis_tlast,\n    output wire        m_axis_tuser\n);"}
{"task_id": 798, "completion": "module sky130_fd_sc_lp__o22a (    input  A1,    input  A2,    input  B1,    input  B2,    output X);"}
{"task_id": 755, "completion": "module devboard_top #( parameter CLK_FREQ = 32'd300_000_000 )(\n\toutput wire [7:0] led,\n\tinput wire [7:0] switch,\n\tinput wire [3:0] button,\n\tinput wire clk_100,\n\tinput wire clk_synth0_p,\n\tinput wire clk_synth0_n,\n\tinput wire GTX_CLK_0,\n\tinput wire ETH_REFCLK,\n\toutput wire ETH_RESET_0,\n\toutput wire [7:0] GMII_TXD_0,\n\toutput wire       GMII_TX_EN_0,\n\toutput wire       GMII_TX_ER_0,\n\toutput wire       GMII_TX_CLK_0,\n\tinput wire  [7:0] GMII_RXD_0,\n\tinput wire        GMII_RX_DV_0,\n\tinput wire        GMII_RX_ER_0,\n\tinput wire        GMII_RX_CLK_0,\n\tinput wire        MII_TX_CLK_0,\n\tinput wire        GMII_COL_0,\n\tinput wire        GMII_CRS_0\n);"}
{"task_id": 806, "completion": "module sky130_fd_sc_ls__edfxtp (Q, CLK, D, DE);"}
{"task_id": 811, "completion": "module sky130_fd_sc_hd__or4_1 ( X, A, B, C, D, VPWR, VGND, VPB, VNB );"}
{"task_id": 751, "completion": "module step_curve_short(\n  input clk,\n  input [15:0]stage_A2_cntr,\n  output reg CAL,\n  output CS,\n  output IS1,\n  output IS2,\n  output reg LE,\n  output R12,\n  output reg RBI,\n  output reg RESET,\n  output reg RPHI1,\n  output reg RPHI2,\n  output SBI,\n  output SEB,\n  output reg SPHI1,\n  output reg SPHI2,\n  output SR,\n  output [15:0]Aref,\n  output [15:0]RG,\n  output [15:0]Vana,\n  output [15:0]Vthr,\n  input reset_gen\n);"}
{"task_id": 818, "completion": "module sky130_fd_sc_ms__o32ai ( Y, A1, A2, A3, B1, B2, VPWR, VGND, VPB, VNB );"}
{"task_id": 812, "completion": "module sky130_fd_sc_ms__a32oi (\n    output Y,\n    input  A1,\n    input  A2,\n    input  A3,\n    input  B1,\n    input  B2\n);"}
{"task_id": 796, "completion": "module sky130_fd_sc_hdll__sedfxbp ( Q, Q_N, CLK, D, DE, SCD, SCE );"}
{"task_id": 761, "completion": "module SevenSegment(\n        output reg [6:0] display,\n        output reg [3:0] digit,\n        input wire [15:0] nums,\n        input wire rst,\n        input wire clk\n    );"}
{"task_id": 785, "completion": "module permuterBlock (inFlit0, inFlit1, stage, position, portStatus, outFlit0, outFlit1); input stage, position; input [4*`PORT_STAT_SIZE-1:0] portStatus; input [`IN_ROUTER_SIZE-1:0] inFlit0,inFlit1; output [`IN_ROUTER_SIZE-1:0] outFlit0, outFlit1;"}
{"task_id": 829, "completion": "module sky130_fd_sc_hs__fa_2 (COUT, SUM, A, B, CIN, VPWR, VGND);"}
{"task_id": 832, "completion": "module sky130_fd_sc_hs__sdfxtp (    VPWR,    VGND,    Q   ,    CLK ,    D   ,    SCD ,    SCE);"}
{"task_id": 831, "completion": "module barrel_shifter (input [7:0] d_in, input [2:0] shift_amount, output [7:0] d_out);"}
{"task_id": 826, "completion": "module sky130_fd_sc_hs__o211ai_4 (\n    Y   ,\n    A1  ,\n    A2  ,\n    B1  ,\n    C1  ,\n    VPWR,\n    VGND\n);"}
{"task_id": 828, "completion": "module IMUL2 (ia, ib, o);\n    input wire [3:0] ib, ia;\n    output [7:0] o;"}
{"task_id": 843, "completion": "module sky130_fd_sc_hdll__or3 (\n    X   ,\n    A   ,\n    B   ,\n    C   ,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 841, "completion": "module sky130_fd_sc_hs__o22ai_2 (Y, A1, A2, B1, B2, VPWR, VGND);"}
{"task_id": 799, "completion": "module sky130_fd_sc_hs__dlrtn (\n    VPWR   ,\n    VGND   ,\n    Q      ,\n    RESET_B,\n    D      ,\n    GATE_N\n);"}
{"task_id": 827, "completion": "module aceusb_access(\n\tinput ace_clkin,\n\tinput rst,\n\tinput [5:0] a,\n\tinput [15:0] di,\n\toutput reg [15:0] do,\n\tinput read,\n\tinput write,\n\toutput reg ack,\n\toutput [6:0] aceusb_a,\n\tinout [15:0] aceusb_d,\n\toutput reg aceusb_oe_n,\n\toutput reg aceusb_we_n,\n\toutput reg ace_mpce_n,\n\tinput ace_mpirq,\n\toutput usb_cs_n,\n\toutput usb_hpi_reset_n,\n\tinput usb_hpi_int\n);"}
{"task_id": 794, "completion": "module IO_Ctrl( CE, nRD, SCK, SDA, Dout, Start, Full, Empty, H_L, C_D, Ready,  A_Edge, A_TL, A_TH, B_Edge, B_TL, B_TH,  C_Edge, C_TL, C_TH, D_Edge, D_TL, D_TH, Depth, PerCnt, Delay, nPD, Trigg_Mode, Vthreshold, Tthreshold, CtrlReg, DB );"}
{"task_id": 792, "completion": "module resample_pipeline\n#(\n    parameter NUM_CH = 8,\n    parameter NUM_CH_LOG2 = 3,\n\n    parameter NUM_RATE = 5\n)(\n    input wire clk,\n    input wire rst,\n    input wire [(NUM_CH-1):0] rst_ch,\n\n    input wire [(NUM_RATE*NUM_CH-1):0] rate_i,\n    input wire [(NUM_CH-1):0] ack_i,\n    input wire [(24*NUM_CH-1):0] data_i,\n    output wire [(NUM_CH-1):0] pop_o,\n\n    input wire [(NUM_CH-1):0] pop_i,\n    output wire [(24*NUM_CH-1):0] data_o,\n    output wire [(NUM_CH-1):0] ack_o);"}
{"task_id": 834, "completion": "module sky130_fd_sc_ls__and4bb (\n    X   ,\n    A_N ,\n    B_N ,\n    C   ,\n    D   ,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 788, "completion": "module de3d_tc_fmt(\n    input de_clk,\n    input [5:0] tsize,\n    output reg [2:0] bpt,\n    output reg [4:0] tfmt,\n    output pal_mode\n);"}
{"task_id": 836, "completion": "module image_processing_2d_design_linescanner_image_capture_unit_1_1 (\n  input wire enable,\n  input wire [7 : 0] data,\n  output wire rst_cvc,\n  output wire rst_cds,\n  output wire sample,\n  input wire end_adc,\n  input wire lval,\n  input wire pixel_clock,\n  input wire main_clock_source,\n  output wire main_clock,\n  input wire n_reset,\n  output wire load_pulse,\n  output wire [7 : 0] pixel_data,\n  output wire pixel_captured\n);"}
{"task_id": 837, "completion": "module virtex5_dmem(\n\tclka,\n\tena,\n\twea,\n\taddra,\n\tdina,\n\tdouta);\n\ninput clka;\ninput ena;\ninput [1 : 0] wea;\ninput [9 : 0] addra;\ninput [15 : 0] dina;\noutput [15 : 0] douta;"}
{"task_id": 356, "completion": "module system_vga_sync_0_0(\n    input clk,\n    input rst,\n    output active,\n    output hsync,\n    output vsync,\n    output [9:0] xaddr,\n    output [9:0] yaddr\n);"}
{"task_id": 854, "completion": "module sky130_fd_sc_hs__fah (input wire A, input wire B, input wire CI, input wire VPWR, input wire VGND, output wire COUT, output wire SUM);"}
{"task_id": 853, "completion": "module sky130_fd_sc_ms__mux2i (output Y, input A0, input A1, input S);"}
{"task_id": 825, "completion": "module sky130_fd_sc_hs__o311ai ( Y, A1, A2, A3, B1, C1, VPWR, VGND );"}
{"task_id": 870, "completion": "module sky130_fd_sc_ls__xor2 (\n    input  A,\n    input  B,\n    output X\n);"}
{"task_id": 745, "completion": "module ddr3_s4_uniphy_example_sim_ddr3_s4_uniphy_example_sim_e0_if0_p0_afi_mux(\n\tmux_sel,\n\tafi_address,\n\tafi_bank,\n\tafi_cs_n,\n\tafi_cke,\n\tafi_odt,\n\tafi_ras_n,\n\tafi_cas_n,\n\tafi_we_n,\n\tafi_rst_n,\n\tafi_dqs_burst,\n\tafi_wdata,\n\tafi_wdata_valid,\n\tafi_dm,\n\tafi_rdata_en,\n\tafi_rdata_en_full,\n\tafi_rdata,\n\tafi_rdata_valid,\n\tseq_mux_address,\n\tseq_mux_bank,\n\tseq_mux_cs_n,\n\tseq_mux_cke,\n\tseq_mux_odt,\n\tseq_mux_ras_n,\n\tseq_mux_cas_n,\n\tseq_mux_we_n,\n\tseq_mux_reset_n,\n\tseq_mux_dqs_en,\n\tseq_mux_wdata,\n\tseq_mux_wdata_valid,\n\tseq_mux_dm,\n\tseq_mux_rdata_en,\n\tmux_seq_rdata,\n\tmux_seq_read_fifo_q,\n\tmux_seq_rdata_valid,\n\tmux_phy_address,\n\tmux_phy_bank,\n\tmux_phy_cs_n,\n\tmux_phy_cke,\n\tmux_phy_odt,\n\tmux_phy_ras_n,\n\tmux_phy_cas_n,\n\tmux_phy_we_n,\n\tmux_phy_reset_n,\n\tmux_phy_dqs_en,\n\tmux_phy_wdata,\n\tmux_phy_wdata_valid,\n\tmux_phy_dm,\n\tmux_phy_rdata_en,\n\tmux_phy_rdata_en_full,\n\tphy_mux_rdata,\n\tphy_mux_read_fifo_q,\n\tphy_mux_rdata_valid\n);"}
{"task_id": 860, "completion": "module sky130_fd_sc_ls__dlrtn_4 (\n    Q      ,\n    RESET_B,\n    D      ,\n    GATE_N\n    );"}
{"task_id": 869, "completion": "module sky130_fd_sc_ms__a31oi (Y, A1, A2, A3, B1);"}
{"task_id": 873, "completion": "module sky130_fd_sc_hd__o211a (\n    output X ,\n    input  A1,\n    input  A2,\n    input  B1,\n    input  C1\n);"}
{"task_id": 848, "completion": "module reg_1024x32b_3r_1w (/*AUTOARG*/\n    output [31:0]  rd0_data,\n    output [31:0]  rd1_data,\n    output [31:0]  rd2_data,\n    input [9:0]   rd0_addr,\n    input [9:0]   rd1_addr,\n    input [9:0]   rd2_addr,\n    input [9:0]   wr0_addr,\n    input [3:0]   wr0_en,\n    input [31:0]   wr0_data,\n    input          clk\n);"}
{"task_id": 801, "completion": "module merlin_alu(\n        input  wire                   clk_i,\n        input  wire                   stage_en_i,\n        input  wire                   reset_i,\n        input  wire    [`RV_XLEN-1:0] op_left_i,\n        input  wire    [`RV_XLEN-1:0] op_right_i,\n        output reg     [`RV_XLEN-1:0] op_result_o,\n        input  wire [`RV_ALUOP_RANGE] op_opcode_i,\n        input  wire    [`RV_XLEN-1:0] cmp_left_i,\n        input  wire    [`RV_XLEN-1:0] cmp_right_i,\n        output reg                    cmp_result_o,\n        input  wire             [2:0] cmp_opcode_i\n    );"}
{"task_id": 876, "completion": "module sky130_fd_sc_lp__dlrtp (    output Q,    input RESET_B,    input D,    input GATE   );"}
{"task_id": 866, "completion": "module lab2_labkit(\n        input clk,\n        input rst,\n        input reprogram,\n        input sensor,\n        input walk_btn,\n        input bit_a_new_time,\n        input bit_b_new_time,\n        input bit_c_new_time,\n        input bit_d_new_time,\n        input bit_a_time_sel,\n        input bit_b_time_sel,\n        output wire [6:0] siete,\n        output wire led_rm,\n        output wire led_ym,\n        output wire leg_gm,\n        output wire led_rs,\n        output wire led_ys,\n        output wire led_gs,\n        output wire led_walk\n    );"}
{"task_id": 881, "completion": "module sky130_fd_sc_lp__fa (input A, input B, input CIN, output COUT, output SUM, input VPB, input VPWR, input VGND, input VNB);"}
{"task_id": 833, "completion": "module pipeline(\n    input clk_in,\n    input RST\n);"}
{"task_id": 882, "completion": "module sounds_module (\n        input wire lrck,\n        input wire reset,\n        input wire [2:0] sound_code,\n        output wire [15:0] left_data,\n        output wire [15:0] right_data\n    );"}
{"task_id": 852, "completion": "module sky130_fd_sc_ms__nor3 (input A, input B, input C, output Y);"}
{"task_id": 847, "completion": "module sky130_fd_sc_hd__a41oi ( Y , A1, A2, A3, A4, B1 );"}
{"task_id": 871, "completion": "module DE1_SOC(\n\tinput CLOCK_50,\n\tinput CLOCK2_50,\n\tinput CLOCK3_50,\n\tinput CLOCK4_50,\n\toutput [12:0] DRAM_ADDR,\n\toutput [1:0] DRAM_BA,\n\toutput DRAM_CAS_N,\n\toutput DRAM_CKE,\n\toutput DRAM_CLK,\n\toutput DRAM_CS_N,\n\tinout [15:0] DRAM_DQ,\n\toutput DRAM_LDQM,\n\toutput DRAM_RAS_N,\n\toutput DRAM_UDQM,\n\toutput DRAM_WE_N,\n\toutput [6:0] HEX0,\n\toutput [6:0] HEX1,\n\toutput [6:0] HEX2,\n\toutput [6:0] HEX3,\n\toutput [6:0] HEX4,\n\toutput [6:0] HEX5,\n\tinput [3:0] KEY,\n\toutput [9:0] LEDR,\n\tinout PS2_CLK,\n\tinout PS2_CLK2,\n\tinout PS2_DAT,\n\tinout PS2_DAT2,\n\tinput [9:0] SW,\n\toutput [7:0] VGA_B,\n\toutput VGA_BLANK_N,\n\toutput VGA_CLK,\n\toutput [7:0] VGA_G,\n\toutput VGA_HS,\n\toutput [7:0] VGA_R,\n\toutput VGA_SYNC_N,\n\toutput VGA_VS\n);"}
{"task_id": 886, "completion": "module sky130_fd_sc_ms__dfbbp_1 (\n    Q      ,\n    Q_N    ,\n    D      ,\n    CLK    ,\n    SET_B  ,\n    RESET_B,\n    VPWR   ,\n    VGND   ,\n    VPB    ,\n    VNB\n);"}
{"task_id": 506, "completion": "module GS_cpld(\n        output reg         config_n,  \n        input  wire        status_n,  \n        input  wire        conf_done, \n        output wire        cs,        \n        input  wire        init_done, \n\n        input  wire        clk24in, \n        input  wire        clk20in, \n        input  wire        clksel0, \n        input  wire        clksel1, \n        output wire        clkout,  \n\n        input  wire        clkin, \n\n        input  wire        coldres_n, \n        output reg         warmres_n,\n\n        input  wire        iorq_n, \n        input  wire        mreq_n,\n        input  wire        rd_n,\n        input  wire        wr_n,\n\n        inout  wire [ 7:0] d, \n\n        input  wire        a6,  \n        input  wire        a7,\n        input  wire        a10,\n        input  wire        a11,\n        input  wire        a12,\n        input  wire        a13,\n        input  wire        a14,\n        input  wire        a15,\n\n        output wire        mema14,\n        output wire        mema15,\n        output wire        mema19,\n\n        inout  wire        romcs_n,\n        inout  wire        memoe_n,\n        inout  wire        memwe_n,\n\n        input  wire        in_ramcs0_n,\n        input  wire        in_ramcs1_n,\n        input  wire        in_ramcs2_n,\n        input  wire        in_ramcs3_n,\n\n        output wire        out_ramcs0_n,\n        output wire        out_ramcs1_n,\n\n        output wire        ra6,  \n        output wire        ra7,\n        output wire        ra10,\n        output wire        ra11,\n        output wire        ra12,\n        output wire        ra13,\n\n        inout  wire [ 7:0] rd \n    );"}
{"task_id": 888, "completion": "module sky130_fd_sc_ms__o41ai_4 (\n    Y   ,\n    A1  ,\n    A2  ,\n    A3  ,\n    A4  ,\n    B1  ,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 449, "completion": "module cf_clkgen (\n  input           ref_clk,\n  output          clk,\n  input           up_rstn,\n  input           up_clk,\n  input           up_sel,\n  input           up_rwn,\n  input   [ 4:0]  up_addr,\n  input   [31:0]  up_wdata,\n  output  [31:0]  up_rdata,\n  output          up_ack);\n  parameter MMCM_TYPE   = 'd0;\n  parameter MMCM_IDLE   = 'h0;\n  parameter MMCM_READ   = 'h1;\n  parameter MMCM_RDRDY  = 'h2;\n  parameter MMCM_WRITE  = 'h3;\n  parameter MMCM_WRRDY  = 'h4;"}
{"task_id": 791, "completion": "module characters(input [7:0] select, output reg [39:0] vec_char);"}
{"task_id": 762, "completion": "module system_auto_us_0 (   input wire s_axi_aclk,   input wire s_axi_aresetn,   input wire [31 : 0] s_axi_awaddr,   input wire [7 : 0] s_axi_awlen,   input wire [2 : 0] s_axi_awsize,   input wire [1 : 0] s_axi_awburst,   input wire [0 : 0] s_axi_awlock,   input wire [3 : 0] s_axi_awcache,   input wire [2 : 0] s_axi_awprot,   input wire [3 : 0] s_axi_awregion,   input wire [3 : 0] s_axi_awqos,   input wire s_axi_awvalid,   output wire s_axi_awready,   input wire [31 : 0] s_axi_wdata,   input wire [3 : 0] s_axi_wstrb,   input wire s_axi_wlast,   input wire s_axi_wvalid,   output wire s_axi_wready,   output wire [1 : 0] s_axi_bresp,   output wire s_axi_bvalid,   input wire s_axi_bready,   input wire [31 : 0] s_axi_araddr,   input wire [7 : 0] s_axi_arlen,   input wire [2 : 0] s_axi_arsize,   input wire [1 : 0] s_axi_arburst,   input wire [0 : 0] s_axi_arlock,   input wire [3 : 0] s_axi_arcache,   input wire [2 : 0] s_axi_arprot,   input wire [3 : 0] s_axi_arregion,   input wire [3 : 0] s_axi_arqos,   input wire s_axi_arvalid,   output wire s_axi_arready,   output wire [31 : 0] s_axi_rdata,   output wire [1 : 0] s_axi_rresp,   output wire s_axi_rlast,   output wire s_axi_rvalid,   input wire s_axi_rready,   output wire [31 : 0] m_axi_awaddr,   output wire [7 : 0] m_axi_awlen,   output wire [2 : 0] m_axi_awsize,   output wire [1 : 0] m_axi_awburst,   output wire [0 : 0] m_axi_awlock,   output wire [3 : 0] m_axi_awcache,   output wire [2 : 0] m_axi_awprot,   output wire [3 : 0] m_axi_awregion,   output wire [3 : 0] m_axi_awqos,   output wire m_axi_awvalid,   input wire m_axi_awready,   output wire [127 : 0] m_axi_wdata,   output wire [15 : 0] m_axi_wstrb,   output wire m_axi_wlast,   output wire m_axi_wvalid,   input wire m_axi_wready,   input wire [1 : 0] m_axi_bresp,   input wire m_axi_bvalid,   output wire m_axi_bready,   output wire [31 : 0] m_axi_araddr,   output wire [7 : 0] m_axi_arlen,   output wire [2 : 0] m_axi_arsize,   output wire [1 : 0] m_axi_arburst,   output wire [0 : 0] m_axi_arlock,   output wire [3 : 0] m_axi_arcache,   output wire [2 : 0] m_axi_arprot,   output wire [3 : 0] m_axi_arregion,   output wire [3 : 0] m_axi_arqos,   output wire m_axi_arvalid,   input wire m_axi_arready,   input wire [127 : 0] m_axi_rdata,   input wire [1 : 0] m_axi_rresp,   input wire m_axi_rlast,   input wire m_axi_rvalid,   output wire m_axi_rready);"}
{"task_id": 897, "completion": "module sky130_fd_sc_lp__einvn (\n    Z   ,\n    A   ,\n    TE_B,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 899, "completion": "module cfgtag #(parameter packet_ID_width_p = 4, parameter RELAY_NUM = 5)(input clk, input reset, input cfg_clk_i, input cfg_bit_i, input credit_i, output valid_o, output logic [31:0] data_o);"}
{"task_id": 793, "completion": "module pikachu_down_pixel (\n  input wire clka,\n  input wire [0 : 0] wea,\n  input wire [12 : 0] addra,\n  input wire [11 : 0] dina,\n  output wire [11 : 0] douta\n);"}
{"task_id": 861, "completion": "module image_processing_2d_design_frequency_analyzer_manager_1_0 (\n  input wire [7 : 0] data,\n  input wire pixel_clock,\n  input wire start,\n  input wire stop,\n  input wire clear,\n  output wire irq,\n  input wire s00_axi_aclk,\n  input wire s00_axi_aresetn,\n  input wire [3 : 0] s00_axi_awaddr,\n  input wire [2 : 0] s00_axi_awprot,\n  input wire s00_axi_awvalid,\n  output wire s00_axi_awready,\n  input wire [31 : 0] s00_axi_wdata,\n  input wire [3 : 0] s00_axi_wstrb,\n  input wire s00_axi_wvalid,\n  output wire s00_axi_wready,\n  output wire [1 : 0] s00_axi_bresp,\n  output wire s00_axi_bvalid,\n  input wire s00_axi_bready,\n  input wire [3 : 0] s00_axi_araddr,\n  input wire [2 : 0] s00_axi_arprot,\n  input wire s00_axi_arvalid,\n  output wire s00_axi_arready,\n  output wire [31 : 0] s00_axi_rdata,\n  output wire [1 : 0] s00_axi_rresp,\n  output wire s00_axi_rvalid,\n  input wire s00_axi_rready\n);"}
{"task_id": 894, "completion": "module sky130_fd_sc_lp__dfbbp ( Q, Q_N, D, CLK, SET_B, RESET_B, VPWR, VGND, VPB, VNB );"}
{"task_id": 736, "completion": "module alt_mem_ddrx_lpddr2_addr_cmd #(\n        parameter CFG_PORT_WIDTH_OUTPUT_REGD = 1,\n        parameter CFG_MEM_IF_CHIP = 1,\n        parameter CFG_MEM_IF_CKE_WIDTH = 1,\n        parameter CFG_MEM_IF_ADDR_WIDTH = 20,\n        parameter CFG_MEM_IF_ROW_WIDTH = 15,\n        parameter CFG_MEM_IF_COL_WIDTH = 12,\n        parameter CFG_MEM_IF_BA_WIDTH = 3,\n        parameter CFG_DWIDTH_RATIO = 2\n    )(\n        input ctl_clk,\n        input ctl_reset_n,\n        input ctl_cal_success,\n        input [CFG_PORT_WIDTH_OUTPUT_REGD -1:0] cfg_output_regd,\n        input cfg_enable_chipsel_for_sideband,\n        input do_write,\n        input do_read,\n        input do_auto_precharge,\n        input do_activate,\n        input do_precharge,\n        input [CFG_MEM_IF_CHIP-1:0] do_precharge_all,\n        input [CFG_MEM_IF_CHIP-1:0] do_refresh,\n        input [CFG_MEM_IF_CHIP-1:0] do_self_refresh,\n        input [CFG_MEM_IF_CHIP-1:0] do_power_down,\n        input [CFG_MEM_IF_CHIP-1:0] do_deep_pwrdwn,\n        input do_lmr,\n        input do_lmr_read,\n        input do_refresh_1bank,\n        input do_burst_terminate,\n        input [CFG_MEM_IF_CHIP-1:0] to_chip,\n        input [CFG_MEM_IF_BA_WIDTH-1:0] to_bank,\n        input [CFG_MEM_IF_ROW_WIDTH-1:0] to_row,\n        input [CFG_MEM_IF_COL_WIDTH-1:0] to_col,\n        input [7:0] to_lmr,\n        input [7:0] lmr_opcode,\n        output [(CFG_MEM_IF_CKE_WIDTH * (CFG_DWIDTH_RATIO/2)) - 1:0] afi_cke,\n        output [(CFG_MEM_IF_CHIP * (CFG_DWIDTH_RATIO/2)) - 1:0] afi_cs_n,\n        output [(CFG_MEM_IF_ADDR_WIDTH * (CFG_DWIDTH_RATIO/2)) - 1:0] afi_addr,\n        output [(CFG_DWIDTH_RATIO/2) - 1:0] afi_rst_n\n    );"}
{"task_id": 768, "completion": "module ram_var_w_var_r #(\n  parameter integer REGISTERS    = 0,\n  parameter integer LOG2WIDTH_WR = 6,\n  parameter integer LOG2WIDTH_RD = 6,\n  parameter         DUMMY = 0\n )(\n      input                         rclk,\n      input        [14-LOG2WIDTH_RD:0] raddr,\n      input                            ren,\n      input                            regen,\n      output [(1 << LOG2WIDTH_RD)-1:0] data_out,\n      input                            wclk,\n      input        [14-LOG2WIDTH_WR:0] waddr,\n      input                            we,\n      input                     [ 7:0] web,\n      input  [(1 << LOG2WIDTH_WR)-1:0] data_in\n );"}
{"task_id": 214, "completion": "module fpga (\n    input  wire       clk_125mhz_p,\n    input  wire       clk_125mhz_n,\n    input  wire       reset,\n    input  wire       btnu,\n    input  wire       btnl,\n    input  wire       btnd,\n    input  wire       btnr,\n    input  wire       btnc,\n    input  wire [3:0] sw,\n    output wire [7:0] led,\n    inout  wire       i2c_scl,\n    inout  wire       i2c_sda,\n    input  wire       qsfp_rx1_p,\n    input  wire       qsfp_rx1_n,\n    input  wire       qsfp_rx2_p,\n    input  wire       qsfp_rx2_n,\n    input  wire       qsfp_rx3_p,\n    input  wire       qsfp_rx3_n,\n    input  wire       qsfp_rx4_p,\n    input  wire       qsfp_rx4_n,\n    output wire       qsfp_tx1_p,\n    output wire       qsfp_tx1_n,\n    output wire       qsfp_tx2_p,\n    output wire       qsfp_tx2_n,\n    output wire       qsfp_tx3_p,\n    output wire       qsfp_tx3_n,\n    output wire       qsfp_tx4_p,\n    output wire       qsfp_tx4_n,\n    input  wire       qsfp_mgt_refclk_0_p,\n    input  wire       qsfp_mgt_refclk_0_n,\n    output wire       qsfp_modsell,\n    output wire       qsfp_resetl,\n    input  wire       qsfp_modprsl,\n    input  wire       qsfp_intl,\n    output wire       qsfp_lpmode,\n    input  wire       phy_sgmii_rx_p,\n    input  wire       phy_sgmii_rx_n,\n    output wire       phy_sgmii_tx_p,\n    output wire       phy_sgmii_tx_n,\n    input  wire       phy_sgmii_clk_p,\n    input  wire       phy_sgmii_clk_n,\n    output wire       phy_reset_n,\n    input  wire       phy_int_n,\n    input  wire       uart_rxd,\n    output wire       uart_txd,\n    output wire       uart_rts,\n    input  wire       uart_cts\n);"}
{"task_id": 901, "completion": "module sky130_fd_sc_lp__invlp_1 (\n    Y,\n    A,\n    VPWR,\n    VGND,\n    VPB,\n    VNB\n);"}
{"task_id": 913, "completion": "module sirv_gnrl_ram\n#(parameter DP = 32,\n  parameter DW = 32,\n  parameter FORCE_X2ZERO = 1,\n  parameter MW = 4,\n  parameter AW = 15\n  ) (\n  input            sd,\n  input            ds,\n  input            ls,\n\n  input            rst_n,\n  input            clk,\n  input            cs,\n  input            we,\n  input [AW-1:0]   addr,\n  input [DW-1:0]   din,\n  input [MW-1:0]   wem,\n  output[DW-1:0]   dout\n);"}
{"task_id": 905, "completion": "module sky130_fd_sc_lp__o2111ai (\n        input A1,\n        input A2,\n        input B1,\n        input C1,\n        input D1,\n        input VPWR,\n        input VGND,\n        input VPB,\n        input VNB,\n        output Y\n    );"}
{"task_id": 880, "completion": "module sky130_fd_sc_hdll__tapvpwrvgnd ();"}
{"task_id": 898, "completion": "module avst2axis #(\n    parameter DATA_WIDTH = 8,\n    parameter KEEP_WIDTH = (DATA_WIDTH/8),\n    parameter KEEP_ENABLE = (DATA_WIDTH>8),\n    parameter EMPTY_WIDTH = $clog2(KEEP_WIDTH),\n    parameter BYTE_REVERSE = 0\n)(\n    input  wire                    clk,\n    input  wire                    rst,\n\n    output wire                    avst_ready,\n    input  wire                    avst_valid,\n    input  wire [DATA_WIDTH-1:0]   avst_data,\n    input  wire                    avst_startofpacket,\n    input  wire                    avst_endofpacket,\n    input  wire [EMPTY_WIDTH-1:0]  avst_empty,\n    input  wire                    avst_error,\n\n    output wire [DATA_WIDTH-1:0]   axis_tdata,\n    output wire [KEEP_WIDTH-1:0]   axis_tkeep,\n    output wire                    axis_tvalid,\n    input  wire                    axis_tready,\n    output wire                    axis_tlast,\n    output wire                    axis_tuser\n);"}
{"task_id": 851, "completion": "module mlite_cpu (clk, reset_in, intr_in, mem_address, mem_data_w, mem_data_r, mem_byte_sel, mem_write, mem_pause); input clk; input reset_in; input intr_in; input [31:0] mem_data_r; input mem_pause; output [31:0] mem_address; output [31:0] mem_data_w; output [3:0] mem_byte_sel; output mem_write;"}
{"task_id": 919, "completion": "module FIFO10(CLK, RST, ENQ, FULL_N, DEQ, EMPTY_N, CLR);"}
{"task_id": 891, "completion": "module tx_data_pipeline #(parameter C_DATA_WIDTH = 128, parameter C_PIPELINE_INPUT = 1, parameter C_PIPELINE_OUTPUT = 1, parameter C_MAX_PAYLOAD_DWORDS = 256, parameter C_DEPTH_PACKETS = 10, parameter C_VENDOR = \"ALTERA\")(input CLK, input RST_IN, input WR_TX_DATA_VALID, input [C_DATA_WIDTH-1:0] WR_TX_DATA, input WR_TX_DATA_START_FLAG, input [clog2s(C_DATA_WIDTH/32)-1:0] WR_TX_DATA_START_OFFSET, input WR_TX_DATA_END_FLAG, input [clog2s(C_DATA_WIDTH/32)-1:0] WR_TX_DATA_END_OFFSET, output WR_TX_DATA_READY, input [(C_DATA_WIDTH/32)-1:0] RD_TX_DATA_WORD_READY, output [C_DATA_WIDTH-1:0] RD_TX_DATA, output [(C_DATA_WIDTH/32)-1:0] RD_TX_DATA_END_FLAGS, output RD_TX_DATA_START_FLAG, output [(C_DATA_WIDTH/32)-1:0] RD_TX_DATA_WORD_VALID, output RD_TX_DATA_PACKET_VALID);"}
{"task_id": 912, "completion": "module sky130_fd_sc_lp__o221ai (\n    output Y ,\n    input  A1,\n    input  A2,\n    input  B1,\n    input  B2,\n    input  C1\n);"}
{"task_id": 844, "completion": "module RAM_WRITE(\n  input clka,\n  input [0 : 0] wea,\n  input [9 : 0] addra,\n  input [255 : 0] dina,\n  output [255 : 0] douta,\n  input clkb,\n  input [0 : 0] web,\n  input [14 : 0] addrb,\n  input [7 : 0] dinb,\n  output [7 : 0] doutb\n);"}
{"task_id": 925, "completion": "module sky130_fd_sc_hd__buf_8 (\n    X,\n    A\n);"}
{"task_id": 900, "completion": "module PE(clk, reset, ctrl, d0, d1, d2, out);"}
{"task_id": 929, "completion": "module sky130_fd_sc_hs__dlclkp (\n    input  CLK ,\n    input  GATE,\n    output GCLK\n);"}
{"task_id": 908, "completion": "module sky130_fd_sc_hs__dlrbp ( VPWR, VGND, Q, Q_N, RESET_B, D, GATE );"}
{"task_id": 887, "completion": "module aludec(\n    input [5:0] funct,\n    input [3:0] aluop,\n    output reg [2:0] alucontrol,\n    output reg signd,\n    output reg multseld\n);"}
{"task_id": 937, "completion": "module sky130_fd_sc_hs__a211o (\n    input  A1,\n    input  A2,\n    input  B1,\n    input  C1,\n    output X\n);"}
{"task_id": 935, "completion": "module sky130_fd_sc_hd__o2111a_2 (X, A1, A2, B1, C1, D1, VPWR, VGND, VPB, VNB);"}
{"task_id": 923, "completion": "module zynq_design_1_wrapper(\n    inout [14:0]DDR_addr,\n    inout [2:0]DDR_ba,\n    inout DDR_cas_n,\n    inout DDR_ck_n,\n    inout DDR_ck_p,\n    inout DDR_cke,\n    inout DDR_cs_n,\n    inout [3:0]DDR_dm,\n    inout [31:0]DDR_dq,\n    inout [3:0]DDR_dqs_n,\n    inout [3:0]DDR_dqs_p,\n    inout DDR_odt,\n    inout DDR_ras_n,\n    inout DDR_reset_n,\n    inout DDR_we_n,\n    inout FIXED_IO_ddr_vrn,\n    inout FIXED_IO_ddr_vrp,\n    inout [53:0]FIXED_IO_mio,\n    inout FIXED_IO_ps_clk,\n    inout FIXED_IO_ps_porb,\n    inout FIXED_IO_ps_srstb,\n    output [7:0]leds_8bits_tri_o);"}
{"task_id": 933, "completion": "module sky130_fd_sc_hs__nor4 (    VPWR,    VGND,    Y,    A,    B,    C,    D);"}
{"task_id": 817, "completion": "module  mult_fix8b_0002  (\n            clock0,\n            dataa_0,\n            datab_0,\n            result);\n\n            input  clock0;\n            input [7:0] dataa_0;\n            input [7:0] datab_0;\n            output [15:0] result;"}
{"task_id": 941, "completion": "module sky130_fd_sc_ms__dfrtn (input D, output Q, input RESET_B, input CLK_N, input VPB, input VPWR, input VGND, input VNB);"}
{"task_id": 910, "completion": "module sa1_iram(  clka,  wea,  addra,  dina,  douta,  clkb,  web,  addrb,  dinb,  doutb);  input clka;  input [0 : 0] wea;  input [10 : 0] addra;  input [7 : 0] dina;  output [7 : 0] douta;  input clkb;  input [0 : 0] web;  input [10 : 0] addrb;  input [7 : 0] dinb;  output [7 : 0] doutb;"}
{"task_id": 930, "completion": "module small_hb_dec  #(parameter WIDTH=18) (input clk, input rst, input bypass, input run, input stb_in, input [WIDTH-1:0] data_in, output reg stb_out, output reg [WIDTH-1:0] data_out);"}
{"task_id": 872, "completion": "module i2c_writeonly (sclk, wen, wa, di, sync, busy, scl, sda, scl_en, sda_en, frame_no); input sclk; input wen; input [3:0] wa; input [15:0] di; input sync; output busy; output scl; output sda; output scl_en; output sda_en; output [2:0] frame_no;"}
{"task_id": 824, "completion": "module aes_sbox( input wire [31 : 0]  sboxw, output wire [31 : 0] new_sboxw );"}
{"task_id": 934, "completion": "module zet_core (input clk, input rst, input intr, output inta, input nmi, output nmia, output [19:0] cpu_adr_o, input [15:0] iid_dat_i, input [15:0] cpu_dat_i, output [15:0] cpu_dat_o, output cpu_byte_o, input cpu_block, output cpu_mem_op, output cpu_m_io, output cpu_we_o, output [19:0] pc);"}
{"task_id": 814, "completion": "module fpga (\n    input  wire       clk_125mhz_p,\n    input  wire       clk_125mhz_n,\n    input  wire       reset,\n    input  wire       btnu,\n    input  wire       btnl,\n    input  wire       btnd,\n    input  wire       btnr,\n    input  wire       btnc,\n    input  wire [3:0] sw,\n    output wire [7:0] led,\n    input  wire       phy_sgmii_rx_p,\n    input  wire       phy_sgmii_rx_n,\n    output wire       phy_sgmii_tx_p,\n    output wire       phy_sgmii_tx_n,\n    input  wire       phy_sgmii_clk_p,\n    input  wire       phy_sgmii_clk_n,\n    output wire       phy_reset_n,\n    input  wire       phy_int_n,\n    input  wire       uart_rxd,\n    output wire       uart_txd,\n    output wire       uart_rts,\n    input  wire       uart_cts\n);"}
{"task_id": 629, "completion": "module dc_fifo #(\n  parameter                   DATA_WIDTH    = 32,\n  parameter                   ADDRESS_WIDTH = 8\n)(\n  input                       read_clk,\n  input                       write_clk,\n\n  input                       rst,\n  input                       clear,\n\n  input [DATA_WIDTH - 1:0]    data_in,\n  input                       write,\n  output                      full,\n\n  output  [DATA_WIDTH - 1: 0] data_out,\n  input                       read,\n  output                      empty,\n\n  output                      ready\n);"}
{"task_id": 950, "completion": "module qa_wrapper\n  #(\n    parameter WDTH = 32\n    )\n   (\n    input wire            clk,\n    input wire            reset,\n    input wire [WDTH-1:0] in_data,\n    input wire            in_nd,\n    output reg [WDTH-1:0] out_data,\n    output reg            out_nd\n    );"}
{"task_id": 940, "completion": "module bd_clk_wiz_0_0 (\n  output        clk_ref_i,\n  output        aclk,\n  output        sys_clk_i,\n  input         resetn,\n  input         clk_in1\n);"}
{"task_id": 921, "completion": "module bw_clk_cl_jbusr_jbus(cluster_grst_l ,so ,dbginit_l ,rclk ,si ,se ,adbginit_l ,gdbginit_l ,arst_l ,grst_l ,cluster_cken ,gclk );"}
{"task_id": 865, "completion": "module bsg_sbox #(parameter `BSG_INV_PARAM(num_channels_p), parameter `BSG_INV_PARAM(channel_width_p), parameter pipeline_indir_p = 0, parameter pipeline_outdir_p = 0, parameter one_hot_p = 1)(input clk_i, input reset_i, input calibration_done_i, input [num_channels_p-1:0] channel_active_i, input [num_channels_p-1:0] in_v_i, input [channel_width_p-1:0] in_data_i [num_channels_p-1:0], output [num_channels_p-1:0] in_yumi_o, output [num_channels_p-1:0] in_v_o, output [channel_width_p-1:0] in_data_o [num_channels_p-1:0], input [num_channels_p-1:0] in_yumi_i, input [num_channels_p-1:0] out_me_v_i, input [channel_width_p-1:0] out_me_data_i [num_channels_p-1:0], output [num_channels_p-1:0] out_me_ready_o, output [num_channels_p-1:0] out_me_v_o, output [channel_width_p-1:0] out_me_data_o [num_channels_p-1:0], input [num_channels_p-1:0] out_me_ready_i);"}
{"task_id": 954, "completion": "module vga_blank(input clk, output reg [11:0] pixel_count, line_count, output reg hsync, output wire vsync, output reg fb_reset, output wire fb_enable);"}
{"task_id": 953, "completion": "module EHRU_3 (    CLK,    read_0,    write_0,    EN_write_0,    read_1,    write_1,    EN_write_1,    read_2,    write_2,    EN_write_2);    parameter            DATA_SZ = 1;    parameter            RESET_VAL = 0;    input                CLK;    output [DATA_SZ-1:0] read_0;    input  [DATA_SZ-1:0] write_0;    input                EN_write_0;    output [DATA_SZ-1:0] read_1;    input  [DATA_SZ-1:0] write_1;    input                EN_write_1;    output [DATA_SZ-1:0] read_2;    input  [DATA_SZ-1:0] write_2;    input                EN_write_2;"}
{"task_id": 942, "completion": "module sky130_fd_io__top_sio_macro (\n           input        DFT_REFGEN      ,\n           input  [1:0] SLOW            ,\n           output [1:0] IN              ,\n           input  [1:0] INP_DIS         ,\n           output [1:0] IN_H            ,\n           input  [1:0] OUT             ,\n           inout  [1:0] PAD             ,\n           inout  [1:0] PAD_A_ESD_0_H   ,\n           inout  [1:0] PAD_A_ESD_1_H   ,\n           inout  [1:0] PAD_A_NOESD_H   ,\n           inout        AMUXBUS_A       ,\n           inout        AMUXBUS_B       ,\n           input  [2:0] DM0             ,\n           input  [2:0] DM1             ,\n           input        ENABLE_H        ,\n           input        ENABLE_VDDA_H   ,\n           input  [1:0] HLD_H_N         ,\n           input        HLD_H_N_REFGEN  ,\n           input  [1:0] HLD_OVR         ,\n           input  [1:0] IBUF_SEL        ,\n           input        IBUF_SEL_REFGEN ,\n           input  [1:0] OE_N            ,\n           input  [2:0] VOH_SEL         ,\n           input  [1:0] VREF_SEL        ,\n           input  [1:0] VREG_EN         ,\n           input        VREG_EN_REFGEN  ,\n           input  [1:0] VTRIP_SEL       ,\n           input  [1:0] VTRIP_SEL_REFGEN,\n           inout        VINREF_DFT      ,\n           input        VOHREF          ,\n           inout        VOUTREF_DFT     ,\n           output [1:0] TIE_LO_ESD\n       );"}
{"task_id": 965, "completion": "module sky130_fd_sc_hdll__o221a (output X, input A1, input A2, input B1, input B2, input C1);"}
{"task_id": 956, "completion": "module sky130_fd_sc_lp__a31oi ( Y, A1, A2, A3, B1, VPWR, VGND, VPB, VNB );"}
{"task_id": 944, "completion": "module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix(    input sys_clkp,    input sys_clkn,    input sys_rst,    output log_clk_out,    output phy_clk_out,    output gt_clk_out,    output gt_pcs_clk_out,    output drpclk_out,    output refclk_out,    output clk_lock_out,    output cfg_rst_out,    output log_rst_out,    output buf_rst_out,    output phy_rst_out,    output gt_pcs_rst_out,    output gt0_qpll_clk_out,    output gt0_qpll_out_refclk_out,    input srio_rxn0,    input srio_rxp0,    output srio_txn0,    output srio_txp0,    input s_axis_iotx_tvalid,    output s_axis_iotx_tready,    input s_axis_iotx_tlast,    input [63:0]s_axis_iotx_tdata,    input [7:0]s_axis_iotx_tkeep,    input [31:0]s_axis_iotx_tuser,    output m_axis_iorx_tvalid,    input m_axis_iorx_tready,    output m_axis_iorx_tlast,    output [63:0]m_axis_iorx_tdata,    output [7:0]m_axis_iorx_tkeep,    output [31:0]m_axis_iorx_tuser,    input s_axi_maintr_rst,    input s_axi_maintr_awvalid,    output s_axi_maintr_awready,    input [31:0]s_axi_maintr_awaddr,    input s_axi_maintr_wvalid,    output s_axi_maintr_wready,    input [31:0]s_axi_maintr_wdata,    output s_axi_maintr_bvalid,    input s_axi_maintr_bready,    output [1:0]s_axi_maintr_bresp,    input s_axi_maintr_arvalid,    output s_axi_maintr_arready,    input [31:0]s_axi_maintr_araddr,    output s_axi_maintr_rvalid,    input s_axi_maintr_rready,    output [31:0]s_axi_maintr_rdata,    output [1:0]s_axi_maintr_rresp,    input sim_train_en,    input force_reinit,    input phy_mce,    input phy_link_reset,    output phy_rcvd_mce,    output phy_rcvd_link_reset,    output [223:0]phy_debug,    output gtrx_disperr_or,    output gtrx_notintable_or,    output port_error,    output [23:0]port_timeout,    output srio_host,    output port_decode_error,    output [15:0]deviceid,    output idle2_selected,    output phy_lcl_master_enable_out,    output buf_lcl_response_only_out,    output buf_lcl_tx_flow_control_out,    output [5:0]buf_lcl_phy_buf_stat_out,    output [5:0]phy_lcl_phy_next_fm_out,    output [5:0]phy_lcl_phy_last_ack_out,    output phy_lcl_phy_rewind_out,    output [5:0]phy_lcl_phy_rcvd_buf_stat_out,    output phy_lcl_maint_only_out,    output port_initialized,    output link_initialized,    output idle_selected,    output mode_1x);"}
{"task_id": 966, "completion": "module sky130_fd_sc_ms__maj3 (X, A, B, C);"}
{"task_id": 936, "completion": "module SB_RAM2048x2(\n\toutput  [1:0] RDATA,\n\tinput         RCLK, RCLKE, RE,\n\tinput  [10:0] RADDR,\n\tinput         WCLK, WCLKE, WE,\n\tinput  [10:0] WADDR,\n\tinput   [1:0] MASK, WDATA\n);"}
{"task_id": 971, "completion": "module pipeem(clk,writerege,writerege2,aluoute,aluoute2,writedatae,writedatae2,memwritee,memwritee2,regwritee,regwritee2,memtorege,memtorege2,regwritem,regwritem2,memtoregm,memtoregm2,memwritem,memwritem2,writeregm,writeregm2,aluoutm,aluoutm2,writedatam,writedatam2,stallm,stallm2);"}
{"task_id": 957, "completion": "module sky130_fd_sc_lp__dlxtn (Q, D, GATE_N, VPWR, VGND, VPB, VNB);"}
{"task_id": 632, "completion": "module cf_dds_top (  input           vdma_clk,  output          vdma_fs,  input           vdma_valid,  input   [63:0]  vdma_data,  output          vdma_ready,  output          vdma_ovf,  output          vdma_unf,  input           dac_div3_clk,  input           dds_master_enable,  input           dds_master_frame,  output  [ 2:0]  dds_frame_0,  output  [15:0]  dds_data_00,  output  [15:0]  dds_data_01,  output  [15:0]  dds_data_02,  output  [ 2:0]  dds_frame_1,  output  [15:0]  dds_data_10,  output  [15:0]  dds_data_11,  output  [15:0]  dds_data_12,  input           up_dds_format,  input           up_dds_psel,  input           up_dds_sel,  input   [15:0]  up_dds_init_1a,  input   [15:0]  up_dds_incr_1a,  input   [ 3:0]  up_dds_scale_1a,  input   [15:0]  up_dds_init_1b,  input   [15:0]  up_dds_incr_1b,  input   [ 3:0]  up_dds_scale_1b,  input   [15:0]  up_dds_init_2a,  input   [15:0]  up_dds_incr_2a,  input   [ 3:0]  up_dds_scale_2a,  input   [15:0]  up_dds_init_2b,  input   [15:0]  up_dds_incr_2b,  input   [ 3:0]  up_dds_scale_2b,  input   [15:0]  up_dds_data_1a,  input   [15:0]  up_dds_data_1b,  input   [15:0]  up_dds_data_2a,  input   [15:0]  up_dds_data_2b,  input           up_intp_enable,  input   [15:0]  up_intp_scale_a,  input   [15:0]  up_intp_scale_b,  input   [15:0]  up_vdma_fscnt,  output  [198:0] vdma_dbg_data,  output  [ 7:0]  vdma_dbg_trigger,  output  [195:0] dac_dbg_data,  output  [ 7:0]  dac_dbg_trigger);"}
{"task_id": 968, "completion": "module sky130_fd_sc_ls__sdfbbn (\n    output Q,\n    output Q_N,\n    input D,\n    input SCD,\n    input SCE,\n    input CLK_N,\n    input SET_B,\n    input RESET_B\n);"}
{"task_id": 981, "completion": "module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix(slowest_sync_clk, ext_reset_in, aux_reset_in, mb_debug_sys_rst, dcm_locked, mb_reset, bus_struct_reset, peripheral_reset, interconnect_aresetn, peripheral_aresetn);"}
{"task_id": 970, "completion": "module COCO3GEN ( address, clock, q ); input [10:0] address; input clock; output [7:0] q;"}
{"task_id": 983, "completion": "module top(\n\tinput CLK,\n\tinput BTN1,\n\tinput BTN2,\n\tinput BTN3,\n\tinput BTN_N,\n\tinput [7:0] sw,\n\toutput [4:0] led,\n\toutput [6:0] seg,\n\toutput ca\n);"}
{"task_id": 946, "completion": "module cla16(sum, a, b);\n    output [16:0] sum;\n    input  [15:0] a,b;"}
{"task_id": 986, "completion": "module sky130_fd_sc_ms__a31oi ( Y , A1, A2, A3, B1 );"}
{"task_id": 991, "completion": "module io1_sub(\n        output sec_out,\n        output lower_out,\n        inout sec_io,\n        inout lower_io,\n        input sec_ina,\n        input lower_ina\n    );"}
{"task_id": 987, "completion": "module sky130_fd_sc_hs__nand4bb_2 (\n    Y, \n    A_N, \n    B_N, \n    C, \n    D,\n    VPWR,\n    VGND\n);"}
{"task_id": 992, "completion": "module alu8b (input wire [7:0] A_in, input wire [7:0] B_in, input wire C_in, input wire [2:0] Opcode_in, output wire [7:0] Result_out, output wire C_out);"}
{"task_id": 856, "completion": "module StripedDualMemory(\n    A_dout,\n    A_din,\n    A_address,\n    A_size,\n    A_read_write,\n    A_enable,\n    B_dout,\n    B_din,\n    B_address,\n    B_size,\n    B_read_write,\n    B_enable,\n    clk,\n    reset\n);"}
{"task_id": 990, "completion": "module sky130_fd_sc_ms__edfxtp ( Q, CLK, D, DE );"}
{"task_id": 665, "completion": "module zybo_zynq_design_rst_ps7_0_100M_0(\n        input slowest_sync_clk,\n        input ext_reset_in,\n        input aux_reset_in,\n        input mb_debug_sys_rst,\n        input dcm_locked,\n        output mb_reset,\n        output [0:0] bus_struct_reset,\n        output [0:0] peripheral_reset,\n        output [0:0] interconnect_aresetn,\n        output [0:0] peripheral_aresetn\n    );"}
{"task_id": 978, "completion": "module SCTxPortArbiter (SCTxPortCntl, SCTxPortData, SCTxPortRdyIn, SCTxPortRdyOut, SCTxPortWEnable, clk, directCntlCntl, directCntlData, directCntlGnt, directCntlReq, directCntlWEn, rst, sendPacketCntl, sendPacketData, sendPacketGnt, sendPacketReq, sendPacketWEn);"}
{"task_id": 902, "completion": "module ip(\n    input  wire        clk,\n    input  wire        rst,\n    input  wire        s_eth_hdr_valid,\n    output wire        s_eth_hdr_ready,\n    input  wire [47:0] s_eth_dest_mac,\n    input  wire [47:0] s_eth_src_mac,\n    input  wire [15:0] s_eth_type,\n    input  wire [7:0]  s_eth_payload_axis_tdata,\n    input  wire        s_eth_payload_axis_tvalid,\n    output wire        s_eth_payload_axis_tready,\n    input  wire        s_eth_payload_axis_tlast,\n    input  wire        s_eth_payload_axis_tuser,\n    output wire        m_eth_hdr_valid,\n    input  wire        m_eth_hdr_ready,\n    output wire [47:0] m_eth_dest_mac,\n    output wire [47:0] m_eth_src_mac,\n    output wire [15:0] m_eth_type,\n    output wire [7:0]  m_eth_payload_axis_tdata,\n    output wire        m_eth_payload_axis_tvalid,\n    input  wire        m_eth_payload_axis_tready,\n    output wire        m_eth_payload_axis_tlast,\n    output wire        m_eth_payload_axis_tuser,\n    output wire        arp_request_valid,\n    input  wire        arp_request_ready,\n    output wire [31:0] arp_request_ip,\n    input  wire        arp_response_valid,\n    output wire        arp_response_ready,\n    input  wire        arp_response_error,\n    input  wire [47:0] arp_response_mac,\n    input  wire        s_ip_hdr_valid,\n    output wire        s_ip_hdr_ready,\n    input  wire [5:0]  s_ip_dscp,\n    input  wire [1:0]  s_ip_ecn,\n    input  wire [15:0] s_ip_length,\n    input  wire [7:0]  s_ip_ttl,\n    input  wire [7:0]  s_ip_protocol,\n    input  wire [31:0] s_ip_source_ip,\n    input  wire [31:0] s_ip_dest_ip,\n    input  wire [7:0]  s_ip_payload_axis_tdata,\n    input  wire        s_ip_payload_axis_tvalid,\n    output wire        s_ip_payload_axis_tready,\n    input  wire        s_ip_payload_axis_tlast,\n    input  wire        s_ip_payload_axis_tuser,\n    output wire        m_ip_hdr_valid,\n    input  wire        m_ip_hdr_ready,\n    output wire [47:0] m_ip_eth_dest_mac,\n    output wire [47:0] m_ip_eth_src_mac,\n    output wire [15:0] m_ip_eth_type,\n    output wire [3:0]  m_ip_version,\n    output wire [3:0]  m_ip_ihl,\n    output wire [5:0]  m_ip_dscp,\n    output wire [1:0]  m_ip_ecn,\n    output wire [15:0] m_ip_length,\n    output wire [15:0] m_ip_identification,\n    output wire [2:0]  m_ip_flags,\n    output wire [12:0] m_ip_fragment_offset,\n    output wire [7:0]  m_ip_ttl,\n    output wire [7:0]  m_ip_protocol,\n    output wire [15:0] m_ip_header_checksum,\n    output wire [31:0] m_ip_source_ip,\n    output wire [31:0] m_ip_dest_ip,\n    output wire [7:0]  m_ip_payload_axis_tdata,\n    output wire        m_ip_payload_axis_tvalid,\n    input  wire        m_ip_payload_axis_tready,\n    output wire        m_ip_payload_axis_tlast,\n    output wire        m_ip_payload_axis_tuser,\n    output wire rx_busy,\n    output wire tx_busy,\n    output wire rx_error_header_early_termination,\n    output wire rx_error_payload_early_termination,\n    output wire rx_error_invalid_header,\n    output wire rx_error_invalid_checksum,\n    output wire tx_error_payload_early_termination,\n    output wire tx_error_arp_failed,\n    input  wire [47:0] local_mac,\n    input  wire [31:0] local_ip\n);"}
{"task_id": 863, "completion": "module gmii_if (input tx_reset, input rx_reset, output reg [7:0] gmii_txd, output reg gmii_tx_en, output reg gmii_tx_er, output gmii_tx_clk, input gmii_crs, input gmii_col, input [7:0] gmii_rxd, input gmii_rx_dv, input gmii_rx_er, input gmii_rx_clk, input [7:0] txd_from_mac, input tx_en_from_mac, input tx_er_from_mac, input tx_clk, output crs_to_mac, output col_to_mac, output reg [7:0] rxd_to_mac, output reg rx_dv_to_mac, output reg rx_er_to_mac, output rx_clk);"}
{"task_id": 1002, "completion": "module sky130_fd_sc_hs__dlxtn (input  D, output Q, input  GATE_N);"}
{"task_id": 1005, "completion": "module sky130_fd_sc_lp__o21a (    X ,    A1,    A2,    B1);"}
{"task_id": 943, "completion": "module infrastructure #(\n   parameter C_INCLK_PERIOD    = 2500,\n   parameter C_RST_ACT_LOW      = 1,\n   parameter C_INPUT_CLK_TYPE   = \"DIFFERENTIAL\",\n   parameter C_CLKOUT0_DIVIDE   = 1,\n   parameter C_CLKOUT1_DIVIDE   = 1,\n   parameter C_CLKOUT2_DIVIDE   = 16,\n   parameter C_CLKOUT3_DIVIDE   = 8,\n   parameter C_CLKFBOUT_MULT    = 2,\n   parameter C_DIVCLK_DIVIDE    = 1\n   )(\n   input  sys_clk_p,\n   input  sys_clk_n,\n   input  sys_clk,\n   input  sys_rst_n,\n   output clk0,\n   output rst0,\n   output async_rst,\n   output sysclk_2x,\n   output sysclk_2x_180,\n   output mcb_drp_clk,\n   output pll_ce_0,\n   output pll_ce_90,\n   output pll_lock\n   );"}
{"task_id": 1008, "completion": "module sky130_fd_sc_lp__nand2b ( Y, A_N, B, VPWR, VGND, VPB, VNB );"}
{"task_id": 989, "completion": "module top(input clk, stb, di, output do);"}
{"task_id": 1011, "completion": "module vga_display (\n        input wire rst,\n        input wire ClkPort,\n        input wire btnU,\n        input wire btnD,\n        output wire HS,\n        output wire VS,\n        output wire [2:0] R,\n        output wire [2:0] G,\n        output wire [1:0] B\n    );"}
{"task_id": 973, "completion": "module m26_rx_core #(\n    parameter ABUSWIDTH = 16,\n    parameter HEADER = 0,\n    parameter IDENTYFIER = 0\n)(\n    input wire CLK_RX,\n    input wire MKD_RX,\n    input wire [1:0] DATA_RX,\n    input wire FIFO_READ,\n    output wire FIFO_EMPTY,\n    output wire [31:0] FIFO_DATA,\n    input wire BUS_CLK,\n    input wire [ABUSWIDTH-1:0] BUS_ADD,\n    input wire [7:0] BUS_DATA_IN,\n    output reg [7:0] BUS_DATA_OUT,\n    input wire BUS_RST,\n    input wire BUS_WR,\n    input wire BUS_RD,\n    input wire [31:0] TIMESTAMP,\n    output wire LOST_ERROR\n);"}
{"task_id": 974, "completion": "module feedforward_AXILiteS_s_axi #(parameter C_S_AXI_ADDR_WIDTH = 5, parameter C_S_AXI_DATA_WIDTH = 32)(input wire ACLK, input wire ARESET, input wire ACLK_EN, input wire [C_S_AXI_ADDR_WIDTH-1:0] AWADDR, input wire AWVALID, output wire AWREADY, input wire [C_S_AXI_DATA_WIDTH-1:0] WDATA, input wire [C_S_AXI_DATA_WIDTH/8-1:0] WSTRB, input wire WVALID, output wire WREADY, output wire [1:0] BRESP, output wire BVALID, input wire BREADY, input wire [C_S_AXI_ADDR_WIDTH-1:0] ARADDR, input wire ARVALID, output wire ARREADY, output wire [C_S_AXI_DATA_WIDTH-1:0] RDATA, output wire [1:0] RRESP, output wire RVALID, input wire RREADY, output wire interrupt, output wire ap_start, input wire ap_done, input wire ap_ready, input wire ap_idle, output wire [31:0] P_mode);"}
{"task_id": 962, "completion": "module fpga (input wire clk_200mhz_p,input wire clk_200mhz_n,input wire reset,input wire btnu,input wire btnl,input wire btnd,input wire btnr,input wire btnc,input wire [3:0] sw,output wire [7:0] led,input wire phy_rx_clk,input wire [3:0] phy_rxd,input wire phy_rx_ctl,output wire phy_tx_clk,output wire [3:0] phy_txd,output wire phy_tx_ctl,output wire phy_reset_n,input wire phy_int_n,input wire uart_rxd,output wire uart_txd,output wire uart_rts,input wire uart_cts);"}
{"task_id": 895, "completion": "module fpga ( input  wire       sys_clk_p, input  wire       sys_clk_n, input  wire       reset, input  wire       btnu, input  wire       btnl, input  wire       btnd, input  wire       btnr, input  wire       btnc, input  wire [7:0] sw, output wire       ledu, output wire       ledl, output wire       ledd, output wire       ledr, output wire       ledc, output wire [7:0] led, input  wire       phy_rx_clk, input  wire [3:0] phy_rxd, input  wire       phy_rx_ctl, output wire       phy_tx_clk, output wire [3:0] phy_txd, output wire       phy_tx_ctl, output wire       phy_reset_n, output wire       uart_rxd, input  wire       uart_txd, input  wire       uart_rts, output wire       uart_cts );"}
{"task_id": 996, "completion": "module RippleAdder2 #(\n    parameter p_wordlength = 4\n) (\n    input wire[3:0] a,\n    input wire[3:0] b,\n    input wire ci,\n    output reg co,\n    output reg[3:0] s\n);"}
{"task_id": 969, "completion": "module serdes_1_to_n_clk_ddr_s8_se (clkin1, clkin2, rxioclkp, rxioclkn, rx_serdesstrobe, rx_bufg_x1);"}
{"task_id": 1019, "completion": "module sky130_fd_sc_ls__a2bb2o (    output X,    input A1_N,    input A2_N,    input B1,    input B2);"}
{"task_id": 1023, "completion": "module sky130_fd_sc_hdll__or3 (\n    output X,\n    input  A,\n    input  B,\n    input  C\n);"}
{"task_id": 1004, "completion": "module sky130_fd_sc_hd__a22o (output X, input A1, input A2, input B1, input B2);"}
{"task_id": 1027, "completion": "module sky130_fd_sc_ls__or4 (\n    input  A,\n    input  B,\n    input  C,\n    input  D,\n    input  VPWR,\n    input  VGND,\n    input  VPB,\n    input  VNB,\n    output X\n);"}
{"task_id": 1026, "completion": "module fslcd #(\n\tparameter integer C_IN_COMP_WIDTH = 8,\n\tparameter integer C_OUT_COMP_WIDTH = 6\n)(\n\tinput vid_io_in_clk,\n\tinput vid_active_video,\n\tinput [C_IN_COMP_WIDTH*3-1:0] vid_data,\n\tinput vid_hsync,\n\tinput vid_vsync,\n\toutput [C_OUT_COMP_WIDTH-1:0] r,\n\toutput [C_OUT_COMP_WIDTH-1:0] g,\n\toutput [C_OUT_COMP_WIDTH-1:0] b,\n\toutput hsync_out,\n\toutput vsync_out,\n\toutput active_data,\n\toutput out_clk\n);"}
{"task_id": 332, "completion": "module EquivalenceModule #(parameter WIDTH = 4) (input wire [WIDTH-1:0] a, input wire [WIDTH-1:0] b, output wire equivalent);"}
{"task_id": 1031, "completion": "module sky130_fd_sc_hd__fahcon (    COUT_N,    SUM   ,    A     ,    B     ,    CI);    output COUT_N;    output SUM   ;    input  A     ;    input  B     ;    input  CI    ;"}
{"task_id": 1024, "completion": "module HLS_accel_fpext_32ns_64_1  #(parameter ID = 3, NUM_STAGE = 1, din0_WIDTH = 32, dout_WIDTH = 64)(input  wire [din0_WIDTH-1:0] din0, output wire [dout_WIDTH-1:0] dout);"}
{"task_id": 1038, "completion": "module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix(clka, ena, wea, addra, dina, douta); input clka; input ena; input [0:0]wea; input [9:0]addra; input [19:0]dina; output [19:0]douta;"}
{"task_id": 1046, "completion": "module premuat_4( input signed [27:0] i_0, input signed [27:0] i_1, input signed [27:0] i_2, input signed [27:0] i_3, output signed [27:0] o_0, output signed [27:0] o_1, output signed [27:0] o_2, output signed [27:0] o_3 );"}
{"task_id": 1042, "completion": "module sky130_fd_sc_hdll__sdfsbp (\n    output Q,\n    output Q_N,\n    input CLK,\n    input D,\n    input SCD,\n    input SCE,\n    input SET_B\n);"}
{"task_id": 926, "completion": "module ip_64(\n    input  wire        clk,\n    input  wire        rst,\n    input  wire        s_eth_hdr_valid,\n    output wire        s_eth_hdr_ready,\n    input  wire [47:0] s_eth_dest_mac,\n    input  wire [47:0] s_eth_src_mac,\n    input  wire [15:0] s_eth_type,\n    input  wire [63:0] s_eth_payload_axis_tdata,\n    input  wire [7:0]  s_eth_payload_axis_tkeep,\n    input  wire        s_eth_payload_axis_tvalid,\n    output wire        s_eth_payload_axis_tready,\n    input  wire        s_eth_payload_axis_tlast,\n    input  wire        s_eth_payload_axis_tuser,\n    output wire        m_eth_hdr_valid,\n    input  wire        m_eth_hdr_ready,\n    output wire [47:0] m_eth_dest_mac,\n    output wire [47:0] m_eth_src_mac,\n    output wire [15:0] m_eth_type,\n    output wire [63:0] m_eth_payload_axis_tdata,\n    output wire [7:0]  m_eth_payload_axis_tkeep,\n    output wire        m_eth_payload_axis_tvalid,\n    input  wire        m_eth_payload_axis_tready,\n    output wire        m_eth_payload_axis_tlast,\n    output wire        m_eth_payload_axis_tuser,\n    output wire        arp_request_valid,\n    input  wire        arp_request_ready,\n    output wire [31:0] arp_request_ip,\n    input  wire        arp_response_valid,\n    output wire        arp_response_ready,\n    input  wire        arp_response_error,\n    input  wire [47:0] arp_response_mac,\n    input  wire        s_ip_hdr_valid,\n    output wire        s_ip_hdr_ready,\n    input  wire [5:0]  s_ip_dscp,\n    input  wire [1:0]  s_ip_ecn,\n    input  wire [15:0] s_ip_length,\n    input  wire [7:0]  s_ip_ttl,\n    input  wire [7:0]  s_ip_protocol,\n    input  wire [31:0] s_ip_source_ip,\n    input  wire [31:0] s_ip_dest_ip,\n    input  wire [63:0] s_ip_payload_axis_tdata,\n    input  wire [7:0]  s_ip_payload_axis_tkeep,\n    input  wire        s_ip_payload_axis_tvalid,\n    output wire        s_ip_payload_axis_tready,\n    input  wire        s_ip_payload_axis_tlast,\n    input  wire        s_ip_payload_axis_tuser,\n    output wire        m_ip_hdr_valid,\n    input  wire        m_ip_hdr_ready,\n    output wire [47:0] m_ip_eth_dest_mac,\n    output wire [47:0] m_ip_eth_src_mac,\n    output wire [15:0] m_ip_eth_type,\n    output wire [3:0]  m_ip_version,\n    output wire [3:0]  m_ip_ihl,\n    output wire [5:0]  m_ip_dscp,\n    output wire [1:0]  m_ip_ecn,\n    output wire [15:0] m_ip_length,\n    output wire [15:0] m_ip_identification,\n    output wire [2:0]  m_ip_flags,\n    output wire [12:0] m_ip_fragment_offset,\n    output wire [7:0]  m_ip_ttl,\n    output wire [7:0]  m_ip_protocol,\n    output wire [15:0] m_ip_header_checksum,\n    output wire [31:0] m_ip_source_ip,\n    output wire [31:0] m_ip_dest_ip,\n    output wire [63:0] m_ip_payload_axis_tdata,\n    output wire [7:0]  m_ip_payload_axis_tkeep,\n    output wire        m_ip_payload_axis_tvalid,\n    input  wire        m_ip_payload_axis_tready,\n    output wire        m_ip_payload_axis_tlast,\n    output wire        m_ip_payload_axis_tuser,\n    output wire rx_busy,\n    output wire tx_busy,\n    output wire rx_error_header_early_termination,\n    output wire rx_error_payload_early_termination,\n    output wire rx_error_invalid_header,\n    output wire rx_error_invalid_checksum,\n    output wire tx_error_payload_early_termination,\n    output wire tx_error_arp_failed,\n    input  wire [47:0] local_mac,\n    input  wire [31:0] local_ip\n);"}
{"task_id": 1041, "completion": "module sky130_fd_sc_ls__sdfrtp (\n    Q,\n    CLK,\n    D,\n    SCD,\n    SCE,\n    RESET_B,\n    VPWR,\n    VGND,\n    VPB,\n    VNB\n);"}
{"task_id": 1020, "completion": "module computer(\n\tRESET,\n\tCLOCK_50,\n\tPS2_CLK,\n\tPS2_DAT,\n\tVGA_HS,\n\tVGA_VS,\n\tVGA_BLANK_N,\n\tVGA_CLK,\n\tLED,\n\tVGA_B,\n\tVGA_G,\n\tVGA_R\n);"}
{"task_id": 1045, "completion": "module deser400_tp_mux(\n    input clk,\n    input reset,\n    input [6:0]sela,\n    input [6:0]selb,\n    input [31:0]tp1,\n    input [31:0]tp2,\n    input [31:0]tp3,\n    input [31:0]tp4,\n    output tpa,\n    output tpb\n);"}
{"task_id": 1039, "completion": "module sky130_fd_sc_hd__udp_mux_4to2(input wire A0, input wire A1, input wire A2, input wire A3, input wire S0, input wire S1, output wire X);"}
{"task_id": 1025, "completion": "module I2C_Controller ( CLOCK, I2C_SCLK, I2C_SDAT, I2C_DATA, GO, END, ACK, RESET ); input  CLOCK; input  [31:0]I2C_DATA; input  GO; input  RESET; inout  I2C_SDAT; output I2C_SCLK; output END; output ACK;"}
{"task_id": 1053, "completion": "module sky130_fd_sc_hs__a21oi (\n    input wire A1,\n    input wire A2,\n    input wire B1,\n    input wire VPWR,\n    input wire VGND,\n    output wire Y\n);"}
{"task_id": 1047, "completion": "module sdcard_spi (output sclk, output mosi, input  miso, input rst, input clk, input [7:0] data_in, output [7:0] data_out, input [7:0] divider, input [4:0] bits, input start, output finished, output crc_in_bit, output crc_out_bit, output crc_strobe);"}
{"task_id": 1056, "completion": "module sky130_fd_sc_hd__a41o (\n    output X,\n    input A1,\n    input A2,\n    input A3,\n    input A4,\n    input B1\n);"}
{"task_id": 1013, "completion": "module execute_address_calculate\n#(\n   parameter DATA_WIDTH = 32,\n   parameter PC_WIDTH = 32,\n   parameter INSTRUCTION_WIDTH = 32,\n   parameter OPCODE_WIDTH = 6,\n   parameter FUNCTION_WIDTH = 6,\n   parameter REG_ADDR_WIDTH = 5,\n   parameter PC_OFFSET_WIDTH = 26\n)\n(\n   input clk,\n   input rst_n,\n   input en,\n\n   input [OPCODE_WIDTH-1:0] alu_opcode_in,\n   input [FUNCTION_WIDTH-1:0] alu_function_in,\n   input [DATA_WIDTH-1:0] data_alu_a_in,\n   input [DATA_WIDTH-1:0] data_alu_b_in,\n   input [REG_ADDR_WIDTH-1:0] reg_a_addr_in,\n   input [REG_ADDR_WIDTH-1:0] reg_b_addr_in,\n   input [DATA_WIDTH-1:0] constant_in,\n   input imm_inst_in,\n   input [PC_WIDTH-1:0] new_pc_in,\n   input [PC_OFFSET_WIDTH-1:0] pc_offset_in,\n   input branch_inst_in,\n   input branch_use_r_in,\n   input jmp_inst_in,\n   input jmp_use_r_in,\n\n   input [DATA_WIDTH-1:0] ex_mem_reg_a_data_in,\n   input [DATA_WIDTH-1:0] ex_mem_reg_b_data_in,\n   input [REG_ADDR_WIDTH-1:0] ex_mem_reg_a_addr_in,\n   input [REG_ADDR_WIDTH-1:0] ex_mem_reg_b_addr_in,\n   input ex_mem_reg_a_wr_ena_in,\n   input ex_mem_reg_b_wr_ena_in,\n   input [DATA_WIDTH-1:0] wb_reg_a_data_in,\n   input [DATA_WIDTH-1:0] wb_reg_b_data_in,\n   input [REG_ADDR_WIDTH-1:0] wb_reg_a_addr_in,\n   input [REG_ADDR_WIDTH-1:0] wb_reg_b_addr_in,\n   input wb_reg_a_wr_ena_in,\n   input wb_reg_b_wr_ena_in,\n\n   input [INSTRUCTION_WIDTH-1:0] instruction_in,\n\n   output [DATA_WIDTH-1:0] mem_data_out,\n   output [DATA_WIDTH-1:0] alu_data_out,\n\n   output [DATA_WIDTH-1:0] hi_data_out,\n\n   output [PC_WIDTH-1:0] fetch_new_pc_out,\n   output fetch_select_new_pc_out\n);"}
{"task_id": 1048, "completion": "module tracking_camera_system_onchip_memory2_0 (input [11:0] address, input [3:0] byteenable, input chipselect, input clk, input clken, input reset, input write, input [31:0] writedata, output [31:0] readdata);"}
{"task_id": 1062, "completion": "module DataMemory(\n    input wire clk,\n    input wire readOp,\n    input wire writeOp,\n    input wire [31:0] address,\n    input wire [31:0] dataIn,\n    output wire [31:0] dataOut\n);"}
{"task_id": 1037, "completion": "module pcidec_new (clk_i, nrst_i, ad_i, cbe_i, idsel_i, bar0_i, memEN_i, pciadrLD_i, adrcfg_o, adrmem_o, adr_o, cmd_o);"}
{"task_id": 1021, "completion": "module Register_ShiftOutput(\n    input [31:0] Rt_out,\n    input [1:0] Mem_addr_in,\n    input [31:26] IR,\n    output [31:0] Mem_data_shift\n);"}
{"task_id": 999, "completion": "module REG(clk, rw, addr, data_in, data_out);\n  parameter data_witdh = 32;\n  parameter addr_witdh = 5;\n  parameter reg_witdh = 28;\n   input clk;\n   input rw;\n   input req;\n   output ack;\n   input [addr_witdh-1: 0] addr;\n   input [data_witdh-1: 0] data_in;\n   output [data_witdh-1: 0] data_out;\n   output [15: 0] SDMA_System_Address_Low;\n   output [15: 0] SDMA_System_Address_High;\n   output [15: 0] Block_Size;\n   output [15: 0] Block_Count;\n   output [15: 0] Argument0;\n   output [15: 0] Argument1;\n   output [31:0] Argument;\n   output [15: 0] Transfer_Mode;\n   output [15: 0] Command;\n   output [15: 0] Response0;\n   output [15: 0] Response1;\n   output [15: 0] Response2;\n   output [15: 0] Response3;\n   output [15: 0] Response4;\n   output [15: 0] Response5;\n   output [15: 0] Response6;\n   output [15: 0] Response7;\n   output [15: 0] Buffer_Data_Port0;\n   output [15: 0] Buffer_Data_Port1;\n   output [15: 0] Present_State1;\n   output [15: 0] Present_State2;\n   output [7: 0] Host_Control;\n   output [7: 0] Power_Control;\n   output [7: 0] Block_Gap_Control;\n   output [7: 0] Wakeup_Control;\n   output [15: 0] Clock_Control;\n   output [7: 0] Timeout_Control;\n   output [7: 0] Software_Reset;\n   output [15: 0] Normal_Interrupt_Status;\n   output [15: 0] Error_Interrupt_Status;\n   output [15: 0] Normal_Interrupt_Status_Enable;\n   output [15: 0] Error_Interrupt_Status_Enable;\n   output [15: 0] Normal_Interrupt_Signal_Enable;\n   output [15: 0] Error_Interrupt_Signal_Enable;\n   output [15: 0] Auto_CMD12_Error_Status;\n   output [15: 0] Capabilities1;\n   output [15: 0] Capabilities2;\n   output [15: 0] Capabilities_Reserved_1;\n   output [15: 0] Capabilities_Reserved_2;\n   output [15: 0] Maximum_Current_Capabilities1;\n   output [15: 0] Maximum_Current_Capabilities2;\n   output [15: 0] Maximum_Current_Capabilities_Reserved_1;\n   output [15: 0] Maximum_Current_Capabilities_Reserved_2;\n   output [15: 0] Force_Event_for_Auto_CMD12_Error_Status;\n   output [15: 0] Force_Event_for_Error_Interrupt_Status;\n   output [7: 0] ADMA_Error_Status;\n   output [15: 0] ADMA_System_Address_15;\n   output [15: 0] ADMA_System_Address_31;\n   output [15: 0] ADMA_System_Address_47;\n   output [15: 0] ADMA_System_Address_63;\n   output [15: 0] Host_Controller_Version;\n   output [15: 0] Slot_Interrupt_Status;\n   output [15: 0] Timeout_Reg;\n   output [15: 0] data;"}
{"task_id": 1012, "completion": "module uut_32_top(\n    output wire [31:0] res_o,\n    output wire [31:0] exp_o,\n    output wire [31:0] obs_o,\n    output wire        val_o,\n\n    input  wire [31:0] data_i,\n    input  wire        sof_i,\n    input  wire        eof_i,\n\n    input  wire        pclk_i\n);"}
{"task_id": 1058, "completion": "module sky130_fd_sc_hs__bufbuf (\n    VPWR,\n    VGND,\n    X   ,\n    A\n);"}
{"task_id": 1070, "completion": "module sky130_fd_sc_ls__fah (\n        input A,\n        input B,\n        input CI,\n        input VPWR,\n        input VGND,\n        input VPB,\n        input VNB,\n        output COUT,\n        output SUM\n    );"}
{"task_id": 440, "completion": "module top (input         cpci_reset, input         cpci_clk, input         gtx_clk, output [3:0]  rgmii_0_txd, output        rgmii_0_tx_ctl, output        rgmii_0_txc, input  [3:0]  rgmii_0_rxd, input         rgmii_0_rx_ctl, input         rgmii_0_rxc, output [3:0]  rgmii_1_txd, output        rgmii_1_tx_ctl, output        rgmii_1_txc, input  [3:0]  rgmii_1_rxd, input         rgmii_1_rx_ctl, input         rgmii_1_rxc, output [3:0]  rgmii_2_txd, output        rgmii_2_tx_ctl, output        rgmii_2_txc, input  [3:0]  rgmii_2_rxd, input         rgmii_2_rx_ctl, input         rgmii_2_rxc, output [3:0]  rgmii_3_txd, output        rgmii_3_tx_ctl, output        rgmii_3_txc, input  [3:0]  rgmii_3_rxd, input         rgmii_3_rx_ctl, input         rgmii_3_rxc, input         PCLK2, inout  [31:0] AD_IO, output        AD_HIZ, inout   [3:0] CBE_IO, output        CBE_HIZ, inout         PAR_IO, output        PAR_HIZ, inout         FRAME_IO, output        FRAME_HIZ, inout         TRDY_IO, output        TRDY_HIZ, inout         IRDY_IO, output        IRDY_HIZ, inout         STOP_IO, output        STOP_HIZ, inout         DEVSEL_IO, output        DEVSEL_HIZ, input         IDSEL_I, output        INTA_O, inout         PERR_IO, output        PERR_HIZ, inout         SERR_IO, output        SERR_HIZ, output        REQ_O, input         GNT_I, input [3:0]   cpci_id, output        PASS_REQ, input         PASS_READY, output [31:0] cpci_debug_data, output        DEBUG_PIN0, output        DEBUG_PIN1);"}
{"task_id": 1069, "completion": "module sky130_fd_sc_lp__nor4b (Y, A, B, C, D_N, VPWR, VGND, VPB, VNB);"}
{"task_id": 1014, "completion": "module comparator_tb1(SW, status_leds, seg7_0, seg7_1, seg7_2, seg7_3);\n   parameter n = 2;\n   output wire [9:0] status_leds;\n   output wire [0:6] seg7_0, seg7_1, seg7_2, seg7_3;\n   input wire [9:0] SW;"}
{"task_id": 1033, "completion": "module system_processing_system7_0_0(TTC0_WAVE0_OUT, TTC0_WAVE1_OUT, TTC0_WAVE2_OUT, USB0_PORT_INDCTL, USB0_VBUS_PWRSELECT, USB0_VBUS_PWRFAULT, M_AXI_GP0_ARVALID, M_AXI_GP0_AWVALID, M_AXI_GP0_BREADY, M_AXI_GP0_RREADY, M_AXI_GP0_WLAST, M_AXI_GP0_WVALID, M_AXI_GP0_ARID, M_AXI_GP0_AWID, M_AXI_GP0_WID, M_AXI_GP0_ARBURST, M_AXI_GP0_ARLOCK, M_AXI_GP0_ARSIZE, M_AXI_GP0_AWBURST, M_AXI_GP0_AWLOCK, M_AXI_GP0_AWSIZE, M_AXI_GP0_ARPROT, M_AXI_GP0_AWPROT, M_AXI_GP0_ARADDR, M_AXI_GP0_AWADDR, M_AXI_GP0_WDATA, M_AXI_GP0_ARCACHE, M_AXI_GP0_ARLEN, M_AXI_GP0_ARQOS, M_AXI_GP0_AWCACHE, M_AXI_GP0_AWLEN, M_AXI_GP0_AWQOS, M_AXI_GP0_WSTRB, M_AXI_GP0_ACLK, M_AXI_GP0_ARREADY, M_AXI_GP0_AWREADY, M_AXI_GP0_BVALID, M_AXI_GP0_RLAST, M_AXI_GP0_RVALID, M_AXI_GP0_WREADY, M_AXI_GP0_BID, M_AXI_GP0_RID, M_AXI_GP0_BRESP, M_AXI_GP0_RRESP, M_AXI_GP0_RDATA, FCLK_CLK0, FCLK_RESET0_N, MIO, DDR_CAS_n, DDR_CKE, DDR_Clk_n, DDR_Clk, DDR_CS_n, DDR_DRSTB, DDR_ODT, DDR_RAS_n, DDR_WEB, DDR_BankAddr, DDR_Addr, DDR_VRN, DDR_VRP, DDR_DM, DDR_DQ, DDR_DQS_n, DDR_DQS, PS_SRSTB, PS_CLK, PS_PORB)"}
{"task_id": 1072, "completion": "module DemoInterconnect_axi_spi_master_0_0(    output m_spi_mosi,    input m_spi_miso,    output m_spi_ss,    output m_spi_sclk,    input [3:0]s00_axi_awaddr,    input [2:0]s00_axi_awprot,    input s00_axi_awvalid,    output s00_axi_awready,    input [31:0]s00_axi_wdata,    input [3:0]s00_axi_wstrb,    input s00_axi_wvalid,    output s00_axi_wready,    output [1:0]s00_axi_bresp,    output s00_axi_bvalid,    input s00_axi_bready,    input [3:0]s00_axi_araddr,    input [2:0]s00_axi_arprot,    input s00_axi_arvalid,    output s00_axi_arready,    output [31:0]s00_axi_rdata,    output [1:0]s00_axi_rresp,    output s00_axi_rvalid,    input s00_axi_rready,    input s00_axi_aclk,    input s00_axi_aresetn);"}
{"task_id": 1082, "completion": "module altera_up_avalon_reset_from_locked_signal (locked, reset); input locked; output reset;"}
{"task_id": 1044, "completion": "module sky130_fd_sc_hd__a32o (\n    output X,\n    input A1,\n    input A2,\n    input A3,\n    input B1,\n    input B2,\n    input VPWR,\n    input VGND,\n    input VPB,\n    input VNB\n);"}
{"task_id": 1079, "completion": "module sky130_fd_sc_hd__sdfrtp ( Q, CLK, D, SCD, SCE, RESET_B, VPWR, VGND, VPB, VNB );"}
{"task_id": 1071, "completion": "module lfsr_prbs_check #(\n        parameter LFSR_WIDTH = 31,\n        parameter LFSR_POLY = 31'h10000001,\n        parameter LFSR_INIT = {LFSR_WIDTH{1'b1}},\n        parameter LFSR_CONFIG = \"FIBONACCI\",\n        parameter REVERSE = 0,\n        parameter INVERT = 1,\n        parameter DATA_WIDTH = 8,\n        parameter STYLE = \"AUTO\"\n    )(\n        input wire clk,\n        input wire rst,\n        input wire [DATA_WIDTH-1:0] data_in,\n        input wire data_in_valid,\n        output wire [DATA_WIDTH-1:0] data_out\n    );"}
{"task_id": 1093, "completion": "module sky130_fd_sc_hvl__dfsbp (\n    input  D    ,\n    output Q    ,\n    output Q_N  ,\n    input  SET_B,\n    input  CLK\n);"}
{"task_id": 1090, "completion": "module sky130_fd_sc_hd__o21ai ( Y, A1, A2, B1, VPWR, VGND, VPB, VNB );"}
{"task_id": 984, "completion": "module axi_dwidth_converter_v2_1_9_w_downsizer #(\n   parameter         C_FAMILY                         = \"none\", \n                       parameter integer C_S_AXI_DATA_WIDTH               = 64,\n                       parameter integer C_M_AXI_DATA_WIDTH               = 32,\n                       parameter integer C_S_AXI_BYTES_LOG                = 3,\n                       parameter integer C_M_AXI_BYTES_LOG                = 2,\n                       parameter integer C_RATIO_LOG                      = 1\n   )(\n   input  wire                                                    ARESET,\n   input  wire                                                    ACLK,\n   input  wire                              cmd_valid,\n   input  wire                              cmd_mirror,\n   input  wire                              cmd_fix,\n   input  wire [C_S_AXI_BYTES_LOG-1:0]      cmd_first_word, \n   input  wire [C_S_AXI_BYTES_LOG-1:0]      cmd_offset,\n   input  wire [C_S_AXI_BYTES_LOG-1:0]      cmd_mask,\n   input  wire [C_M_AXI_BYTES_LOG:0]        cmd_step,\n   input  wire [3-1:0]                      cmd_size,\n   input  wire [8-1:0]                      cmd_length,\n   output wire                              cmd_ready,\n   input  wire [C_S_AXI_DATA_WIDTH-1:0]     S_AXI_WDATA,\n   input  wire [C_S_AXI_DATA_WIDTH/8-1:0]   S_AXI_WSTRB,\n   input  wire                                                    S_AXI_WLAST,\n   input  wire                                                    S_AXI_WVALID,\n   output wire                                                    S_AXI_WREADY,\n   output wire [C_M_AXI_DATA_WIDTH-1:0]    M_AXI_WDATA,\n   output wire [C_M_AXI_DATA_WIDTH/8-1:0]  M_AXI_WSTRB,\n   output wire                                                   M_AXI_WLAST,\n   output wire                                                   M_AXI_WVALID,\n   input  wire                                                   M_AXI_WREADY\n   );"}
{"task_id": 1001, "completion": "module adbg_jsp_biu(\n   input tck_i,\n   input rst_i,\n   input [7:0] data_i,\n   output [7:0] data_o,\n   output [3:0] bytes_free_o,\n   output [3:0] bytes_available_o,\n   input rd_strobe_i,\n   input wr_strobe_i,\n   input wb_clk_i,\n   input wb_rst_i,\n   input [31:0] wb_adr_i,\n   output [31:0] wb_dat_o,\n   input [31:0] wb_dat_i,\n   input wb_cyc_i,\n   input wb_stb_i,\n   input [3:0] wb_sel_i,\n   input wb_we_i,\n   output wb_ack_o,\n   input wb_cab_i,\n   output wb_err_o,\n   input [2:0] wb_cti_i,\n   input [1:0] wb_bte_i,\n   output int_o\n);"}
{"task_id": 1110, "completion": "module sky130_fd_sc_hd__bufbuf (\n    output X,\n    input  A\n);"}
{"task_id": 1108, "completion": "module sky130_fd_sc_ms__a21o_2 (\n    X   ,\n    A1  ,\n    A2  ,\n    B1  ,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 994, "completion": "module axi_basic_tx_pipeline #(\n  parameter C_DATA_WIDTH = 128,\n  parameter C_PM_PRIORITY = \"FALSE\",\n  parameter TCQ = 1,\n  parameter REM_WIDTH  = (C_DATA_WIDTH == 128) ? 2 : 1,\n  parameter STRB_WIDTH = C_DATA_WIDTH / 8\n  ) (\n  input      [C_DATA_WIDTH-1:0] s_axis_tx_tdata,\n  input                         s_axis_tx_tvalid,\n  output                        s_axis_tx_tready,\n  input        [STRB_WIDTH-1:0] s_axis_tx_tstrb,\n  input                         s_axis_tx_tlast,\n  input                   [3:0] s_axis_tx_tuser,\n  output     [C_DATA_WIDTH-1:0] trn_td,\n  output                        trn_tsof,\n  output                        trn_teof,\n  output                        trn_tsrc_rdy,\n  input                         trn_tdst_rdy,\n  output                        trn_tsrc_dsc,\n  output        [REM_WIDTH-1:0] trn_trem,\n  output                        trn_terrfwd,\n  output                        trn_tstr,\n  output                        trn_tecrc_gen,\n  input                         trn_lnk_up,\n  input                         tready_thrtl,\n  input                         user_clk,\n  input                         user_rst\n);"}
{"task_id": 1096, "completion": "module design_1_wrapper(\n    input TMDS_Clk_n,\n    input TMDS_Clk_p,\n    input [2:0] TMDS_Data_n,\n    input [2:0] TMDS_Data_p,\n    input clk_in1,\n    inout ddc_scl_io,\n    inout ddc_sda_io,\n    output [0:0] hdmi_hpd,\n    output [0:0] hdmi_out_en,\n    output [3:0] led,\n    input reset,\n    output [4:0] vga_pBlue,\n    output [5:0] vga_pGreen,\n    output vga_pHSync,\n    output [4:0] vga_pRed,\n    output vga_pVSync\n);"}
{"task_id": 1092, "completion": "module negexp(\n        input wire clk,\n        input wire rst,\n        input wire [31:0] inp,\n        input wire inp_valid,\n        output wire [31:0] out,\n        output wire out_valid,\n        output wire [7:0] debug\n    );"}
{"task_id": 638, "completion": "module crg(\noutput clk_crc5,\noutput clk_crc16,\noutput clk_blf,\noutput clk_cp,\noutput clk_prng,\noutput reg clk_frm,\noutput clk_fm0,\noutput reg clk_mil,\noutput clk_mem,\noutput rst_n,\noutput reg rst_for_new_package,\noutput rst_crc16,\noutput reg start_working,\ninput clk_200K,\ninput clk_dpie,\ninput pie_code,\ninput rst,\ninput dr,\ninput [1:0]m,\ninput en_crc5,\ninput en_crc16,\ninput en_2nd_clk_cp,\ninput en_prng_idol,\ninput en_prng_act,\ninput en_tx,\ninput en_if,\ninput packet_complete_sync,\ninput en_crc16_for_rpy,\ninput reply_complete,\ninput rd_complete,\ninput bs_complete\n);"}
{"task_id": 1105, "completion": "module exunit_ldst(\n   input wire clk,\n   input wire reset,\n   input wire [`DATA_LEN-1:0] ex_src1,\n   input wire [`DATA_LEN-1:0] ex_src2,\n   input wire [`ADDR_LEN-1:0] pc,\n   input wire [`DATA_LEN-1:0] imm,\n   input wire dstval,\n   input wire [`SPECTAG_LEN-1:0] spectag,\n   input wire specbit,\n   input wire issue,\n   input wire prmiss,\n   input wire [`SPECTAG_LEN-1:0] spectagfix,\n   input wire [`RRF_SEL-1:0] rrftag,\n   output wire [`DATA_LEN-1:0] result,\n   output wire rrf_we,\n   output wire rob_we,\n   output wire [`RRF_SEL-1:0] wrrftag,\n   output wire kill_speculative,\n   output wire busy_next,\n   output wire stfin,\n   output wire memoccupy_ld,\n   input wire fullsb,\n   output wire [`DATA_LEN-1:0] storedata,\n   output wire [`ADDR_LEN-1:0] storeaddr,\n   input wire hitsb,\n   output wire [`ADDR_LEN-1:0] ldaddr,\n   input wire [`DATA_LEN-1:0] lddatasb,\n   input wire [`DATA_LEN-1:0] lddatamem\n);"}
{"task_id": 1068, "completion": "module user_design(  clk,  rst,  exception,  input_timer,  input_rs232_rx,  input_ps2,  input_i2c,  input_switches,  input_eth_rx,  input_buttons,  input_timer_stb,  input_rs232_rx_stb,  input_ps2_stb,  input_i2c_stb,  input_switches_stb,  input_eth_rx_stb,  input_buttons_stb,  input_timer_ack,  input_rs232_rx_ack,  input_ps2_ack,  input_i2c_ack,  input_switches_ack,  input_eth_rx_ack,  input_buttons_ack,  output_seven_segment_annode,  output_eth_tx,  output_rs232_tx,  output_leds,  output_audio,  output_led_g,  output_seven_segment_cathode,  output_led_b,  output_i2c,  output_vga,  output_led_r,  output_seven_segment_annode_stb,  output_eth_tx_stb,  output_rs232_tx_stb,  output_leds_stb,  output_audio_stb,  output_led_g_stb,  output_seven_segment_cathode_stb,  output_led_b_stb,  output_i2c_stb,  output_vga_stb,  output_led_r_stb,  output_seven_segment_annode_ack,  output_eth_tx_ack,  output_rs232_tx_ack,  output_leds_ack,  output_audio_ack,  output_led_g_ack,  output_seven_segment_cathode_ack,  output_led_b_ack,  output_i2c_ack,  output_vga_ack,  output_led_r_ack);"}
{"task_id": 1102, "completion": "module buttonDebouncer\n    #(  /* Debounce time - Count in nanosecond */\n        parameter pDEBOUNCE_PERIOD  = 100_000_000,\n        /* Clock Input period - Count in nanosecond */\n        parameter pCLKIN_PERIOD     = 20,\n        /* Size of  button array */\n        parameter pARRAY_SIZE       = 2,\n        /* \n          Polarity configures the edge detection which edge would cause a tick  \n          Buttons are default to active low, which means a \"Button Down\" event is generated when the signal level fall from High to Low \n          Active high (pPOLARITY = 1) means a Button Down when the signal level changes from Low to High\n        */\n        parameter pPOLARITY         = 0)(\n  input                                     clk ,\n  input       [           pARRAY_SIZE-1:0]  buttons , \n  output      [           pARRAY_SIZE-1:0]  buttonState,\n  output  reg [           pARRAY_SIZE-1:0]  buttonUpTick,\n  output  reg [           pARRAY_SIZE-1:0]  buttonDwTick\n);"}
{"task_id": 1087, "completion": "module gfx_fragment_processor(clk_i, rst_i, pixel_alpha_i, x_counter_i, y_counter_i, z_i, u_i, v_i, bezier_factor0_i, bezier_factor1_i, bezier_inside_i, write_i, curve_write_i, ack_o, pixel_x_o, pixel_y_o, pixel_z_o, pixel_color_i, pixel_color_o, pixel_alpha_o, write_o, ack_i, texture_ack_i, texture_data_i, texture_addr_o, texture_sel_o, texture_request_o, texture_enable_i, tex0_base_i, tex0_size_x_i, tex0_size_y_i, color_depth_i, colorkey_enable_i, colorkey_i);"}
{"task_id": 1114, "completion": "module vga_renderer\n\t#(parameter WIDTH = 800,          // Visible horizontal pixels\n\t\t    H_FRONT_PORCH = 32,   // hsync timing\n\t\t    H_SYNC = 120,          // ..\n\t\t    H_BACK_PORCH = 32,    // ..\n\t\t    HEIGHT = 480,         // Visible vertical pixels\n\t\t    V_FRONT_PORCH = 8,   // vsync timing\n\t\t    V_SYNC = 5,           // ..\n\t\t    V_BACK_PORCH = 13)    // ..\n\t(\n\t input vga_clk,\n\t input reset_n,\n\t input [7:0] red,\n\t input [7:0] green,\n\t input [7:0] blue,\n\t output [7:0] vga_red,\n\t output [7:0] vga_green,\n\t output [7:0] vga_blue,\n\t output vga_hsync,\n\t output vga_vsync,\n\t output fb_hblank,\n\t output fb_vblank\n\t);"}
{"task_id": 1095, "completion": "module altera_tse_false_path_marker \n#(\n   parameter MARKER_WIDTH = 1\n)\n(\n   input    reset,\n   input    clk,\n   input    [MARKER_WIDTH - 1 : 0] data_in,\n   output   [MARKER_WIDTH - 1 : 0] data_out\n);"}
{"task_id": 1049, "completion": "module i2c_master_bit_ctrl(\n\tclk, rst, nReset, \n\tclk_cnt, ena, cmd, cmd_ack, busy, al, din, dout,\n\tscl_i, scl_o, scl_oen, sda_i, sda_o, sda_oen\n);\n\tinput clk;\n\tinput rst;\n\tinput nReset;\n\tinput ena;\n\tinput [15:0] clk_cnt;\n\tinput  [3:0] cmd;\n\toutput       cmd_ack;\n\toutput       busy;\n\toutput       al;\n\tinput  din;\n\toutput dout;\n\tinput  scl_i;\n\toutput scl_o;\n\toutput scl_oen;\n\tinput  sda_i;\n\toutput sda_o;\n\toutput sda_oen;"}
{"task_id": 1094, "completion": "module LAG_traffic_sink (flit_in, cntrl_out, rec_count, stats, clk, rst_n);"}
{"task_id": 1086, "completion": "module de3d_tc_tag_set(\n\tinput de_clk,\n\tinput de_rstn,\n\tinput ee_s0_hit,\n\tinput ee_s1_hit,\n\tinput eo_s0_hit,\n\tinput eo_s1_hit,\n\tinput oe_s0_hit,\n\tinput oe_s1_hit,\n\tinput oo_s0_hit,\n\tinput oo_s1_hit,\n\tinput [4:0] ee_tag_adr_wr,\n\tinput [4:0] eo_tag_adr_wr,\n\tinput [4:0] oe_tag_adr_wr,\n\tinput [4:0] oo_tag_adr_wr,\n\tinput [4:0] ee_tag_adr_rd,\n\tinput [4:0] eo_tag_adr_rd,\n\tinput [4:0] oe_tag_adr_rd,\n\tinput [4:0] oo_tag_adr_rd,\n\toutput ee_lru,\n\toutput eo_lru,\n\toutput oe_lru,\n\toutput oo_lru\n);"}
{"task_id": 1103, "completion": "module assertion_check (input wire clk, input wire `OVL_RESET_SIGNAL, input wire antecedent_expr, input wire consequent_expr);"}
{"task_id": 1120, "completion": "module dcm (input CLK_IN, output CLK_OUT);"}
{"task_id": 1133, "completion": "module round_robin_arb\n  #(\n    parameter TCQ = 100,\n    parameter WIDTH = 3\n   )\n   (\n    clk, rst, req, disable_grant, current_master, upd_last_master,\n    grant_ns, grant_r\n   );\n\n  input clk;\n  input rst;\n  input [WIDTH-1:0] req;\n  input disable_grant;\n  input [WIDTH-1:0] current_master;\n  input upd_last_master;\n  output wire [WIDTH-1:0] grant_ns;\n  output reg [WIDTH-1:0] grant_r;\n  wire [WIDTH-1:0] last_master_ns;"}
{"task_id": 1138, "completion": "module game_text_top(\n    input wire clk, reset,\n    input wire [1:0] btn,\n    output wire hsync, vsync,\n    output wire [2:0] rgb\n);"}
{"task_id": 1128, "completion": "module softusb_ram #(\n\tparameter pmem_width = 12,\n\tparameter dmem_width = 13,\n\tparameter initprog = \"\"\n) (\n\tinput sys_clk,\n\tinput sys_rst,\n\n\tinput usb_clk,\n\tinput usb_rst,\n\n\tinput [31:0] wb_adr_i,\n\toutput [31:0] wb_dat_o,\n\tinput [31:0] wb_dat_i,\n\tinput [3:0] wb_sel_i,\n\tinput wb_stb_i,\n\tinput wb_cyc_i,\n\toutput reg wb_ack_o,\n\tinput wb_we_i,\n\n\tinput pmem_ce,\n\tinput [pmem_width-1:0] pmem_a,\n\toutput [15:0] pmem_d,\n\n\tinput dmem_we,\n\tinput [dmem_width-1:0] dmem_a,\n\tinput [7:0] dmem_di,\n\toutput reg [7:0] dmem_do\n);"}
{"task_id": 1155, "completion": "module clk_wiz_0(clk_in1, clk_out1, reset, locked);"}
{"task_id": 885, "completion": "module pcie_7x_v1_3_pcie_pipe_pipeline #(\n  parameter LINK_CAP_MAX_LINK_WIDTH = 8,\n  parameter PIPE_PIPELINE_STAGES = 0\n)(\n  input wire pipe_tx_rcvr_det_i,\n  input wire pipe_tx_reset_i,\n  input wire pipe_tx_rate_i,\n  input wire pipe_tx_deemph_i,\n  input wire [2:0] pipe_tx_margin_i,\n  input wire pipe_tx_swing_i,\n  output wire pipe_tx_rcvr_det_o,\n  output wire pipe_tx_reset_o,\n  output wire pipe_tx_rate_o,\n  output wire pipe_tx_deemph_o,\n  output wire [2:0] pipe_tx_margin_o,\n  output wire pipe_tx_swing_o,\n  output wire [1:0] pipe_rx0_char_is_k_o,\n  output wire [15:0] pipe_rx0_data_o,\n  output wire pipe_rx0_valid_o,\n  output wire pipe_rx0_chanisaligned_o,\n  output wire [2:0] pipe_rx0_status_o,\n  output wire pipe_rx0_phy_status_o,\n  output wire pipe_rx0_elec_idle_o,\n  input wire pipe_rx0_polarity_i,\n  input wire pipe_tx0_compliance_i,\n  input wire [1:0] pipe_tx0_char_is_k_i,\n  input wire [15:0] pipe_tx0_data_i,\n  input wire pipe_tx0_elec_idle_i,\n  input wire [1:0] pipe_tx0_powerdown_i,\n  input wire [1:0] pipe_rx0_char_is_k_i,\n  input wire [15:0] pipe_rx0_data_i,\n  input wire pipe_rx0_valid_i,\n  input wire pipe_rx0_chanisaligned_i,\n  input wire [2:0] pipe_rx0_status_i,\n  input wire pipe_rx0_phy_status_i,\n  input wire pipe_rx0_elec_idle_i,\n  output wire pipe_rx0_polarity_o,\n  output wire pipe_tx0_compliance_o,\n  output wire [1:0] pipe_tx0_char_is_k_o,\n  output wire [15:0] pipe_tx0_data_o,\n  output wire pipe_tx0_elec_idle_o,\n  output wire [1:0] pipe_tx0_powerdown_o,\n  /* \u4e0b\u9762\u4fdd\u7559 Lane 1 \u5230 Lane 7 \u7684\u63a5\u53e3\u5b9a\u4e49 */\n  input wire pipe_clk,\n  input wire rst_n\n);"}
{"task_id": 1030, "completion": "module gsu_fmult (\n  clk, p, a, b\n);\n  input clk;\n  output [31 : 0] p;\n  input [15 : 0] a;\n  input [15 : 0] b;"}
{"task_id": 1144, "completion": "module cx4_datrom(\n  input clka,\n  input [9 : 0] addra,\n  output [23 : 0] douta\n);"}
{"task_id": 1154, "completion": "module sub_sample(  input clock,  input reset,  input [`NH_VECTOR_BITWIDTH:0] nh_vector,  output [`POOL_OUT_BITWIDTH:0] pool_out);"}
{"task_id": 1145, "completion": "module sky130_fd_sc_lp__dfrtn (\n        input  wire D,\n        input  wire RESET_B,\n        input  wire VPWR,\n        input  wire VGND,\n        input  wire VPB,\n        input  wire VNB,\n        output wire Q,\n        input  wire CLK_N\n    );"}
{"task_id": 1113, "completion": "module nios_system_regfile_data (                                 \n                                  input   [  1: 0] address, \n                                  input            chipselect, \n                                  input            clk, \n                                  input            reset_n, \n                                  input            write_n, \n                                  input   [ 31: 0] writedata, \n                                  output  [ 31: 0] out_port, \n                                  output  [ 31: 0] readdata \n                                );"}
{"task_id": 1137, "completion": "module uart #(\n    parameter DATA_WIDTH = 8\n)(\n    input  wire                   clk,\n    input  wire                   rst,\n    input  wire [DATA_WIDTH-1:0]  s_axis_tdata,\n    input  wire                   s_axis_tvalid,\n    output wire                   s_axis_tready,\n    output wire [DATA_WIDTH-1:0]  m_axis_tdata,\n    output wire                   m_axis_tvalid,\n    input  wire                   m_axis_tready,\n    input  wire                   rxd,\n    output wire                   txd,\n    output wire                   tx_busy,\n    output wire                   rx_busy,\n    output wire                   rx_overrun_error,\n    output wire                   rx_frame_error,\n    input  wire [15:0]            prescale\n);"}
{"task_id": 1125, "completion": "module niosII_system_sdram_0_input_efifo_module ( clk, rd, reset_n, wr, wr_data, almost_empty, almost_full, empty, full, rd_data ); input clk; input rd; input reset_n; input wr; input [42:0] wr_data; output almost_empty; output almost_full; output empty; output full; output [42:0] rd_data;"}
{"task_id": 1149, "completion": "module system_vga_sync_reset_0_0(clk, rst, active, hsync, vsync, xaddr, yaddr); input clk; input rst; output active; output hsync; output vsync; output [9:0] xaddr; output [9:0] yaddr;"}
{"task_id": 1162, "completion": "module vvp_recv_vec4_pv (input wire logic clk, input wire logic inp, output wire logic[16:0] arr_out);"}
{"task_id": 1064, "completion": "module instructionROM(\n  clka,\n  addra,\n  douta\n);\n\ninput clka;\ninput [7 : 0] addra;\noutput [31 : 0] douta;"}
{"task_id": 1159, "completion": "module tmu2_hinterp(\n\tinput sys_clk,\n\tinput sys_rst,\n\n\toutput busy,\n\n\tinput pipe_stb_i,\n\toutput pipe_ack_o,\n\tinput signed [11:0] x,\n\tinput signed [11:0] y,\n\tinput signed [17:0] tsx,\n\tinput signed [17:0] tsy,\n\tinput diff_x_positive,\n\tinput [16:0] diff_x_q,\n\tinput [16:0] diff_x_r,\n\tinput diff_y_positive,\n\tinput [16:0] diff_y_q,\n\tinput [16:0] diff_y_r,\n\n\tinput [10:0] dst_squarew,\n\n\toutput pipe_stb_o,\n\tinput pipe_ack_i,\n\toutput reg signed [11:0] dx,\n\toutput reg signed [11:0] dy,\n\toutput signed [17:0] tx,\n\toutput signed [17:0] ty\n);"}
{"task_id": 1147, "completion": "module squarer (\n        input   [39:0]  dataa,\n        output  [79:0]  result\n    );"}
{"task_id": 1150, "completion": "module type_system (\n    input  wire [31:0] expr_in,\n    output wire [31:0] type_out\n);"}
{"task_id": 1152, "completion": "module niosII_system_green_leds (  output  [  7: 0] out_port,  output  [ 31: 0] readdata,  input   [  1: 0] address,  input            chipselect,  input            clk,  input            reset_n,  input            write_n,  input   [ 31: 0] writedata );"}
{"task_id": 1161, "completion": "module feedforward_ddiv_64ns_64ns_64_31\n #(parameter\n    ID         = 2,\n    NUM_STAGE  = 31,\n    din0_WIDTH = 64,\n    din1_WIDTH = 64,\n    dout_WIDTH = 64\n )(\n    input  wire                  clk,\n    input  wire                  reset,\n    input  wire                  ce,\n    input  wire [din0_WIDTH-1:0] din0,\n    input  wire [din1_WIDTH-1:0] din1,\n    output wire [dout_WIDTH-1:0] dout\n );"}
{"task_id": 1157, "completion": "module total_map #(parameter A = 8)( input string key, output logic [A-1:0] value );"}
{"task_id": 1174, "completion": "module convolve_kernel_fbkb #(parameter ID = 1, NUM_STAGE = 5, din0_WIDTH = 32, din1_WIDTH = 32, dout_WIDTH = 32)(input wire clk, input wire reset, input wire ce, input wire [din0_WIDTH-1:0] din0, input wire [din1_WIDTH-1:0] din1, output wire [dout_WIDTH-1:0] dout);"}
{"task_id": 1179, "completion": "module addr_decode (input wire [3:0] addr, output wire r, output wire s, output wire t, output wire x, output wire y, output wire z);"}
{"task_id": 1158, "completion": "module Video_System_CPU_jtag_debug_module_sysclk (\n        input wire clk,\n        input wire [1:0] ir_in,\n        input wire [37:0] sr,\n        input wire vs_udr,\n        input wire vs_uir,\n        output wire [37:0] jdo,\n        output wire take_action_break_a,\n        output wire take_action_break_b,\n        output wire take_action_break_c,\n        output wire take_action_ocimem_a,\n        output wire take_action_ocimem_b,\n        output wire take_action_tracectrl,\n        output wire take_action_tracemem_a,\n        output wire take_action_tracemem_b,\n        output wire take_no_action_break_a,\n        output wire take_no_action_break_b,\n        output wire take_no_action_break_c,\n        output wire take_no_action_ocimem_a,\n        output wire take_no_action_tracemem_a\n    );"}
{"task_id": 1131, "completion": "module cam_ram_block (\n\tclk,rst,\n\twaddr,wdata,wcare,start_write,ready,\n\tlookup_data,match_lines\n);\n\nparameter DATA_WIDTH = 7;\nparameter ADDR_WIDTH = 5;\nparameter WORDS = (1<<ADDR_WIDTH);\n\ninput clk,rst,start_write;\ninput [ADDR_WIDTH-1:0] waddr;\ninput [DATA_WIDTH-1:0] wdata,wcare;\n\ninput [DATA_WIDTH-1:0] lookup_data;\noutput [WORDS-1:0] match_lines;\nwire [WORDS-1:0] match_lines;\noutput ready;\nreg ready;"}
{"task_id": 1164, "completion": "module DP_RAM16K ( input rclk, input wclk, input wen, input ren, input[8:0] waddr, input[8:0] raddr, input[31:0] d_in, input[31:0] wenb, output[31:0] d_out );"}
{"task_id": 1153, "completion": "module dac_buf(\n  input clka,\n  input [0 : 0] wea,\n  input [10 : 0] addra,\n  input [7 : 0] dina,\n  input clkb,\n  input [8 : 0] addrb,\n  output [31 : 0] doutb\n);"}
{"task_id": 1185, "completion": "module design_1_xlslice_6_1 (\n  input wire [39 : 0] Din,\n  output wire [15 : 0] Dout\n);"}
{"task_id": 1124, "completion": "module c_prefix_arbiter(clk, reset, active, req_pr, gnt_pr, gnt, update);"}
{"task_id": 1195, "completion": "module aurora_201_CHBOND_COUNT_DEC ( \n    RX_STATUS, \n    CHANNEL_BOND_LOAD, \n    USER_CLK \n);"}
{"task_id": 1186, "completion": "module alt_vipitc131_common_to_binary(\n    input [NO_OF_MODES-1:0] one_hot,\n    output [LOG2_NO_OF_MODES-1:0] binary\n);\n\nparameter NO_OF_MODES = 3;\nparameter LOG2_NO_OF_MODES = 2;"}
{"task_id": 1109, "completion": "module aur1 #( parameter SIM_GTPRESET_SPEEDUP=0 )( input [0:63] TX_D, input TX_SRC_RDY_N, output TX_DST_RDY_N, output [0:63] RX_D, output RX_SRC_RDY_N, input DO_CC, input WARN_CC, input [0:3] RXP, input [0:3] RXN, output [0:3] TXP, output [0:3] TXN, input GTPD7, output HARD_ERROR, output SOFT_ERROR, output CHANNEL_UP, output [0:3] LANE_UP, input USER_CLK, input SYNC_CLK, input RESET, input POWER_DOWN, input [2:0] LOOPBACK, input GT_RESET, output TX_LOCK, output TX_OUT_CLK, input [2:0] TXDIFF, input [2:0] TXPREEMP );"}
{"task_id": 1165, "completion": "module COREAHBLITE_SLAVESTAGE( input HCLK, input HRESETN, input HREADYOUT, input HRESP, output reg HSEL, output reg [31:0] HADDR, output reg [2:0] HSIZE, output wire HTRANS, output reg HWRITE, output reg [31:0] HWDATA, output wire HREADY_S, output reg HMASTLOCK, input [3:0] MADDRSEL, input [3:0] MDATASEL, input [3:0] MPREVDATASLAVEREADY, output reg [3:0] MADDRREADY, output reg [3:0] MDATAREADY, output reg [3:0] MHRESP, input [31:0] M0GATEDHADDR, input M0GATEDHMASTLOCK, input [2:0] M0GATEDHSIZE, input M0GATEDHTRANS, input M0GATEDHWRITE, input [31:0] M1GATEDHADDR, input M1GATEDHMASTLOCK, input [2:0] M1GATEDHSIZE, input M1GATEDHTRANS, input M1GATEDHWRITE, input [31:0] M2GATEDHADDR, input M2GATEDHMASTLOCK, input [2:0] M2GATEDHSIZE, input M2GATEDHTRANS, input M2GATEDHWRITE, input [31:0] M3GATEDHADDR, input M3GATEDHMASTLOCK, input [2:0] M3GATEDHSIZE, input M3GATEDHTRANS, input M3GATEDHWRITE, input [31:0] HWDATA_M0, input [31:0] HWDATA_M1, input [31:0] HWDATA_M2, input [31:0] HWDATA_M3 );"}
{"task_id": 1170, "completion": "module obc1(\n  input clk,\n  input enable,\n  input [7:0] data_in,\n  output [7:0] data_out,\n  input [12:0] addr_in,\n  input reg_we_rising\n);"}
{"task_id": 980, "completion": "module axi_tft_v2_0_tft_interface (    TFT_Clk,                // TFT Clock    TFT_Rst,                // TFT Reset    TFT_Rst_8s,             // TFT Reset for 8 seriese OSERDESE3    Bus2IP_Clk,             // Slave Clock    Bus2IP_Rst,             // Slave Reset    HSYNC,                  // Hsync input    VSYNC,                  // Vsync input    DE,                     // Data Enable    RED,                    // RED pixel data     GREEN,                  // Green pixel data    BLUE,                   // Blue pixel data    TFT_HSYNC,              // TFT Hsync    TFT_VSYNC,              // TFT Vsync    TFT_DE,                 // TFT data enable    TFT_VGA_CLK,            // TFT VGA clock    TFT_VGA_R,              // TFT VGA Red pixel data     TFT_VGA_G,              // TFT VGA Green pixel data    TFT_VGA_B,              // TFT VGA Blue pixel data    TFT_DVI_CLK_P,          // TFT DVI differential clock    TFT_DVI_CLK_N,          // TFT DVI differential clock    TFT_DVI_DATA,           // TFT DVI pixel data        //IIC init state machine for Chrontel CH7301C    I2C_done,               // I2C configuration done    TFT_IIC_SCL_I,          // I2C Clock input     TFT_IIC_SCL_O,          // I2C Clock output    TFT_IIC_SCL_T,          // I2C Clock control    TFT_IIC_SDA_I,          // I2C data input    TFT_IIC_SDA_O,          // I2C data output     TFT_IIC_SDA_T,          // I2C data control    IIC_xfer_done,          // IIC configuration done    TFT_iic_xfer,           // IIC configuration request    TFT_iic_reg_addr,       // IIC register address     TFT_iic_reg_data        // IIC register data    );"}
{"task_id": 1189, "completion": "module patterngenerator (\n\tinput csi_clock_clk,\n\tinput csi_clock_reset,\n\tinput avs_ctrl_address,\n\tinput avs_ctrl_read,\n\toutput [31:0]avs_ctrl_readdata,\n\tinput avs_ctrl_write,\n\tinput [31:0]avs_ctrl_writedata,\n\tinput [7:0]avs_data_address,\n\tinput avs_data_write,\n\tinput [1:0]avs_data_byteenable,\n\tinput [15:0]avs_data_writedata,\n\tinput clkena,\n\tinput trigger,\n\toutput [5:0]pgout\n);"}
{"task_id": 1203, "completion": "module axis_arb_mux #(\n        parameter S_COUNT = 4,\n        parameter DATA_WIDTH = 64,\n        parameter KEEP_ENABLE = (DATA_WIDTH>8),\n        parameter KEEP_WIDTH = (DATA_WIDTH/8),\n        parameter ID_ENABLE = 1,\n        parameter ID_WIDTH = 8,\n        parameter DEST_ENABLE = 1,\n        parameter DEST_WIDTH = 8,\n        parameter USER_ENABLE = 1,\n        parameter USER_WIDTH = 1,\n        parameter LAST_ENABLE = 1,\n        parameter ARB_TYPE_ROUND_ROBIN = 0,\n        parameter ARB_LSB_HIGH_PRIORITY = 1\n    )(\n        input wire clk,\n        input wire rst,\n        input wire [S_COUNT*DATA_WIDTH-1:0] s_axis_tdata,\n        input wire [S_COUNT*KEEP_WIDTH-1:0] s_axis_tkeep,\n        input wire [S_COUNT-1:0] s_axis_tvalid,\n        output wire [S_COUNT-1:0] s_axis_tready,\n        input wire [S_COUNT-1:0] s_axis_tlast,\n        input wire [S_COUNT*ID_WIDTH-1:0] s_axis_tid,\n        input wire [S_COUNT*DEST_WIDTH-1:0] s_axis_tdest,\n        input wire [S_COUNT*USER_WIDTH-1:0] s_axis_tuser,\n        input wire m_axis_tready,\n        output wire [DATA_WIDTH-1:0] m_axis_tdata,\n        output wire [KEEP_WIDTH-1:0] m_axis_tkeep,\n        output wire m_axis_tvalid,\n        output wire m_axis_tlast,\n        output wire [ID_WIDTH-1:0] m_axis_tid,\n        output wire [DEST_WIDTH-1:0] m_axis_tdest,\n        output wire [USER_WIDTH-1:0] m_axis_tuser\n    );"}
{"task_id": 1213, "completion": "module pipeline_buffer_2bit(\n    input wire [1:0] ip,\n    output wire [1:0] op,\n    input wire clk,\n    input wire rst\n);"}
{"task_id": 790, "completion": "module BLE_v2_20_0 (\n    clk);\n    output      clk;"}
{"task_id": 1215, "completion": "module sky130_fd_sc_hdll__o2bb2a ( X, A1_N, A2_N, B1, B2, VPWR, VGND, VPB, VNB );"}
{"task_id": 1196, "completion": "module sfa_5to1_mux(\n  output  reg              s1_tready  ,\n  input   wire             s1_tvalid  ,\n  input   wire  [31 : 0]   s1_tdata   ,\n\n  output  reg              s2_tready  ,\n  input   wire             s2_tvalid  ,\n  input   wire  [31 : 0]   s2_tdata   ,\n\n  output  reg              s3_tready  ,\n  input   wire             s3_tvalid  ,\n  input   wire  [31 : 0]   s3_tdata   ,\n\n  output  reg              s4_tready  ,\n  input   wire             s4_tvalid  ,\n  input   wire  [31 : 0]   s4_tdata   ,\n\n  output  reg              s5_tready  ,\n  input   wire             s5_tvalid  ,\n  input   wire  [31 : 0]   s5_tdata   ,\n\n  input   wire             mO_tready ,\n  output  reg              mO_tvalid ,\n  output  reg   [31 : 0]   mO_tdata  ,\n\n  input   wire  [ 3 : 0]   CONF\n);"}
{"task_id": 1218, "completion": "module BRAM_TDP #(parameter DATA_WIDTH = 32, parameter ADDR_WIDTH = 10)(input wire clk_a, input wire rce_a, input wire [ADDR_WIDTH-1:0] ra_a, output wire [DATA_WIDTH-1:0] rq_a, input wire wce_a, input wire [ADDR_WIDTH-1:0] wa_a, input wire [DATA_WIDTH-1:0] wd_a, input wire clk_b, input wire rce_b, input wire [ADDR_WIDTH-1:0] ra_b, output wire [DATA_WIDTH-1:0] rq_b, input wire wce_b, input wire [ADDR_WIDTH-1:0] wa_b, input wire [DATA_WIDTH-1:0] wd_b);"}
{"task_id": 1035, "completion": "module bipolar_stepper (\n  input               clk,\n  input               rst,\n  input               i_go,\n  output              o_busy,\n  input               i_stop,\n  output  reg         o_err_bad_step,\n  input               i_full_step,\n  input               i_half_step,\n  input               i_micro_step,\n  input               i_continuous,\n  input               i_direction,\n  input       [31:0]  i_steps,\n  output              o_move_strobe,\n  input       [31:0]  i_step_run_period,\n  input       [31:0]  i_step_walk_period,\n  input       [31:0]  i_step_accelleration,\n  input       [31:0]  i_micro_step_hold,\n  input       [31:0]  i_shoot_through_period,\n  output              o_hbridge0_l,\n  output              o_hbridge0_r,\n  output              o_hbridge1_l,\n  output              o_hbridge1_r\n);"}
{"task_id": 1214, "completion": "module pipe3(dataOut_in, dataOut_out, wbyteen_in, wbyteen_out, regwren_in, regwren_out, rwraddrd_in, rwraddrd_out, reginmuxop_in, reginmuxop_out, aluOut_in, aluOut_out, instruction_in, instruction_out, clk, reset);"}
{"task_id": 1217, "completion": "module log_fifo (\n\taclr,\n\tclock,\n\tdata,\n\trdreq,\n\twrreq,\n\talmost_empty,\n\talmost_full,\n\tq\n);"}
{"task_id": 1222, "completion": "module zdos(\n\tinput  wire        fclk,\n\tinput  wire        rst_n,\n\tinput  wire        dos_turn_on,\n\tinput  wire        dos_turn_off,\n\tinput  wire        cpm_n,\n\toutput reg         dos,\n\tinput  wire        zpos,\n\tinput  wire        m1_n,\n\toutput reg         in_trdemu,\n\tinput  wire        clr_nmi,\n\tinput  wire        vg_rdwr_fclk,\n\tinput  wire [ 3:0] fdd_mask,\n\tinput  wire [ 1:0] vg_a,\n\tinput  wire        romnram,\n\toutput reg         trdemu_wr_disable\n);"}
{"task_id": 1208, "completion": "module wb_conmax_pri_enc(\n\t\tvalid,\n\t\tpri0, pri1, pri2, pri3,\n\t\tpri4, pri5, pri6, pri7,\n\t\tpri_out\n\t\t);"}
{"task_id": 1198, "completion": "module gfx_clip(\n    input clk_i,\n    input rst_i,\n    input clipping_enable_i,\n    input zbuffer_enable_i,\n    input [31:2] zbuffer_base_i,\n    input [point_width-1:0] target_size_x_i,\n    input [point_width-1:0] target_size_y_i,\n    input [point_width-1:0] clip_pixel0_x_i,\n    input [point_width-1:0] clip_pixel0_y_i,\n    input [point_width-1:0] clip_pixel1_x_i,\n    input [point_width-1:0] clip_pixel1_y_i,\n    input [point_width-1:0] raster_pixel_x_i,\n    input [point_width-1:0] raster_pixel_y_i,\n    input [point_width-1:0] raster_u_i,\n    input [point_width-1:0] raster_v_i,\n    input [31:0] flat_color_i,\n    input raster_write_i,\n    output reg ack_o,\n    input z_ack_i,\n    output [31:2] z_addr_o,\n    input [31:0] z_data_i,\n    output reg [3:0] z_sel_o,\n    output reg z_request_o,\n    input wbm_busy_i,\n    output reg [point_width-1:0] pixel_x_o,\n    output reg [point_width-1:0] pixel_y_o,\n    output reg [point_width-1:0] pixel_z_o,\n    output reg [point_width-1:0] u_o,\n    output reg [point_width-1:0] v_o,\n    output reg [7:0] a_o,\n    input [point_width-1:0] bezier_factor0_i,\n    input [point_width-1:0] bezier_factor1_i,\n    output reg [point_width-1:0] bezier_factor0_o,\n    output reg [point_width-1:0] bezier_factor1_o,\n    output reg [31:0] color_o,\n    output reg write_o,\n    input ack_i\n);\nparameter point_width = 16;"}
{"task_id": 1006, "completion": "module design_gpio_led(\n    inout [14:0] DDR_addr,\n    inout [2:0] DDR_ba,\n    inout DDR_cas_n,\n    inout DDR_ck_n,\n    inout DDR_ck_p,\n    inout DDR_cke,\n    inout DDR_cs_n,\n    inout [3:0] DDR_dm,\n    inout [31:0] DDR_dq,\n    inout [3:0] DDR_dqs_n,\n    inout [3:0] DDR_dqs_p,\n    inout DDR_odt,\n    inout DDR_ras_n,\n    inout DDR_reset_n,\n    inout DDR_we_n,\n    inout FIXED_IO_ddr_vrn,\n    inout FIXED_IO_ddr_vrp,\n    inout [53:0] FIXED_IO_mio,\n    inout FIXED_IO_ps_clk,\n    inout FIXED_IO_ps_porb,\n    inout FIXED_IO_ps_srstb,\n    output [7:0] LEDs_8Bits_tri_o\n);"}
{"task_id": 1141, "completion": "module serdes_1_to_n_data_s8_se (use_phase_detector, datain, rxioclk, rxserdesstrobe, reset, gclk, bitslip, debug_in, data_out, debug); parameter integer S = 8; parameter integer D = 16; parameter USE_PD = \"FALSE\"; input use_phase_detector; input [D-1:0] datain; input rxioclk; input rxserdesstrobe; input reset; input gclk; input bitslip; input [1:0] debug_in; output [(D*S)-1:0] data_out; output [2*D+6:0] debug;"}
{"task_id": 1229, "completion": "module ulight_fifo_timecode_rx (                                 // inputs:                                  address,                                  clk,                                  in_port,                                  reset_n,                                 // outputs:                                  readdata                               ); output  [ 31: 0] readdata; input   [  1: 0] address; input            clk; input   [  7: 0] in_port; input            reset_n;"}
{"task_id": 1201, "completion": "module dmem_mux3(\n    output reg [31:0] out0_addr_o,\n    output reg [31:0] out0_data_o,\n    input [31:0] out0_data_i,\n    output reg [3:0] out0_sel_o,\n    output reg out0_we_o,\n    output reg out0_stb_o,\n    output reg out0_cyc_o,\n    output reg [2:0] out0_cti_o,\n    input out0_ack_i,\n    input out0_stall_i,\n    output reg [31:0] out1_addr_o,\n    output reg [31:0] out1_data_o,\n    input [31:0] out1_data_i,\n    output reg [3:0] out1_sel_o,\n    output reg out1_we_o,\n    output reg out1_stb_o,\n    output reg out1_cyc_o,\n    output reg [2:0] out1_cti_o,\n    input out1_ack_i,\n    input out1_stall_i,\n    output reg [31:0] out2_addr_o,\n    output reg [31:0] out2_data_o,\n    input [31:0] out2_data_i,\n    output reg [3:0] out2_sel_o,\n    output reg out2_we_o,\n    output reg out2_stb_o,\n    output reg out2_cyc_o,\n    output reg [2:0] out2_cti_o,\n    input out2_ack_i,\n    input out2_stall_i,\n    input [31:0] mem_addr_i,\n    input [31:0] mem_data_i,\n    output reg [31:0] mem_data_o,\n    input [3:0] mem_sel_i,\n    input mem_we_i,\n    input mem_stb_i,\n    input mem_cyc_i,\n    input [2:0] mem_cti_i,\n    output reg mem_ack_o,\n    output reg mem_stall_o\n);"}
{"task_id": 1231, "completion": "module design_1_xlslice_12_0 (\n  input wire [31 : 0] Din,\n  output wire [23 : 0] Dout\n);"}
{"task_id": 1204, "completion": "module RAM_B(\n  input clka,\n  input [0 : 0] wea,\n  input [9 : 0] addra,\n  input [31 : 0] dina,\n  output [31 : 0] douta\n);"}
{"task_id": 1163, "completion": "module DSP_M_DATA #(\n  parameter [0:0] IS_CLK_INVERTED = 1'b0,\n  parameter [0:0] IS_RSTM_INVERTED = 1'b0,\n  parameter integer MREG = 1\n)(\n  output [44:0] U_DATA,\n  output [44:0] V_DATA,\n\n  input CEM,\n  input CLK,\n  input RSTM,\n  input [44:0] U,\n  input [44:0] V\n);"}
{"task_id": 1191, "completion": "module OpenSSD2_m00_regslice_0 (\n  input wire aclk,\n  input wire aresetn,\n  input wire [0 : 0] s_axi_awid,\n  input wire [31 : 0] s_axi_awaddr,\n  input wire [3 : 0] s_axi_awlen,\n  input wire [2 : 0] s_axi_awsize,\n  input wire [1 : 0] s_axi_awburst,\n  input wire [1 : 0] s_axi_awlock,\n  input wire [3 : 0] s_axi_awcache,\n  input wire [2 : 0] s_axi_awprot,\n  input wire [3 : 0] s_axi_awqos,\n  input wire s_axi_awvalid,\n  output wire s_axi_awready,\n  input wire [0 : 0] s_axi_wid,\n  input wire [63 : 0] s_axi_wdata,\n  input wire [7 : 0] s_axi_wstrb,\n  input wire s_axi_wlast,\n  input wire s_axi_wvalid,\n  output wire s_axi_wready,\n  output wire [0 : 0] s_axi_bid,\n  output wire [1 : 0] s_axi_bresp,\n  output wire s_axi_bvalid,\n  input wire s_axi_bready,\n  input wire [0 : 0] s_axi_arid,\n  input wire [31 : 0] s_axi_araddr,\n  input wire [3 : 0] s_axi_arlen,\n  input wire [2 : 0] s_axi_arsize,\n  input wire [1 : 0] s_axi_arburst,\n  input wire [1 : 0] s_axi_arlock,\n  input wire [3 : 0] s_axi_arcache,\n  input wire [2 : 0] s_axi_arprot,\n  input wire [3 : 0] s_axi_arqos,\n  input wire s_axi_arvalid,\n  output wire s_axi_arready,\n  output wire [0 : 0] s_axi_rid,\n  output wire [63 : 0] s_axi_rdata,\n  output wire [1 : 0] s_axi_rresp,\n  output wire s_axi_rlast,\n  output wire s_axi_rvalid,\n  input wire s_axi_rready,\n  output wire [0 : 0] m_axi_awid,\n  output wire [31 : 0] m_axi_awaddr,\n  output wire [3 : 0] m_axi_awlen,\n  output wire [2 : 0] m_axi_awsize,\n  output wire [1 : 0] m_axi_awburst,\n  output wire [1 : 0] m_axi_awlock,\n  output wire [3 : 0] m_axi_awcache,\n  output wire [2 : 0] m_axi_awprot,\n  output wire [3 : 0] m_axi_awqos,\n  output wire m_axi_awvalid,\n  input wire m_axi_awready,\n  output wire [0 : 0] m_axi_wid,\n  output wire [63 : 0] m_axi_wdata,\n  output wire [7 : 0] m_axi_wstrb,\n  output wire m_axi_wlast,\n  output wire m_axi_wvalid,\n  input wire m_axi_wready,\n  input wire [0 : 0] m_axi_bid,\n  input wire [1 : 0] m_axi_bresp,\n  input wire m_axi_bvalid,\n  output wire m_axi_bready,\n  output wire [0 : 0] m_axi_arid,\n  output wire [31 : 0] m_axi_araddr,\n  output wire [3 : 0] m_axi_arlen,\n  output wire [2 : 0] m_axi_arsize,\n  output wire [1 : 0] m_axi_arburst,\n  output wire [1 : 0] m_axi_arlock,\n  output wire [3 : 0] m_axi_arcache,\n  output wire [2 : 0] m_axi_arprot,\n  output wire [3 : 0] m_axi_arqos,\n  output wire m_axi_arvalid,\n  input wire m_axi_arready,\n  input wire [0 : 0] m_axi_rid,\n  input wire [63 : 0] m_axi_rdata,\n  input wire [1 : 0] m_axi_rresp,\n  input wire m_axi_rlast,\n  input wire m_axi_rvalid,\n  output wire m_axi_rready\n);"}
{"task_id": 1225, "completion": "module c_shift_reg(clk, reset, active, data_in, data_out);"}
{"task_id": 1227, "completion": "module tkg_and2 (output o, input i0, i1);\nmodule tkg_and3 (output o, input i0, i1, i2);\nmodule tkg_or2 (output o, input i0, i1);\nmodule tkg_or3 (output o, input i0, i1, i2);\nmodule tkg_nand2 (output o, input i0, i1);\nmodule tkg_nand3 (output o, input i0, i1, i2);\nmodule tkg_nor2 (output o, input i0, i1);\nmodule tkg_nor3 (output o, input i0, i1, i2);\nmodule tkg_c2 (output o, input i0, i1);\nmodule tkg_c3 (output o, input i0, i1, i2);\nmodule tkg_c2r1 (output o, input i0, i1, r);\nmodule tkg_c1u1 (output o, input s0, u0);\nmodule tkg_ao22 (output o, input i0, i1, i2, i3);\nmodule tkg_ao222 (output o, input i0, i1, i2, i3, i4, i5);\nmodule tkg_gnd (output o);\nmodule tkg_inv (output o, input i);\nmodule tkg_buff (output o, input i);\nmodule tkg_mutex (input ar, br, output ag, bg);"}
{"task_id": 1239, "completion": "module my_dcm (input CLKIN, output CLKFX, output LOCKED, input RST, output[7:0] STATUS);"}
{"task_id": 1210, "completion": "module tx_port_32 #(\n\tparameter C_DATA_WIDTH = 9'd32,\n\tparameter C_FIFO_DEPTH = 512,\n\tparameter C_FIFO_DEPTH_WIDTH = clog2((2**clog2(C_FIFO_DEPTH))+1)\n)(\n\tinput CLK,\n\tinput RST,\n\tinput [2:0] CONFIG_MAX_PAYLOAD_SIZE,\n\toutput TXN,\n\tinput TXN_ACK,\n\toutput [31:0] TXN_LEN,\n\toutput [31:0] TXN_OFF_LAST,\n\toutput [31:0] TXN_DONE_LEN,\n\toutput TXN_DONE,\n\tinput TXN_DONE_ACK,\n\tinput [C_DATA_WIDTH-1:0] SG_DATA,\n\tinput SG_DATA_EMPTY,\n\toutput SG_DATA_REN,\n\toutput SG_RST,\n\tinput SG_ERR,\n\toutput TX_REQ,\n\tinput TX_REQ_ACK,\n\toutput [63:0] TX_ADDR,\n\toutput [9:0] TX_LEN,\n\toutput [C_DATA_WIDTH-1:0] TX_DATA,\n\tinput TX_DATA_REN,\n\tinput TX_SENT,\n\tinput CHNL_CLK,\n\tinput CHNL_TX,\n\toutput CHNL_TX_ACK,\n\tinput CHNL_TX_LAST,\n\tinput [31:0] CHNL_TX_LEN,\n\tinput [30:0] CHNL_TX_OFF,\n\tinput [C_DATA_WIDTH-1:0] CHNL_TX_DATA,\n\tinput CHNL_TX_DATA_VALID,\n\toutput CHNL_TX_DATA_REN\n);"}
{"task_id": 1173, "completion": "module COREAHBLITE_SLAVESTAGE(\n    input HCLK,\n    input HRESETN,\n    input HREADYOUT,\n    input HRESP,\n    output reg HSEL,\n    output reg [31:0] HADDR,\n    output reg [2:0] HSIZE,\n    output wire HTRANS,\n    output reg HWRITE,\n    output reg [31:0] HWDATA,\n    output wire HREADY_S,\n    output reg HMASTLOCK,\n    input [3:0] MADDRSEL,\n    input [3:0] MDATASEL,\n    input [3:0] MPREVDATASLAVEREADY,\n    output reg [3:0] MADDRREADY,\n    output reg [3:0] MDATAREADY,\n    output reg [3:0] MHRESP,\n    input [31:0] M0GATEDHADDR,\n    input M0GATEDHMASTLOCK,\n    input [2:0] M0GATEDHSIZE,\n    input M0GATEDHTRANS,\n    input M0GATEDHWRITE,\n    input [31:0] M1GATEDHADDR,\n    input M1GATEDHMASTLOCK,\n    input [2:0] M1GATEDHSIZE,\n    input M1GATEDHTRANS,\n    input M1GATEDHWRITE,\n    input [31:0] M2GATEDHADDR,\n    input M2GATEDHMASTLOCK,\n    input [2:0] M2GATEDHSIZE,\n    input M2GATEDHTRANS,\n    input M2GATEDHWRITE,\n    input [31:0] M3GATEDHADDR,\n    input M3GATEDHMASTLOCK,\n    input [2:0] M3GATEDHSIZE,\n    input M3GATEDHTRANS,\n    input M3GATEDHWRITE,\n    input [31:0] HWDATA_M0,\n    input [31:0] HWDATA_M1,\n    input [31:0] HWDATA_M2,\n    input [31:0] HWDATA_M3\n);"}
{"task_id": 1243, "completion": "module design_1_xlslice_9_1 (\n  input wire [15 : 0] Din,\n  output wire [0 : 0] Dout\n);"}
{"task_id": 738, "completion": "module regs_mod (\n\tinput clk_i,\n\tinput reset_n_i,\n\tinput spi_busy_i,\n\tinput trans_start_i,\n\tinput rx_empty_i,\n\tinput tx_full_i,\n\toutput [31:0] reg_control_o,\n\toutput [31:0] reg_trans_ctrl_o,\n\toutput [31:0] reg_status_o,\n\tinput [31:0] reg_data_i,\n\tinput reg_load_i,\n\tinput [1:0] reg_sel_i\n);"}
{"task_id": 1171, "completion": "module regex_matcher (\n    input string s,\n    input reg_exp re,\n    output bool match\n);"}
{"task_id": 1200, "completion": "module TXMOD(  output TX,  input CLK,  input [7:0] data,  input valid,  output ready);"}
{"task_id": 1192, "completion": "module nsclock (\n    input areset,\n    input inclk0,\n    output c0,\n    output locked\n);"}
{"task_id": 1236, "completion": "module pfpu_tpram(\n\tinput sys_clk,\n\tinput [6:0] p1_a,\n\toutput reg [31:0] p1_d,\n\tinput [6:0] p2_a,\n\toutput reg [31:0] p2_d,\n\tinput p3_en,\n\tinput [6:0] p3_a,\n\tinput [31:0] p3_d\n);"}
{"task_id": 1250, "completion": "module ddr2_idelay_ctrl #(\n   parameter IODELAY_GRP = \"IODELAY_MIG\"\n)(\n   input  clk200,\n   input  rst200,\n   output idelay_ctrl_rdy\n);"}
{"task_id": 1212, "completion": "module I2C_Top(\n    input clk,\n    input clk_frame,\n    input rst,\n    input en,\n    input start,\n    input stop,\n    input ack_o,\n    input rw,\n    input [7:0] out_byte,\n    output reg busy,\n    output reg err,\n    output reg [7:0] in_byte,\n    output SCL,\n    input SDA_in,\n    output SDA_out,\n    output SDA_oen\n);"}
{"task_id": 1233, "completion": "module nios_timer_1 (\n                      input   [  2: 0] address,\n                      input            chipselect,\n                      input            clk,\n                      input            reset_n,\n                      input            write_n,\n                      input   [ 15: 0] writedata,\n                      output           irq,\n                      output  [ 15: 0] readdata\n                    );"}
{"task_id": 1260, "completion": "module fifo_cascade #(parameter WIDTH=32, SIZE=9)(input clk, input reset, input clear, input [WIDTH-1:0] datain, input src_rdy_i, output dst_rdy_o, output [WIDTH-1:0] dataout, output src_rdy_o, input dst_rdy_i, output [15:0] space, output [15:0] occupied);"}
{"task_id": 1182, "completion": "module dbg_if( \n                input tck_i,\n                input tdi_i,\n                output tdo_o,\n                input rst_i,\n                input shift_dr_i,\n                input pause_dr_i,\n                input update_dr_i,\n                input debug_select_i\n                `ifdef DBG_WISHBONE_SUPPORTED\n                ,\n                input wb_clk_i,\n                output [31:0] wb_adr_o,\n                output [31:0] wb_dat_o,\n                input [31:0] wb_dat_i,\n                output wb_cyc_o,\n                output wb_stb_o,\n                output [3:0] wb_sel_o,\n                output wb_we_o,\n                input wb_ack_i,\n                output wb_cab_o,\n                input wb_err_i,\n                output [2:0] wb_cti_o,\n                output [1:0] wb_bte_o\n                `endif\n                `ifdef DBG_CPU0_SUPPORTED\n                ,\n                input cpu0_clk_i,\n                output [31:0] cpu0_addr_o,\n                input [31:0] cpu0_data_i,\n                output [31:0] cpu0_data_o,\n                input cpu0_bp_i,\n                output cpu0_stall_o,\n                output cpu0_stb_o,\n                output cpu0_we_o,\n                input cpu0_ack_i,\n                output cpu0_rst_o\n                `endif\n                `ifdef DBG_CPU1_SUPPORTED\n                ,\n                input cpu1_clk_i,\n                output [31:0] cpu1_addr_o,\n                input [31:0] cpu1_data_i,\n                output [31:0] cpu1_data_o,\n                input cpu1_bp_i,\n                output cpu1_stall_o,\n                output cpu1_stb_o,\n                output cpu1_we_o,\n                input cpu1_ack_i,\n                output cpu1_rst_o\n                `endif\n              );"}
{"task_id": 1206, "completion": "module fir (\n\tclk,\n\treset,\n\tclk_ena,\n\ti_valid,\n\ti_in,\n\to_valid,\n\to_out\n);\n\tparameter dw = 18;\n\tparameter N = 14;\n\tparameter N_UNIQ = 7;\n\tlocalparam N_VALID_REGS = 15;\n\tinput clk;\n\tinput reset;\n\tinput clk_ena;\n\tinput i_valid;\n\tinput [dw-1:0] i_in;\n\toutput o_valid;\n\toutput [dw-1:0] o_out;\n\tlocalparam dw_add_int = 18;\n\tlocalparam dw_mult_int = 36;\n\tlocalparam scale_factor = 17;\n\tlocalparam N_INPUT_REGS = 14;"}
{"task_id": 1248, "completion": "module msu_databuf(\n  input clka,\n  input [0 : 0] wea,\n  input [13 : 0] addra,\n  input [7 : 0] dina,\n  input clkb,\n  input [13 : 0] addrb,\n  output [7 : 0] doutb\n);"}
{"task_id": 1268, "completion": "module sounds_mem(\n  input clka,\n  input [3 : 0] addra,\n  output [31 : 0] douta\n);"}
{"task_id": 1280, "completion": "module nios_system_regfile_we (\n        input  [  1: 0] address,\n        input            chipselect,\n        input            clk,\n        input            reset_n,\n        input            write_n,\n        input   [ 31: 0] writedata,\n        output           out_port,\n        output  [ 31: 0] readdata\n    );"}
{"task_id": 1281, "completion": "module ThreeStageSynchronizer( input wire clk_in, input wire din, input wire clk_out, output wire dout );"}
{"task_id": 1240, "completion": "module video_sys_Dual_Clock_FIFO (\n\tclk_stream_in,\n\treset_stream_in,\n\tclk_stream_out,\n\treset_stream_out,\n\n\tstream_in_data,\n\tstream_in_startofpacket,\n\tstream_in_endofpacket,\n\tstream_in_empty,\n\tstream_in_valid,\n\n\tstream_out_ready,\n\n\tstream_in_ready,\n\tstream_out_data,\n\tstream_out_startofpacket,\n\tstream_out_endofpacket,\n\tstream_out_empty,\n\tstream_out_valid\n);\n\nparameter DW = 29; \nparameter EW = 1; \ninput clk_stream_in;\ninput reset_stream_in;\ninput clk_stream_out;\ninput reset_stream_out;\ninput [DW: 0] stream_in_data;\ninput stream_in_startofpacket;\ninput stream_in_endofpacket;\ninput [EW: 0] stream_in_empty;\ninput stream_in_valid;\ninput stream_out_ready;\noutput stream_in_ready;\noutput [DW: 0] stream_out_data;\noutput stream_out_startofpacket;\noutput stream_out_endofpacket;\noutput [EW: 0] stream_out_empty;\noutput stream_out_valid;"}
{"task_id": 1283, "completion": "module SVDUnit(operand_in, sign_out, isZero_out, isInf_out, isNan_out, isDenorm_out, operand_out);"}
{"task_id": 1263, "completion": "module _80_quicklogic_alu (A, B, CI, BI, X, Y, CO);\n\tparameter A_SIGNED = 0;\n\tparameter B_SIGNED = 0;\n\tparameter A_WIDTH = 1;\n\tparameter B_WIDTH = 1;\n\tparameter Y_WIDTH = 1;\n\n\tinput [A_WIDTH-1:0] A;\n\tinput [B_WIDTH-1:0] B;\n\toutput [Y_WIDTH-1:0] X, Y;\n\n\tinput CI, BI;\n\toutput [Y_WIDTH-1:0] CO;"}
{"task_id": 1234, "completion": "module parser_h(\n    input          ip_src_valid,\n    input [130:0]  ip_src,\n    input          clk,\n    input          reset,\n    input          buf_addr_full,\n    input          cdp2um_data_valid,\n    input [138:0]  cdp2um_data,\n    output reg     um2cdp_tx_enable,\n    output reg     um2cdp_path,\n    output reg     pkt_head_valid,\n    output reg [138:0] pkt_head,\n    output reg     pkt_payload_valid,\n    output reg [138:0] pkt_payload,\n    output reg     pkt_metadata_valid,\n    output reg [359:0] pkt_metadata,\n    output reg [7:0]  input_count,\n    output reg [7:0]  p0_a_count,\n    output reg [7:0]  p0_b_count,\n    output reg [7:0]  input_nobody_count\n);"}
{"task_id": 1287, "completion": "module akiko(\n\tinput clk,\n\tinput reset,\n\tinput [23:1] address_in,\n\tinput [15:0] data_in,\n\toutput [15:0] data_out,\n\tinput rd,\n\tinput sel_akiko\n);"}
{"task_id": 1289, "completion": "module clock_counter(\n\tinput clk_i,\n\tinput reset_n,\n\toutput reg clk_o\n);"}
{"task_id": 1291, "completion": "module ectrl(\n input iv_l,\n output is_l,\n output ov_r,\n input os_r,\n output Es,\n output Em,\n input clk,\n input reset\n);"}
{"task_id": 1251, "completion": "module red_pitaya_pid_block #(  parameter PSR = 12,  parameter ISR = 18,  parameter DSR = 10)( input clk_i, input rstn_i, input [14-1:0] dat_i, output [14-1:0] dat_o, input [14-1:0] set_sp_i, input [14-1:0] set_kp_i, input [14-1:0] set_ki_i, input [14-1:0] set_kd_i, input int_rst_i );"}
{"task_id": 1288, "completion": "module or1200_tt(\n\tclk,\n\trst,\n\tdu_stall,\n\tspr_cs,\n\tspr_write,\n\tspr_addr,\n\tspr_dat_i,\n\tspr_dat_o,\n\tintr\n);"}
{"task_id": 1295, "completion": "module design_1_xlslice_7_0 (\n  input wire [31 : 0] Din,\n  output wire [23 : 0] Dout\n);"}
{"task_id": 1264, "completion": "module c_wf_alloc_rot (clk, reset, active, req_pr, gnt_pr, gnt, update);"}
{"task_id": 1246, "completion": "module search_engine(  input clk,  input reset,  input key_valid,  input [26:0] key,  output bv_valid,  output [35:0] bv,  input localbus_cs_n,  input localbus_rd_wr,  input [31:0] localbus_data,  input localbus_ale,  output localbus_ack_n,  output [31:0] localbus_data_out);"}
{"task_id": 1127, "completion": "module mig_7series_v4_0_ddr_prbs_gen #(\n   parameter TCQ = 100,\n   parameter PRBS_WIDTH = 64,\n   parameter DQS_CNT_WIDTH = 5,\n   parameter DQ_WIDTH = 72,\n   parameter VCCO_PAT_EN = 1,\n   parameter VCCAUX_PAT_EN = 1,\n   parameter ISI_PAT_EN = 1,\n   parameter FIXED_VICTIM = \"TRUE\"\n)(\n   input clk_i,\n   input clk_en_i,\n   input rst_i,\n   input [PRBS_WIDTH-1:0] prbs_seed_i,\n   input phy_if_empty,\n   input prbs_rdlvl_start,\n   input prbs_rdlvl_done,\n   input complex_wr_done,\n   input [2:0] victim_sel,\n   input [DQS_CNT_WIDTH:0] byte_cnt,\n   output [8*DQ_WIDTH-1:0] prbs_o,\n   output [9:0] dbg_prbs_gen,\n   input reset_rd_addr,\n   output prbs_ignore_first_byte,\n   output prbs_ignore_last_bytes\n);"}
{"task_id": 1298, "completion": "module fpu_cnt_lead0_lvl4 (\n\tdin_31_16_eq_0,\n\tdin_31_24_eq_0,\n\tlead0_16b_2_hi,\n\tlead0_16b_1_hi,\n\tlead0_16b_0_hi,\n\tdin_15_0_eq_0,\n\tdin_15_8_eq_0,\n\tlead0_16b_2_lo,\n\tlead0_16b_1_lo,\n\tlead0_16b_0_lo,\n\n\tdin_31_0_eq_0,\n\tlead0_32b_3,\n\tlead0_32b_2,\n\tlead0_32b_1,\n\tlead0_32b_0\n);"}
{"task_id": 1297, "completion": "module tdes(\n    input             reset_i,  \n    input             clk_i,    \n    input             mode_i,   \n    input      [0:63] key1_i,   \n    input      [0:63] key2_i,   \n    input      [0:63] key3_i,   \n    input      [0:63] data_i,   \n    input             valid_i,  \n    output     [0:63] data_o,   \n    output            valid_o,  \n    output reg        ready_o   \n);"}
{"task_id": 1276, "completion": "module ddr_rd_fifo(    input rst,    input wr_clk,    input rd_clk,    input [255 : 0] din,    input wr_en,    input rd_en,    output [63 : 0] dout,    output full,    output empty,    output [10 : 0] rd_data_count,    output prog_full);"}
{"task_id": 1309, "completion": "module Integrador_theta (input wire [15:0] a, input wire [15:0] dt, input wire enable, input wire rst, input wire clk, output wire [31:0] v, output wire busy);"}
{"task_id": 1278, "completion": "module AXI_SRAM(\n      input         CLK,\n      input         RST,\n      input           axi_awvalid,\n      output          axi_awready,\n      input  [32-1:0] axi_awaddr,\n      input  [3-1:0]  axi_awprot,\n      input           axi_wvalid,\n      output          axi_wready,\n      input  [32-1:0] axi_wdata,\n      input  [4-1:0]  axi_wstrb,\n      output reg      axi_bvalid,\n      input           axi_bready,\n      input           axi_arvalid,\n      output          axi_arready,\n      input  [32-1:0] axi_araddr,\n      input  [3-1:0]  axi_arprot,\n      output reg      axi_rvalid,\n      input           axi_rready,\n      output reg [32-1:0] axi_rdata,\n      output [12:0] ddr2_addr,\n      output [2:0]  ddr2_ba,\n      output        ddr2_ras_n,\n      output        ddr2_cas_n,\n      output        ddr2_we_n,\n      output [0:0]  ddr2_ck_p,\n      output [0:0]  ddr2_ck_n,\n      output [0:0]  ddr2_cke,\n      output [0:0]  ddr2_cs_n,\n      output [1:0]  ddr2_dm,\n      output [0:0]  ddr2_odt,\n      inout  [15:0] ddr2_dq,\n      inout  [1:0]  ddr2_dqs_p,\n      inout  [1:0]  ddr2_dqs_n\n    );"}
{"task_id": 1310, "completion": "module EFUSE_USR (\n  EFUSEUSR\n);"}
{"task_id": 1294, "completion": "module camera_config #(\n        parameter CLK_FREQ = 50000000, \n        parameter I2C_FREQ = 20000\n    ) (\n        input clock,\n        input reset_n,\n        input [15:0] exposure,\n        input [15:0] start_row,\n        input [15:0] start_column,\n        input [15:0] row_size,\n        input [15:0] column_size,\n        input [15:0] row_mode,\n        input [15:0] column_mode,\n        output out_ready,\n        output I2C_SCLK,\n        inout I2C_SDAT\n    );"}
{"task_id": 1301, "completion": "module I2C_Controller ( input CLOCK, input RESET, input [31:0] I2C_DATA, input GO, output I2C_SCLK, inout I2C_SDAT, output reg END, output ACK );"}
{"task_id": 1313, "completion": "module nios_system_regfile_r1sel (\n                                   input   [  1: 0] address,\n                                   input            chipselect,\n                                   input            clk,\n                                   input            reset_n,\n                                   input            write_n,\n                                   input   [ 31: 0] writedata,\n                                   output  [  5: 0] out_port,\n                                   output  [ 31: 0] readdata\n                                 );"}
{"task_id": 1282, "completion": "module design_1_auto_pc_3 ( input wire aclk, input wire aresetn, input wire [11 : 0] s_axi_awid, input wire [31 : 0] s_axi_awaddr, input wire [7 : 0] s_axi_awlen, input wire [2 : 0] s_axi_awsize, input wire [1 : 0] s_axi_awburst, input wire [0 : 0] s_axi_awlock, input wire [3 : 0] s_axi_awcache, input wire [2 : 0] s_axi_awprot, input wire [3 : 0] s_axi_awregion, input wire [3 : 0] s_axi_awqos, input wire s_axi_awvalid, output wire s_axi_awready, input wire [31 : 0] s_axi_wdata, input wire [3 : 0] s_axi_wstrb, input wire s_axi_wlast, input wire s_axi_wvalid, output wire s_axi_wready, output wire [11 : 0] s_axi_bid, output wire [1 : 0] s_axi_bresp, output wire s_axi_bvalid, input wire s_axi_bready, input wire [11 : 0] s_axi_arid, input wire [31 : 0] s_axi_araddr, input wire [7 : 0] s_axi_arlen, input wire [2 : 0] s_axi_arsize, input wire [1 : 0] s_axi_arburst, input wire [0 : 0] s_axi_arlock, input wire [3 : 0] s_axi_arcache, input wire [2 : 0] s_axi_arprot, input wire [3 : 0] s_axi_arregion, input wire [3 : 0] s_axi_arqos, input wire s_axi_arvalid, output wire s_axi_arready, output wire [11 : 0] s_axi_rid, output wire [31 : 0] s_axi_rdata, output wire [1 : 0] s_axi_rresp, output wire s_axi_rlast, output wire s_axi_rvalid, input wire s_axi_rready, output wire [31 : 0] m_axi_awaddr, output wire [2 : 0] m_axi_awprot, output wire m_axi_awvalid, input wire m_axi_awready, output wire [31 : 0] m_axi_wdata, output wire [3 : 0] m_axi_wstrb, output wire m_axi_wvalid, input wire m_axi_wready, input wire [1 : 0] m_axi_bresp, input wire m_axi_bvalid, output wire m_axi_bready, output wire [31 : 0] m_axi_araddr, output wire [2 : 0] m_axi_arprot, output wire m_axi_arvalid, input wire m_axi_arready, input wire [31 : 0] m_axi_rdata, input wire [1 : 0] m_axi_rresp, input wire m_axi_rvalid, output wire m_axi_rready);"}
{"task_id": 1312, "completion": "module uart #(parameter div=234)(input clk, input rst, output reg txd, input rxd, input wr, input[7:0] din, output rdy, output reg[7:0] dout, output reg valid, input rd);"}
{"task_id": 1305, "completion": "module altpcierd_icm_rxbridge (clk, rstn, rx_req, rx_ack, rx_desc, rx_data, rx_be, rx_ws, rx_dv, rx_dfr, rx_abort, rx_retry, rx_mask, stream_ready, stream_wr, stream_wrdata);"}
{"task_id": 1327, "completion": "module bt656cap_burstmem(\n\tinput sys_clk,\n\tinput we,\n\tinput [2:0] wa,\n\tinput [31:0] wd,\n\tinput [1:0] ra,\n\toutput [63:0] rd\n);"}
{"task_id": 1043, "completion": "module control (\n    input wire [15:0] cmd,\n    input wire [2:0] cycle,\n    output reg [2:0] cnext,\n    output reg [2:0] reg_src,\n    output reg [2:0] reg_dst,\n    output reg [1:0] alu_input,\n    output reg [9:0] alu_op,\n    output reg [2:0] mem_addr,\n    output reg mem_byte,\n    output reg reg_from_mem,\n    output reg reg_we,\n    output reg x_we,\n    output reg y_we,\n    output reg z_we,\n    output reg psw_we,\n    output reg mem_we,\n    output reg ir_we\n);"}
{"task_id": 1308, "completion": "module fmrv32im_artya7_fmrv32im_axilm_0_0 (\n  input wire RST_N,\n  input wire CLK,\n  output wire [31 : 0] M_AXI_AWADDR,\n  output wire [3 : 0] M_AXI_AWCACHE,\n  output wire [2 : 0] M_AXI_AWPROT,\n  output wire M_AXI_AWVALID,\n  input wire M_AXI_AWREADY,\n  output wire [31 : 0] M_AXI_WDATA,\n  output wire [3 : 0] M_AXI_WSTRB,\n  output wire M_AXI_WVALID,\n  input wire M_AXI_WREADY,\n  input wire M_AXI_BVALID,\n  output wire M_AXI_BREADY,\n  input wire [1 : 0] M_AXI_BRESP,\n  output wire [31 : 0] M_AXI_ARADDR,\n  output wire [3 : 0] M_AXI_ARCACHE,\n  output wire [2 : 0] M_AXI_ARPROT,\n  output wire M_AXI_ARVALID,\n  input wire M_AXI_ARREADY,\n  input wire [31 : 0] M_AXI_RDATA,\n  input wire [1 : 0] M_AXI_RRESP,\n  input wire M_AXI_RVALID,\n  output wire M_AXI_RREADY,\n  output wire BUS_WAIT,\n  input wire BUS_ENA,\n  input wire [3 : 0] BUS_WSTB,\n  input wire [31 : 0] BUS_ADDR,\n  input wire [31 : 0] BUS_WDATA,\n  output wire [31 : 0] BUS_RDATA\n);"}
{"task_id": 1324, "completion": "module vcr_ovc_ctrl(clk, reset, vc_active, vc_gnt, vc_sel_ip, vc_sel_ivc, sw_active, sw_gnt, sw_sel_ip, sw_sel_ivc, flit_valid, flit_tail, flit_sel, elig, full, full_prev, empty);"}
{"task_id": 1332, "completion": "module OR2L #(\n  parameter [0:0] IS_SRI_INVERTED = 1'b0\n)(\n  output O,\n  input DI,\n  input SRI\n);"}
{"task_id": 1331, "completion": "module extraction_module (input wire clk, input wire rst, output wire valid, output wire [N-1:0] result);"}
{"task_id": 1328, "completion": "module clk_gen_clk_wiz (\n  input         clk125,\n  output        clk,\n  output        clk_locked\n);"}
{"task_id": 1333, "completion": "module opc3cpu( inout[15:0] data, output[15:0] address, output rnw, input clk, input reset_b);"}
{"task_id": 1337, "completion": "module HLS_accel_a_ram (addr0, ce0, d0, we0, q0, addr1, ce1, q1, clk);parameter DWIDTH = 32;parameter AWIDTH = 10;parameter MEM_SIZE = 1024;input[AWIDTH-1:0] addr0;input ce0;input[DWIDTH-1:0] d0;input we0;output reg[DWIDTH-1:0] q0;input[AWIDTH-1:0] addr1;input ce1;output reg[DWIDTH-1:0] q1;input clk;(* ram_style = \"block\" *)reg [DWIDTH-1:0] ram[MEM_SIZE-1:0];"}
{"task_id": 1299, "completion": "module fir (\n\tclk,\n\treset,\n\tclk_ena,\n\ti_valid,\n\ti_in,\n\to_valid,\n\to_out\n);\n\tparameter dw = 18;\n\tparameter N = 47;\n\tparameter N_UNIQ = 24;\n\tlocalparam N_VALID_REGS = 54;\n\tinput clk;\n\tinput reset;\n\tinput clk_ena;\n\tinput i_valid;\n\tinput [dw-1:0] i_in;\n\toutput o_valid;\n\toutput [dw-1:0] o_out;\n\tlocalparam dw_add_int = 18;\n\tlocalparam dw_mult_int = 36;\n\tlocalparam scale_factor = 17;\n\tlocalparam N_INPUT_REGS = 47;\nendmodule"}
{"task_id": 1341, "completion": "module ddr2_phy_dm_iob(\n   input  clk90,\n   input  dm_ce,\n   input  mask_data_rise,\n   input  mask_data_fall,\n   output ddr_dm\n);"}
{"task_id": 1317, "completion": "module rvjtag_tap #(parameter AWIDTH = 7)(input trst, input tck, input tms, input tdi, output reg tdo, output tdoEnable, output [31:0] wr_data, output [AWIDTH-1:0] wr_addr, output wr_en, output rd_en, input [31:0] rd_data, input [1:0] rd_status, output reg dmi_reset, output reg dmi_hard_reset, input [2:0] idle, input [1:0] dmi_stat, input [31:1] jtag_id, input [3:0] version);"}
{"task_id": 1343, "completion": "module altpcie_pll_100_125 (\n    input areset,\n    input inclk0,\n    output c0,\n    output locked\n);"}
{"task_id": 1336, "completion": "module tx_port_channel_gate_64 #(\n\tparameter C_DATA_WIDTH = 9'd64,\n\tparameter C_FIFO_DEPTH = 8,\n\tparameter C_FIFO_DATA_WIDTH = C_DATA_WIDTH+1\n)(\n\tinput RST,\n\tinput RD_CLK,\n\toutput [C_FIFO_DATA_WIDTH-1:0] RD_DATA,\n\toutput RD_EMPTY,\n\tinput RD_EN,\n\tinput CHNL_CLK,\n\tinput CHNL_TX,\n\toutput CHNL_TX_ACK,\n\tinput CHNL_TX_LAST,\n\tinput [31:0] CHNL_TX_LEN,\n\tinput [30:0] CHNL_TX_OFF,\n\tinput [C_DATA_WIDTH-1:0] CHNL_TX_DATA,\n\tinput CHNL_TX_DATA_VALID,\n\toutput CHNL_TX_DATA_REN\n);"}
{"task_id": 1340, "completion": "module fifo_w64_d2_A ( clk, reset, if_empty_n, if_read_ce, if_read, if_dout, if_full_n, if_write_ce, if_write, if_din); parameter MEM_STYLE = \"shiftreg\"; parameter DATA_WIDTH = 32'd64; parameter ADDR_WIDTH = 32'd2; parameter DEPTH = 32'd3; input clk; input reset; output if_empty_n; input if_read_ce; input if_read; output[DATA_WIDTH - 1:0] if_dout; output if_full_n; input if_write_ce; input if_write; input[DATA_WIDTH - 1:0] if_din;"}
{"task_id": 1353, "completion": "module VGA_DRIVER (\n\tRESET,\n\tCLOCK,\n\tPIXEL_COLOR_IN,\n\tPIXEL_X,\n\tPIXEL_Y,\n\tPIXEL_COLOR_OUT,\n\tH_SYNC_NEG,\n\tV_SYNC_NEG\n);\n\ninput CLOCK;\ninput RESET;\ninput  [7:0] PIXEL_COLOR_IN;\n\noutput [9:0] PIXEL_X;\noutput [9:0] PIXEL_Y;\noutput [7:0] PIXEL_COLOR_OUT;\noutput       H_SYNC_NEG;\noutput       V_SYNC_NEG;"}
{"task_id": 1320, "completion": "module fir (clk, reset, clk_ena, i_valid, i_in, o_valid, o_out);"}
{"task_id": 1261, "completion": "module I2C_wr_reduced(\n    input clock,\n    input [7:0] data,\n    input WR,\n    input RD,\n    input sda_in,\n    input reset_n,\n    output sda_out,\n    output scl_fallingedge,\n    output main_state,\n    output i2c_state,\n    output debug,\n    output scl,\n    output sda_en,\n    output ack_status\n);"}
{"task_id": 1322, "completion": "module i2c_master_bit_ctrl (input clk, input rst, input nReset, input ena, input [15:0] clk_cnt, input [3:0] cmd, output reg cmd_ack, output reg busy, output reg al, input din, output reg dout = 0, input scl_i, output scl_o, output reg scl_oen, input sda_i, output sda_o, output reg sda_oen);"}
{"task_id": 1356, "completion": "module t(res,d,clk,en); output res; input d,en,clk; wire q0,q1,q2,q3;"}
{"task_id": 1361, "completion": "module top(        input   REFERENCECLK,        output  PLLOUTCORE,        output  PLLOUTGLOBAL,        input   EXTFEEDBACK,        input   [7:0] DYNAMICDELAY,        output  LOCK,        input   BYPASS,        input   RESETB,        input   LATCHINPUTVALUE,        output  SDO,        input   SDI,        input   SCLK);"}
{"task_id": 1357, "completion": "module or1200_wbmux(\n\tclk,\n\trst,\n\twb_freeze,\n\trfwb_op,\n\tmuxin_a,\n\tmuxin_b,\n\tmuxin_c,\n\tmuxin_d,\n\tmuxin_e,\n\tmuxout,\n\tmuxreg,\n\tmuxreg_valid\n);\n\nparameter width = `OR1200_OPERAND_WIDTH;\n\ninput\t\t\tclk;\ninput\t\t\trst;\ninput\t\t\twb_freeze;\ninput\t[`OR1200_RFWBOP_WIDTH-1:0]\trfwb_op;\ninput\t[width-1:0]\tmuxin_a;\ninput\t[width-1:0]\tmuxin_b;\ninput\t[width-1:0]\tmuxin_c;\ninput\t[width-1:0]\tmuxin_d;\ninput\t[width-1:0]\tmuxin_e;\noutput\t[width-1:0]\tmuxout;\noutput\t[width-1:0]\tmuxreg;\noutput\t\t\tmuxreg_valid;"}
{"task_id": 1359, "completion": "module eth_random (MTxClk, Reset, StateJam, StateJam_q, RetryCnt, NibCnt, ByteCnt, RandomEq0, RandomEqByteCnt);\nparameter Tp = 1;\ninput MTxClk;\ninput Reset;\ninput StateJam;\ninput StateJam_q;\ninput [3:0] RetryCnt;\ninput [15:0] NibCnt;\ninput [9:0] ByteCnt;\noutput RandomEq0;\noutput RandomEqByteCnt;"}
{"task_id": 1349, "completion": "module key_expander(\n\toutput  [127:0] key_out,\n\toutput  [31:0] g_in,\n\tinput  [31:0] g_out,\n\tinput  [127:0] key_in,\n\tinput  [3:0] round,\n\tinput add_w_out,\n\tinput enc_dec\n);"}
{"task_id": 1350, "completion": "module design_1();"}
{"task_id": 1351, "completion": "module altera_up_edge_detection_gaussian_smoothing_filter (\n\tinput clk,\n\tinput reset,\n\tinput [7:0] data_in,\n\tinput data_en,\n\toutput [8:0] data_out\n);"}
{"task_id": 470, "completion": "module SEG7_LUT_4 (oSEG0, oSEG1, oSEG2, oSEG3, iDIG);\ninput   [31:0]  iDIG;\noutput  [6:0]   oSEG0, oSEG1, oSEG2, oSEG3;"}
{"task_id": 1366, "completion": "module lvds2lcds (input clk, input reset, input avs_slave_write, input avs_slave_read, input [7:0] avs_slave_writedata, output [7:0] avs_slave_readdata, output reset_n, output scl, output sdi, output sld);"}
{"task_id": 1371, "completion": "module decoder4to16 (in,out); input [3:0] in; output reg [15:1] out;"}
{"task_id": 1358, "completion": "module eth_miim (\n  input         Clk,\n  input         Reset,\n  input   [7:0] Divider,\n  input         NoPre,\n  input  [15:0] CtrlData,\n  input   [4:0] Rgad,\n  input   [4:0] Fiad,\n  input         WCtrlData,\n  input         RStat,\n  input         ScanStat,\n  input         Mdi,\n  output        Mdc,\n  output        Mdo,\n  output        MdoEn,\n  output        Busy,\n  output        LinkFail,\n  output        Nvalid,\n  output [15:0] Prsd,\n  output        WCtrlDataStart,\n  output        RStatStart,\n  output        UpdateMIIRX_DATAReg\n);"}
{"task_id": 1266, "completion": "module pcie_core_pipe_user #(    parameter PCIE_SIM_MODE = \"FALSE\",    parameter PCIE_USE_MODE = \"3.0\",    parameter PCIE_OOBCLK_MODE = 1,    parameter RXCDRLOCK_MAX = 4'd15,    parameter RXVALID_MAX = 4'd15,    parameter CONVERGE_MAX = 22'd3125000)(    input               USER_TXUSRCLK,    input               USER_RXUSRCLK,    input               USER_OOBCLK_IN,    input               USER_RST_N,    input               USER_RXUSRCLK_RST_N,    input               USER_PCLK_SEL,    input               USER_RESETOVRD_START,    input               USER_TXRESETDONE,    input               USER_RXRESETDONE,    input               USER_TXELECIDLE,    input               USER_TXCOMPLIANCE,    input               USER_RXCDRLOCK_IN,    input               USER_RXVALID_IN,    input               USER_RXSTATUS_IN,    input               USER_PHYSTATUS_IN,    input               USER_RATE_DONE,    input               USER_RST_IDLE,    input               USER_RATE_RXSYNC,    input               USER_RATE_IDLE,    input               USER_RATE_GEN3,    input               USER_RXEQ_ADAPT_DONE,    output              USER_OOBCLK,    output              USER_RESETOVRD,    output              USER_TXPMARESET,    output              USER_RXPMARESET,    output              USER_RXCDRRESET,    output              USER_RXCDRFREQRESET,    output              USER_RXDFELPMRESET,    output              USER_EYESCANRESET,    output              USER_TXPCSRESET,    output              USER_RXPCSRESET,    output              USER_RXBUFRESET,    output              USER_RESETOVRD_DONE,    output              USER_RESETDONE,    output              USER_ACTIVE_LANE,    output              USER_RXCDRLOCK_OUT,    output              USER_RXVALID_OUT,    output              USER_PHYSTATUS_OUT,    output              USER_PHYSTATUS_RST,    output              USER_GEN3_RDY,    output              USER_RX_CONVERGE );"}
{"task_id": 1380, "completion": "module feedforward_ST_WandB(\n    reset,\n    clk,\n    address0,\n    ce0,\n    we0,\n    d0,\n    q0\n);\n\nparameter DataWidth = 32'd64;\nparameter AddressRange = 32'd5040;\nparameter AddressWidth = 32'd13;\ninput reset;\ninput clk;\ninput[AddressWidth - 1:0] address0;\ninput ce0;\ninput we0;\ninput[DataWidth - 1:0] d0;\noutput[DataWidth - 1:0] q0;"}
{"task_id": 1375, "completion": "module mix_columns(\n\toutput [31:0] mix_out_enc,\n\toutput [31:0] mix_out_dec,\n\tinput  [31:0] mix_in\n);"}
{"task_id": 1381, "completion": "module spinner(\n  input  wire        sync_rot_a,\n  input  wire        sync_rot_b,\n  input  wire        clk,\n  output reg         event_rot_l,\n  output reg         event_rot_r\n);"}
{"task_id": 1376, "completion": "module sia_wb(\n\tinput\t\tclk_i,\n\tinput\t\treset_i,\n\tinput\t[3:1]\tadr_i,\n\tinput\t\twe_i,\n\tinput\t\tcyc_i,\n\tinput\t\tstb_i,\n\tinput\t[1:0]\tsel_i,\n\tinput\t[15:0]\tdat_i,\n\toutput\t[15:0]\tdat_o,\n\toutput\t\tack_o,\n\toutput\t\tstall_o,\n\toutput\t\tirq_o,\n\toutput\t[4:0]\tbits_o,\n\toutput\t\teedc_o,\n\toutput\t\teedd_o,\n\toutput\t[2:0]\ttxcmod_o,\n\toutput\t\trxcpol_o,\n\toutput\t[4:0]\tintena_o,\n\toutput\t[19:0]\tbitrat_o,\n\toutput\t\ttxdlb_o,\n\toutput\t\ttxclb_o,\n\toutput\t\trxq_pop_o,\n\toutput\t\trxq_oe_o,\n\tinput\t[15:0]\trxq_dat_i,\n\tinput\t\trxq_full_i,\n\tinput\t\trxq_not_empty_i,\n\toutput\t\ttxq_we_o,\n\toutput\t[15:0]\ttxq_dat_o,\n\tinput\t\ttxq_not_full_i,\n\tinput\t\ttxq_empty_i,\n\tinput\t\ttxq_idle_i\n);"}
{"task_id": 1383, "completion": "module pio_missed (                    \n                    input   [  1: 0] address,  \n                    input            clk,      \n                    input   [ 15: 0] in_port,  \n                    input            reset_n,  \n                    output  [ 15: 0] readdata   \n                  );"}
{"task_id": 1384, "completion": "module Memory_ShiftOutput( input [31:0] Mem_data_out, input [1:0] Mem_addr_in, input [31:26] IR, output [31:0] Mem_data_shift );"}
{"task_id": 1389, "completion": "module pfpu_clz32(\n\tinput [31:0] d,\n\toutput [4:0] clz\n);"}
{"task_id": 1373, "completion": "module dsp_framer36 #(parameter BUF_SIZE = 9, parameter PORT_SEL = 0, parameter PROT_ENG_FLAGS = 1)(input clk, input reset, input clear, input [35:0] data_i, input src_rdy_i, output dst_rdy_o, output [35:0] data_o, output src_rdy_o, input dst_rdy_i);"}
{"task_id": 1387, "completion": "module opc5wrapper(\n   input         USER_RESET,\n   output        SPI_SCK,\n   output [0:0]  SPI_CS_n,\n   inout         SPI_IO1,\n   inout         SPI_IO2,\n   inout         SPI_IO3,\n   inout         SPI_IO4,\n   input         USER_CLOCK,\n   input         GPIO_DIP1,\n   input         GPIO_DIP2,\n   input         GPIO_DIP3,\n   input         GPIO_DIP4,\n   output [3:0]  GPIO_LED,\n   input         USB_RS232_RXD,\n   output        USB_RS232_TXD,\n   inout         SCL,\n   input         SDA,\n   output [12:0] LPDDR_A,\n   output [1:0]  LPDDR_BA,\n   inout [15:0]  LPDDR_DQ,\n   output        LPDDR_LDM,\n   output        LPDDR_UDM,\n   inout         LPDDR_LDQS,\n   inout         LPDDR_UDQS,\n   output        LPDDR_CK_N,\n   output        LPDDR_CK_P,\n   output        LPDDR_CKE,\n   output        LPDDR_CAS_n,\n   output        LPDDR_RAS_n,\n   output        LPDDR_WE_n,\n   output        LPDDR_RZQ,\n   input         ETH_COL,\n   input         ETH_CRS,\n   input         ETH_MDC,\n   input         ETH_MDIO,\n   output        ETH_RESET_n,\n   input         ETH_RX_CLK,\n   input [3:0]   ETH_RX_D,\n   input         ETH_RX_DV,\n   input         ETH_RX_ER,\n   input         ETH_TX_CLK,\n   output [3:0]  ETH_TX_D,\n   output        ETH_TX_EN\n);"}
{"task_id": 1394, "completion": "module soc_system_dipsw_pio (\n        input  [  1: 0] address,\n        input            chipselect,\n        input            clk,\n        input  [  3: 0] in_port,\n        input            reset_n,\n        input            write_n,\n        input  [ 31: 0] writedata,\n        output           irq,\n        output  [ 31: 0] readdata\n    );"}
{"task_id": 1368, "completion": "module program_equivalence (\n     input wire [31:0] state_a,\n     input wire [31:0] state_b,\n     output wire equiv\n );"}
{"task_id": 1365, "completion": "module upd77c25_pgmrom(\n  clka,\n  wea,\n  addra,\n  dina,\n  clkb,\n  addrb,\n  doutb\n);\n\ninput clka;\ninput [0 : 0] wea;\ninput [10 : 0] addra;\ninput [23 : 0] dina;\ninput clkb;\ninput [10 : 0] addrb;\noutput [23 : 0] doutb;"}
{"task_id": 1363, "completion": "module i2c_master_bit_ctrl (\n    input             clk,      // system clock\n    input             rst,      // synchronous active high reset\n    input             nReset,   // asynchronous active low reset\n    input             ena,      // core enable signal\n\n    input      [15:0] clk_cnt,  // clock prescale value\n\n    input      [ 3:0] cmd,      // command (from byte controller)\n    output reg        cmd_ack,  // command complete acknowledge\n    output reg        busy,     // i2c bus busy\n    output reg        al,       // i2c bus arbitration lost\n\n    input             din,\n    output reg        dout = 0,\n\n    input             scl_i,    // i2c clock line input\n    output            scl_o,    // i2c clock line output\n    output reg        scl_oen,  // i2c clock line output enable (active low)\n    input             sda_i,    // i2c data line input\n    output            sda_o,    // i2c data line output\n    output reg        sda_oen   // i2c data line output enable (active low)\n);"}
{"task_id": 1396, "completion": "module t(res,d,clk,en); output res; input d,en,clk;"}
{"task_id": 1391, "completion": "module cordic_z24(clock, reset, enable, xi, yi, zi, xo, yo, zo);\n   parameter bitwidth = 16;\n   parameter stages = 19;\n   localparam zwidth = 24;\n   input clock;\n   input reset;\n   input enable;\n   input [bitwidth-1:0] xi, yi;\n   output [bitwidth-1:0] xo, yo;\n   input [zwidth-1:0] zi;\n   output [zwidth-1:0] zo;"}
{"task_id": 1402, "completion": "module axis_trigger #(\n  parameter integer AXIS_TDATA_WIDTH = 32,\n  parameter         AXIS_TDATA_SIGNED = \"FALSE\"\n)(\n  input  wire                        aclk,\n  input  wire                        pol_data,\n  input  wire [AXIS_TDATA_WIDTH-1:0] msk_data,\n  input  wire [AXIS_TDATA_WIDTH-1:0] lvl_data,\n  output wire                        trg_flag,\n  output wire                        s_axis_tready,\n  input  wire [AXIS_TDATA_WIDTH-1:0] s_axis_tdata,\n  input  wire                        s_axis_tvalid\n);"}
{"task_id": 1407, "completion": "module mult\n#(\n  parameter N=128,\n  parameter CC=1\n)\n( \n  clk,\n  rst,\n  g_input,\n  e_input,\n  o\n);\n\n  input  clk;\n  input  rst;\n  input  [N-1:0] g_input;\n  input  [N-1:0] e_input;\n  output [N-1:0] o;"}
{"task_id": 1390, "completion": "module XC2CZIA(\n\t\tdedicated_in,\n\t\tibuf_in,\n\t\tmacrocell_in,\n\t\tzia_out,\n\t\tconfig_bits);\n\n\tparameter MACROCELLS = 32;\n\tinput wire \tdedicated_in;\n\tinput wire[NUM_IBUFS-1:0] \tibuf_in;\n\tinput wire[NUM_MCELLS-1:0] \tmacrocell_in;\n\toutput reg[39:0] \tzia_out;\n\tinput wire[40 * BITS_PER_ROW-1 : 0] \tconfig_bits;"}
{"task_id": 1404, "completion": "module uart_tx\n   #(\n     parameter DBIT = 8,     // # data bits\n               SB_tck = 16  // # tcks for stop bits\n   )\n   (\n    input wire clk, reset,\n    input wire tx_start, s_tck,\n    input wire [7:0] din,\n    output reg tx_done_tck,\n    output wire tx\n   );"}
{"task_id": 1409, "completion": "module mig_7series_v2_0_read_posted_fifo #(parameter TCQ = 100, parameter FAMILY = \"SPARTAN6\", parameter nCK_PER_CLK = 4, parameter MEM_BURST_LEN = 4, parameter ADDR_WIDTH = 32, parameter BL_WIDTH = 6)(input clk_i, input rst_i, output reg cmd_rdy_o, input memc_cmd_full_i, input cmd_valid_i, input data_valid_i, input cmd_start_i, input [ADDR_WIDTH-1:0] addr_i, input [BL_WIDTH-1:0] bl_i, input [2:0] cmd_sent, input [5:0] bl_sent, input cmd_en_i, output gen_valid_o, output [ADDR_WIDTH-1:0] gen_addr_o, output [BL_WIDTH-1:0] gen_bl_o, output rd_mdata_en);"}
{"task_id": 1415, "completion": "module surround_with_regs(\n\t\ti_data0,\n\t\to_data0,\n\t\tclk\n\t);\n\n\tinput   [31:0] i_data0;\n\toutput  [31:0] o_data0;\n\treg  [31:0] o_data0;\n\tinput clk;"}
{"task_id": 1386, "completion": "module pcie_core_pcie_pipe_misc #(\n    parameter        PIPE_PIPELINE_STAGES = 0\n)(\n    input   wire        pipe_tx_rcvr_det_i       ,\n    input   wire        pipe_tx_reset_i          ,\n    input   wire        pipe_tx_rate_i           ,\n    input   wire        pipe_tx_deemph_i         ,\n    input   wire [2:0]  pipe_tx_margin_i         ,\n    input   wire        pipe_tx_swing_i          ,\n    output  wire        pipe_tx_rcvr_det_o       ,\n    output  wire        pipe_tx_reset_o          ,\n    output  wire        pipe_tx_rate_o           ,\n    output  wire        pipe_tx_deemph_o         ,\n    output  wire [2:0]  pipe_tx_margin_o         ,\n    output  wire        pipe_tx_swing_o          ,\n    input   wire        pipe_clk                ,\n    input   wire        rst_n                          \n);"}
{"task_id": 1405, "completion": "module golden_top("}
{"task_id": 1413, "completion": "module MISTRAL_MLAB(input [4:0] A1ADDR, input A1DATA, A1EN, (* clkbuf_sink *) input CLK1, input [4:0] B1ADDR, output B1DATA);"}
{"task_id": 1397, "completion": "module mig_7series_v1_8_rank_mach #(\n   parameter BURST_MODE = \"8\",\n   parameter CS_WIDTH = 4,\n   parameter DRAM_TYPE = \"DDR3\",\n   parameter MAINT_PRESCALER_DIV = 40,\n   parameter nBANK_MACHS = 4,\n   parameter nCKESR = 4,\n   parameter nCK_PER_CLK = 2,\n   parameter CL = 5,\n   parameter CWL = 5,\n   parameter DQRD2DQWR_DLY = 2,\n   parameter nFAW = 30,\n   parameter nREFRESH_BANK = 8,\n   parameter nRRD = 4,\n   parameter nWTR = 4,\n   parameter PERIODIC_RD_TIMER_DIV = 20,\n   parameter RANK_BM_BV_WIDTH = 16,\n   parameter RANK_WIDTH = 2,\n   parameter RANKS = 4,\n   parameter REFRESH_TIMER_DIV = 39,\n   parameter ZQ_TIMER_DIV = 640000\n)(\n  /*AUTOARG*/\n  // Outputs\n  periodic_rd_rank_r, periodic_rd_r, maint_req_r, inhbt_act_faw_r, inhbt_rd,\n  inhbt_wr, maint_rank_r, maint_zq_r, maint_sre_r, maint_srx_r, app_sr_active,\n  app_ref_ack, app_zq_ack, col_rd_wr, maint_ref_zq_wip,\n  // Inputs\n  wr_this_rank_r, slot_1_present, slot_0_present, sending_row,\n  sending_col, rst, rd_this_rank_r, rank_busy_r, periodic_rd_ack_r,\n  maint_wip_r, insert_maint_r1, init_calib_complete, clk, app_zq_req,\n  app_sr_req, app_ref_req, app_periodic_rd_req, act_this_rank_r\n  );"}
{"task_id": 1406, "completion": "module cpu_if(rst, clk, cpu_stall, imem_addr, p_pc, pc_j, pc_b, b_addr, j_addr, iin, p_inst, stall, int, int_ack, int_flush, int_pc);"}
{"task_id": 1417, "completion": "module nexys4 (input         clk, input         btnCpuReset, input         btnC, input         btnU, input         btnL, input         btnR, input         btnD, input  [15:0] sw, output [15:0] led, output        RGB1_Red, output        RGB1_Green, output        RGB1_Blue, output        RGB2_Red, output        RGB2_Green, output        RGB2_Blue, output [ 6:0] seg, output        dp, output [ 7:0] an, inout  [ 7:0] JA, inout  [ 7:0] JB, input         RsRx);"}
{"task_id": 1412, "completion": "module pcie_7x_v1_8_gt_rx_valid_filter_7x #(  parameter CLK_COR_MIN_LAT = 28,  parameter TCQ = 1)(  output [1:0] USER_RXCHARISK,  output [15:0] USER_RXDATA,  output USER_RXVALID,  output USER_RXELECIDLE,  output [2:0] USER_RX_STATUS,  output USER_RX_PHY_STATUS,  input [1:0] GT_RXCHARISK,  input [15:0] GT_RXDATA,  input GT_RXVALID,  input GT_RXELECIDLE,  input [2:0] GT_RX_STATUS,  input GT_RX_PHY_STATUS,  input PLM_IN_L0,  input PLM_IN_RS,  input USER_CLK,  input RESET);"}
{"task_id": 1421, "completion": "module ppu_vga(\n  input  wire       clk_in,\n  input  wire       rst_in,\n  input  wire [5:0] sys_palette_idx_in,\n  output wire       hsync_out,\n  output wire       vsync_out,\n  output wire [2:0] r_out,\n  output wire [2:0] g_out,\n  output wire [1:0] b_out,\n  output wire [9:0] nes_x_out,\n  output wire [9:0] nes_y_out,\n  output wire [9:0] nes_y_next_out,\n  output wire       pix_pulse_out,\n  output wire       vblank_out\n);"}
{"task_id": 1435, "completion": "module complex(\n\tinput [7:0] x,\n\tinput [7:0] y,\n\toutput out\n);"}
{"task_id": 1437, "completion": "module aurora_201_GLOBAL_LOGIC(\n    input CH_BOND_DONE,\n    output EN_CHAN_SYNC,\n    input LANE_UP,\n    input SOFT_ERROR,\n    input HARD_ERROR,\n    input CHANNEL_BOND_LOAD,\n    input [0:1] GOT_A,\n    input GOT_V,\n    output GEN_A,\n    output [0:1] GEN_K,\n    output [0:1] GEN_R,\n    output [0:1] GEN_V,\n    output RESET_LANES,\n    input USER_CLK,\n    input RESET,\n    input POWER_DOWN,\n    output CHANNEL_UP,\n    output START_RX,\n    output CHANNEL_SOFT_ERROR,\n    output CHANNEL_HARD_ERROR\n);"}
{"task_id": 1429, "completion": "module ad_csc_1_add (\n  input           clk,\n  input   [24:0]  data_1,\n  input   [24:0]  data_2,\n  input   [24:0]  data_3,\n  input   [24:0]  data_4,\n  output  [ 7:0]  data_p,\n  input   [15:0]  ddata_in,\n  output  [15:0]  ddata_out\n);"}
{"task_id": 1423, "completion": "module adder_tree_top (\n\tclk,\n\tisum0_0_0_0, isum0_0_0_1, isum0_0_1_0, isum0_0_1_1, isum0_1_0_0, isum0_1_0_1, isum0_1_1_0, isum0_1_1_1,\n\tsum\n);\n\tinput clk;\n\tinput [`ADDER_WIDTH+0-1:0] isum0_0_0_0, isum0_0_0_1, isum0_0_1_0, isum0_0_1_1, isum0_1_0_0, isum0_1_0_1, isum0_1_1_0, isum0_1_1_1;\n\toutput [`ADDER_WIDTH  :0] sum;\n\treg    [`ADDER_WIDTH  :0] sum;"}
{"task_id": 1440, "completion": "module VGA_Controller(\n\t\tiCursor_RGB_EN,\n\t\tiCursor_X,\n\t\tiCursor_Y,\n\t\tiCursor_R,\n\t\tiCursor_G,\n\t\tiCursor_B,\n\t\tiRed,\n\t\tiGreen,\n\t\tiBlue,\n\t\toAddress,\n\t\toCoord_X,\n\t\toCoord_Y,\n\t\toVGA_R,\n\t\toVGA_G,\n\t\toVGA_B,\n\t\toVGA_H_SYNC,\n\t\toVGA_V_SYNC,\n\t\toVGA_SYNC,\n\t\toVGA_BLANK,\n\t\toVGA_CLOCK,\n\t\tiCLK_25,\n\t\tiRST_N\n);"}
{"task_id": 1286, "completion": "module fsa_core #(\n\tparameter integer C_PIXEL_WIDTH = 8,\n\tparameter integer C_IMG_HW = 12,\n\tparameter integer C_IMG_WW = 12,\n\tparameter integer BR_NUM   = 4,\n\tparameter integer BR_AW    = 12\n)(\n\tinput clk,\n\tinput resetn,\n\tinput  wire [C_IMG_HW-1:0] height,\n\tinput  wire [C_IMG_WW-1:0] width,\n\tinput  wire [C_IMG_WW-1:0] win_left,\n\tinput  wire [C_IMG_HW-1:0] win_top,\n\tinput  wire [C_IMG_WW-1:0] win_width,\n\tinput  wire [C_IMG_HW-1:0] win_height,\n\toutput wire sof,\n\tinput  wire [BR_NUM-1:0] wr_bmp,\n\toutput reg  [BR_NUM-1:0] wr_en,\n\toutput reg  [BR_AW-1:0] wr_addr,\n\toutput reg wr_black,\n\toutput reg wr_val_outer,\n\toutput reg [C_IMG_HW-1:0] wr_top_outer,\n\toutput reg [C_IMG_HW-1:0] wr_bot_outer,\n\toutput reg wr_val_inner,\n\toutput reg [C_IMG_HW-1:0] wr_top_inner,\n\toutput reg [C_IMG_HW-1:0] wr_bot_inner,\n\toutput reg rd_en,\n\toutput reg [BR_AW-1:0] rd_addr,\n\tinput  wire rd_black,\n\tinput  wire rd_val_outer,\n\tinput  wire [C_IMG_HW-1:0] rd_top_outer,\n\tinput  wire [C_IMG_HW-1:0] rd_bot_outer,\n\tinput  wire rd_val_inner,\n\tinput  wire [C_IMG_HW-1:0] rd_top_inner,\n\tinput  wire [C_IMG_HW-1:0] rd_bot_inner,\n\tinput  wire [C_PIXEL_WIDTH-1:0] ref_data,\n\tinput  wire s_axis_tvalid,\n\tinput  wire [C_PIXEL_WIDTH-1:0] s_axis_tdata,\n\tinput  wire s_axis_tuser,\n\tinput  wire s_axis_tlast,\n\toutput wire s_axis_tready,\n\toutput wire o_wr_sof_d3,\n\toutput wire o_rd_en_d3,\n\toutput wire o_hM2_p3,\n\toutput wire o_hM3_p3,\n\toutput wire o_hfirst_p3,\n\toutput wire o_hlast_p3,\n\toutput wire o_wfirst_p3,\n\toutput wire o_wlast_p3,\n\toutput wire [BR_AW-1:0] o_x_d3,\n\toutput wire o_rd_val_outer,\n\toutput wire [C_IMG_HW-1:0] o_rd_top_outer,\n\toutput wire [C_IMG_HW-1:0] o_rd_bot_outer,\n\toutput wire o_rd_val_inner,\n\toutput wire [C_IMG_HW-1:0] o_rd_top_inner,\n\toutput wire [C_IMG_HW-1:0] o_rd_bot_inner\n);"}
{"task_id": 1443, "completion": "module alt_vipitc131_common_trigger_sync(\n    input wire input_rst,\n    input wire input_clock,\n    input wire rst,\n    input wire sync_clock,\n    input wire trigger_in,\n    input wire ack_in,\n    output wire trigger_out);\n\nparameter CLOCKS_ARE_SAME = 0;"}
{"task_id": 1434, "completion": "module morphisms #(\n        parameter TYPE_A = 32,\n        parameter TYPE_B = 32\n    )(\n        input wire [TYPE_A-1:0] x,\n        input wire [TYPE_B-1:0] y,\n        output wire respect_morphism,\n        output wire proper_proxy\n    );"}
{"task_id": 1442, "completion": "module cart(\n  input  wire        clk_in,\n  input  wire [39:0] cfg_in,\n  input  wire        cfg_upd_in,\n  input  wire        prg_nce_in,\n  input  wire [14:0] prg_a_in,\n  input  wire        prg_r_nw_in,\n  input  wire [ 7:0] prg_d_in,\n  output wire [ 7:0] prg_d_out,\n  input  wire [13:0] chr_a_in,\n  input  wire        chr_r_nw_in,\n  input  wire [ 7:0] chr_d_in,\n  output wire [ 7:0] chr_d_out,\n  output wire        ciram_nce_out,\n  output wire        ciram_a10_out\n);"}
{"task_id": 1448, "completion": "module vga_pll_0002( input wire refclk, input wire rst, output wire outclk_0, output wire outclk_1, output wire locked );"}
{"task_id": 1454, "completion": "module uart_tx\n   #(\n     parameter DBIT = 8,     // # data bits\n               SB_tck = 16  // # tcks for stop bits\n   )\n   (\n    input wire clk, reset,\n    input wire tx_start, s_tck,\n    input wire [7:0] din,\n    output reg tx_done_tck,\n    output wire tx\n   );"}
{"task_id": 1455, "completion": "module altera_reset_synchronizer #(\n    parameter ASYNC_RESET = 1,\n    parameter DEPTH       = 2\n)(\n    input   reset_in,\n    input   clk,\n    output  reset_out\n);"}
{"task_id": 1419, "completion": "module mod_memory_hierarchy(rst, clk, ie, de, iaddr, daddr, drw, din, iout, dout, cpu_stall, sram_clk, sram_adv, sram_cre, sram_ce, sram_oe, sram_we, sram_lb, sram_ub, sram_data, sram_addr, mod_vga_sram_data, mod_vga_sram_addr, mod_vga_sram_read, mod_vga_sram_rdy, pmc_cache_miss_I, pmc_cache_miss_D, pmc_cache_access_I, pmc_cache_access_D);"}
{"task_id": 1458, "completion": "module dsp_iq_mult #(\n    parameter WIDTH = 16\n)(\n    input  wire                  clk,\n    input  wire                  rst,\n    input  wire [WIDTH-1:0]      input_a_i_tdata,\n    input  wire [WIDTH-1:0]      input_a_q_tdata,\n    input  wire                  input_a_tvalid,\n    output wire                  input_a_tready,\n    input  wire [WIDTH-1:0]      input_b_i_tdata,\n    input  wire [WIDTH-1:0]      input_b_q_tdata,\n    input  wire                  input_b_tvalid,\n    output wire                  input_b_tready,\n    output wire [(WIDTH*2)-1:0]  output_i_tdata,\n    output wire [(WIDTH*2)-1:0]  output_q_tdata,\n    output wire                  output_tvalid,\n    input  wire                  output_tready\n);"}
{"task_id": 1370, "completion": "module ddr2_phy_alt_mem_phy_pll (input areset, input inclk0, input [3:0] phasecounterselect, input phasestep, input phaseupdown, input scanclk, output c0, output c1, output c2, output c3, output c4, output c5, output locked, output phasedone);"}
{"task_id": 1450, "completion": "module S4L2(    input clock_50mhz,    output reg clock_1hz,    output reg [6:0] segmentos,    output reg anodo,    output reg [3:0] estado );"}
{"task_id": 1464, "completion": "module norflash16 #(\n\tparameter adr_width = 22,\n\tparameter rd_timing = 4'd12,\n\tparameter wr_timing = 4'd6\n) (\n\tinput sys_clk,\n\tinput sys_rst,\n\n\tinput [31:0] wb_adr_i,\n\toutput reg [31:0] wb_dat_o,\n\tinput [31:0] wb_dat_i,\n\tinput [3:0] wb_sel_i,\n\tinput wb_stb_i,\n\tinput wb_cyc_i,\n\toutput reg wb_ack_o,\n\tinput wb_we_i,\n\n\toutput [adr_width-1:0] flash_adr,\n\tinout [15:0] flash_d,\n\toutput reg flash_oe_n,\n\toutput reg flash_we_n\n);"}
{"task_id": 1463, "completion": "module fifo_xlnx_512x36_2clk(\n\tdin,\n\trd_clk,\n\trd_en,\n\trst,\n\twr_clk,\n\twr_en,\n\tdout,\n\tempty,\n\tfull,\n\trd_data_count,\n\twr_data_count);\n\ninput [35 : 0] din;\ninput rd_clk;\ninput rd_en;\ninput rst;\ninput wr_clk;\ninput wr_en;\noutput [35 : 0] dout;\noutput empty;\noutput full;\noutput [9 : 0] rd_data_count;\noutput [9 : 0] wr_data_count;"}
{"task_id": 1470, "completion": "module dut(/*AUTOARG*/    input wire clk1,    input wire clk2,    input wire nreset,    input wire [N*N-1:0] vdd,    input wire vss,    output wire dut_active,    output wire clkout,    input wire [N-1:0] access_in,    input wire [N*PW-1:0] packet_in,    output wire [N-1:0] wait_out,    output wire [N-1:0] access_out,    output wire [N*PW-1:0] packet_out,    input wire [N-1:0] wait_in);"}
{"task_id": 1460, "completion": "module euclidean_division (input wire [31:0] a, input wire [31:0] b, output wire [31:0] q, output wire [31:0] r);"}
{"task_id": 1452, "completion": "module SPIFSM #(                                                            parameter SPPRWidth = 4,                                                            parameter SPRWidth  = 4,                                                            parameter DataWidth = 8) (                                                            input                  Reset_n_i,                                                            input                  Clk_i,                                                            input                  Start_i,                                                            output reg             Done_o,                                                            output reg [DataWidth-1:0] Byte0_o,                                                            output reg [DataWidth-1:0] Byte1_o,                                                            input                  SPI_Transmission_i,                                                            output reg                 SPI_Write_o,                                                            output reg                 SPI_ReadNext_o,                                                            output reg [DataWidth-1:0] SPI_Data_o,                                                            input  [DataWidth-1:0] SPI_Data_i,                                                            input                  SPI_FIFOFull_i,                                                            input                  SPI_FIFOEmpty_i,                                                            output reg             ADT7310CS_n_o,                                                            input [15:0]           ParamCounterPreset_i                                                            );"}
{"task_id": 1478, "completion": "module COREAHBLITE_DEFAULTSLAVESM(\n    input HCLK,\n    input HRESETN,\n    input DEFSLAVEDATASEL,\n    output reg DEFSLAVEDATAREADY,\n    output reg HRESP_DEFAULT\n);"}
{"task_id": 1360, "completion": "module fifo_64w_64r_512d(\n  input rst,\n  input wr_clk,\n  input rd_clk,\n  input [63 : 0] din,\n  input wr_en,\n  input rd_en,\n  output [63 : 0] dout,\n  output full,\n  output empty,\n  output [8 : 0] rd_data_count,\n  output [8 : 0] wr_data_count\n);"}
{"task_id": 1411, "completion": "module pc_vga_8x16_80_FF (\n\t input\t\tclk,\n\t input  [6:0]\tascii_code,\n\t input  [3:0]\trow,\n\t input  [2:0]\tcol,\n\t output wire\trow_of_pixels\n);"}
{"task_id": 1481, "completion": "module alt_vipitc131_common_fifo(                                 wrclk,                                 rdreq,                                 aclr,                                 rdclk,                                 wrreq,                                 data,                                 rdusedw,                                 rdempty,                                 wrusedw,                                 wrfull,                                 q);"}
{"task_id": 1480, "completion": "module Computer_System_VGA_Subsystem_Char_Buf_Subsystem_Set_Black_Transparent (\n\tclk,\n\treset,\n\tstream_in_data,\n\tstream_in_startofpacket,\n\tstream_in_endofpacket,\n\tstream_in_valid,\n\tstream_in_ready,\n\tstream_out_ready,\n\tstream_out_data,\n\tstream_out_startofpacket,\n\tstream_out_endofpacket,\n\tstream_out_valid\n);\n\nparameter CW = 29;\nparameter DW = 39;\nparameter COLOR = 30'd0;\nparameter ALPHA = 10'd0;"}
{"task_id": 1485, "completion": "module surround_with_regs(\n    input   [31:0] i_data0,\n    output  [31:0] o_data0,\n    input clk\n);"}
{"task_id": 1467, "completion": "module rank_cntrl #(\n   parameter TCQ = 100,\n   parameter BURST_MODE = \"8\",\n   parameter ID = 0,\n   parameter nBANK_MACHS = 4,\n   parameter nCK_PER_CLK = 2,\n   parameter CL = 5,\n   parameter nFAW = 30,\n   parameter nREFRESH_BANK = 8,\n   parameter nRRD = 4,\n   parameter nWTR = 4,\n   parameter PERIODIC_RD_TIMER_DIV = 20,\n   parameter RANK_BM_BV_WIDTH = 16,\n   parameter RANK_WIDTH = 2,\n   parameter RANKS = 4,\n   parameter PHASE_DETECT = \"OFF\",\n   parameter REFRESH_TIMER_DIV = 39\n)(\n  // Outputs\n  inhbt_act_faw_r, inhbt_rd_r, wtr_inhbt_config_r, refresh_request,\n  periodic_rd_request,\n  // Inputs\n  clk, rst, sending_row, act_this_rank_r, sending_col, wr_this_rank_r,\n  app_ref_req, dfi_init_complete, rank_busy_r, refresh_tick,\n  insert_maint_r1, maint_zq_r, maint_rank_r, app_periodic_rd_req,\n  maint_prescaler_tick_r, clear_periodic_rd_request, rd_this_rank_r\n  );"}
{"task_id": 1457, "completion": "module PmodR2R(\n    input [8:0] AXI_LITE_GPIO_araddr,\n    output AXI_LITE_GPIO_arready,\n    input AXI_LITE_GPIO_arvalid,\n    input [8:0] AXI_LITE_GPIO_awaddr,\n    output AXI_LITE_GPIO_awready,\n    input AXI_LITE_GPIO_awvalid,\n    input AXI_LITE_GPIO_bready,\n    output [1:0] AXI_LITE_GPIO_bresp,\n    output AXI_LITE_GPIO_bvalid,\n    output [31:0] AXI_LITE_GPIO_rdata,\n    input AXI_LITE_GPIO_rready,\n    output [1:0] AXI_LITE_GPIO_rresp,\n    output AXI_LITE_GPIO_rvalid,\n    input [31:0] AXI_LITE_GPIO_wdata,\n    output AXI_LITE_GPIO_wready,\n    input [3:0] AXI_LITE_GPIO_wstrb,\n    input AXI_LITE_GPIO_wvalid,\n    input Pmod_out_pin10_i,\n    output Pmod_out_pin10_o,\n    output Pmod_out_pin10_t,\n    input Pmod_out_pin1_i,\n    output Pmod_out_pin1_o,\n    output Pmod_out_pin1_t,\n    input Pmod_out_pin2_i,\n    output Pmod_out_pin2_o,\n    output Pmod_out_pin2_t,\n    input Pmod_out_pin3_i,\n    output Pmod_out_pin3_o,\n    output Pmod_out_pin3_t,\n    input Pmod_out_pin4_i,\n    output Pmod_out_pin4_o,\n    output Pmod_out_pin4_t,\n    input Pmod_out_pin7_i,\n    output Pmod_out_pin7_o,\n    output Pmod_out_pin7_t,\n    input Pmod_out_pin8_i,\n    output Pmod_out_pin8_o,\n    output Pmod_out_pin8_t,\n    input Pmod_out_pin9_i,\n    output Pmod_out_pin9_o,\n    output Pmod_out_pin9_t,\n    input s_axi_aclk,\n    input s_axi_aresetn\n);"}
{"task_id": 1473, "completion": "module phy_ck_iob #(\n   parameter TCQ = 100,\n   parameter WRLVL = \"OFF\",\n   parameter DRAM_TYPE = \"DDR3\",\n   parameter REFCLK_FREQ = 300.0,\n   parameter IODELAY_GRP = \"IODELAY_MIG\"\n   )(\n   input  clk_mem,\n   input  clk,\n   input  rst,\n   output ddr_ck_p,\n   output ddr_ck_n\n);"}
{"task_id": 916, "completion": "module tail_offset (ir, toff_0_0, toff_1_0, toff_2_0, toff_3_0, toff_4_0, toff_5_0, toff_6_0, toff_7_0, toff_8_0, toff_9_0, toff_10_0, toff_11_0, toff_12_0, toff_13_0, toff_14_0, toff_15_0); input [63:0] ir; output [3:0] toff_0_0, toff_1_0, toff_2_0, toff_3_0, toff_4_0, toff_5_0, toff_6_0, toff_7_0, toff_8_0, toff_9_0, toff_10_0, toff_11_0, toff_12_0, toff_13_0, toff_14_0, toff_15_0; reg [3:0] toff_0_0, toff_1_1, toff_2_2, toff_3_3, toff_4_4, toff_5_5, toff_6_6, toff_7_7, toff_8_8, toff_9_9, toff_10_10, toff_11_11, toff_12_12, toff_13_13, toff_14_14, toff_15_15; reg [3:0] ir0, ir1, ir2, ir3, ir4, ir5, ir6, ir7, ir8, ir9, ir10, ir11, ir12, ir13, ir14, ir15; wire [3:0] tlen_1, tlen_2, tlen_3, tlen_4, tlen_5, tlen_6, tlen_7, tlen_8, tlen_9, tlen_10, tlen_11, tlen_12, tlen_13, tlen_14;"}
{"task_id": 1490, "completion": "module surround_with_regs(    input   [31:0] i_data0,    output  [31:0] o_data0,    input clk);"}
{"task_id": 134, "completion": "module sky130_fd_sc_hs__bufbuf (input A, output X, input VPWR, input VGND);"}
{"task_id": 538, "completion": "module sky130_fd_sc_hs__a31oi_1 (\n    Y   ,\n    A1  ,\n    A2  ,\n    A3  ,\n    B1  ,\n    VPWR,\n    VGND\n);"}
{"task_id": 594, "completion": "module sky130_fd_sc_ls__nor2b_1 (\n    Y,\n    A,\n    B_N\n);"}
{"task_id": 201, "completion": "module sky130_fd_sc_hdll__buf (\n    input  A,\n    output X,\n    input  VPB,\n    input  VPWR,\n    input  VGND,\n    input  VNB\n);"}
{"task_id": 577, "completion": "module LAG_pl_status (output_port, allocated_pl, allocated_pl_valid, pl_status, pl_blocked); parameter np=5; parameter nv=4; parameter unrestricted_pl_alloc = 0; input output_port_t output_port [np-1:0][nv-1:0]; input [nv-1:0] allocated_pl [np-1:0][nv-1:0]; input [np-1:0][nv-1:0] allocated_pl_valid; input [np-1:0][nv-1:0] pl_status; output [np-1:0][nv-1:0] pl_blocked;"}
{"task_id": 489, "completion": "module sky130_fd_sc_hvl__or2 (\n    input  A   ,\n    input  B   ,\n    output X   ,\n    input  VPB ,\n    input  VPWR,\n    input  VGND,\n    input  VNB\n);"}
{"task_id": 490, "completion": "module sky130_fd_sc_hs__fill_diode ( VPWR, VGND, VPB , VNB );"}
{"task_id": 143, "completion": "module sky130_fd_sc_lp__lsbuf (        output X,        input  A,        input  DESTPWR,        input  VPWR,        input  VGND,        input  DESTVPB,        input  VPB,        input  VNB    );"}
{"task_id": 184, "completion": "module sky130_fd_sc_lp__nand2b_4 (\n    Y   ,\n    A_N ,\n    B   ,\n    VPWR,\n    VGND,\n    VPB ,\n    VNB\n);"}
{"task_id": 4, "completion": "module axi_data_fifo_v2_1_ndeep_srl #(\n   parameter         C_FAMILY  = \"rtl\", \n   parameter         C_A_WIDTH = 1          \n  )(\n   input  wire                 CLK, \n   input  wire [C_A_WIDTH-1:0] A,   \n   input  wire                 CE,  \n   input  wire                 D,   \n   output wire                 Q    \n   );"}
{"task_id": 514, "completion": "module address(\n  input CLK,\n  input [7:0] featurebits,\n  input [2:0] MAPPER,\n  input [23:0] SNES_ADDR,\n  input [7:0] SNES_PA,\n  output [23:0] ROM_ADDR,\n  output ROM_HIT,\n  output IS_SAVERAM,\n  output IS_ROM,\n  output IS_WRITABLE,\n  input [23:0] SAVERAM_MASK,\n  input [23:0] ROM_MASK,\n  output msu_enable,\n  output cx4_enable,\n  output cx4_vect_enable,\n  output r213f_enable,\n  output snescmd_enable,\n  output nmicmd_enable,\n  output return_vector_enable,\n  output branch1_enable,\n  output branch2_enable\n);"}
{"task_id": 561, "completion": "module RAM_4K(\n  input clka,\n  input ena,\n  input [0 : 0] wea,\n  input [11 : 0] addra,\n  input [15 : 0] dina,\n  output [15 : 0] douta\n);"}
{"task_id": 0, "completion": "module axi_protocol_converter_v2_1_b2s_simple_fifo #( \n  parameter C_WIDTH  = 8, \n  parameter C_AWIDTH = 4, \n  parameter C_DEPTH  = 16 \n)( \n  input  wire               clk,       \n  input  wire               rst,       \n  input  wire               wr_en,     \n  input  wire               rd_en,     \n  input  wire [C_WIDTH-1:0] din,       \n  output wire [C_WIDTH-1:0] dout,      \n  output wire               a_full, \n  output wire               full,      \n  output wire               a_empty,   \n  output wire               empty      \n);"}
{"task_id": 628, "completion": "module display (input wire CLK, input wire [7:0] BPM, output wire [3:0] SEGA, output wire [7:0] SEGD);"}
{"task_id": 199, "completion": "module ordered_type_framework #(\n    parameter TYPE_WIDTH = 32\n)(\n    input wire clk,\n    input wire rst_n,\n    input wire [TYPE_WIDTH-1:0] input_data,\n    output wire [TYPE_WIDTH-1:0] ordered_output\n);"}
{"task_id": 330, "completion": "module shift_left_32(\n\tinput[31:0] a, //value to be shifted\n\toutput[31:0] out //output\n);"}
{"task_id": 596, "completion": "module dig(\n    input nres,\n    output [7:0] cfg,\n    input clk_cog,\n    input clk_pll,\n    input [31:0] pin_in,\n    output [31:0] pin_out,\n    output [31:0] pin_dir,\n    output [7:0] cog_led\n);"}
{"task_id": 112, "completion": "module e0 (input [31:0] x, output [31:0] y);\nmodule e1 (input [31:0] x, output [31:0] y);\nmodule ch (input [31:0] x, input [31:0] y, input [31:0] z, output [31:0] o);\nmodule maj (input [31:0] x, input [31:0] y, input [31:0] z, output [31:0] o);\nmodule s0 (input [31:0] x, output [31:0] y);\nmodule s1 (input [31:0] x, output [31:0] y);"}
{"task_id": 48, "completion": "module Priority_Codec_64(\n    input wire [54:0]  Data_Dec_i,\n    output reg [5:0] Data_Bin_o\n    );"}
{"task_id": 385, "completion": "module mod_clock_master(\n  input in_clk_12_mhz,\n  output out_clk_25_175_mhz,\n  output out_clk_166_mhz\n);"}
{"task_id": 635, "completion": "module sky130_fd_sc_hdll__dlxtn (  output Q , input D , input GATE_N );"}
{"task_id": 693, "completion": "module sky130_fd_sc_hvl__xnor2 ( input  A, input  B, output Y, input  VPB, input  VPWR, input  VGND, input  VNB );"}
{"task_id": 204, "completion": "module top_fetch\n#(\n    parameter PC_DATA_WIDTH = 20,\n    parameter INSTRUCTION_WIDTH = 32,\n    parameter PC_INITIAL_ADDRESS = 20'h0\n)(\n    input clk,\n    input rst_n,\n    input en,\n    input stall,\n    input select_new_pc_in,\n    input [PC_DATA_WIDTH-1:0] new_pc_in,\n    output [PC_DATA_WIDTH-1:0] pc_out,\n    output [PC_DATA_WIDTH-1:0] inst_mem_addr_out,\n    input boot_mode\n);"}
{"task_id": 669, "completion": "module sky130_fd_sc_lp__srdlrtp ( Q, RESET_B, D, GATE, SLEEP_B );"}
{"task_id": 717, "completion": "module sky130_fd_sc_hs__nand4_2 ( Y, A, B, C, D, VPWR, VGND );"}
{"task_id": 507, "completion": "module hex_to_sseg(\n    input wire[3:0] hex,\n    output reg[7:0] sseg,\n    input dp\n);"}
{"task_id": 85, "completion": "module decoder_complex(    input wire [ 7 : 0] opcode,    input wire [`FWIDTH - 1 : 0] flags,    output reg [`MC_OFFSET_WIDTH - 1 : 0] op_decoder_out);"}
{"task_id": 103, "completion": "module master_control_multi(\n    input master_clk,\n    input usbclk,\n    input wire [6:0] serial_addr,\n    input wire [31:0] serial_data,\n    input wire serial_strobe,\n    input wire rx_slave_sync,\n    output tx_bus_reset,\n    output rx_bus_reset,\n    output wire tx_dsp_reset,\n    output wire rx_dsp_reset,\n    output wire enable_tx,\n    output wire enable_rx,\n    output wire sync_rx,\n    output wire [7:0] interp_rate,\n    output wire [7:0] decim_rate,\n    output tx_sample_strobe,\n    output strobe_interp,\n    output rx_sample_strobe,\n    output strobe_decim,\n    input tx_empty,\n    input wire [15:0] debug_0,\n    input wire [15:0] debug_1,\n    input wire [15:0] debug_2,\n    input wire [15:0] debug_3,\n    output wire [15:0] reg_0,\n    output wire [15:0] reg_1,\n    output wire [15:0] reg_2,\n    output wire [15:0] reg_3\n);"}
{"task_id": 723, "completion": "module sky130_fd_sc_hd__buf_2 (\n    X,\n    A,\n    VPWR,\n    VGND,\n    VPB,\n    VNB\n);"}
{"task_id": 706, "completion": "module sky130_fd_sc_ms__udp_dlatch$PR_pp$PG$N ( Q, D, GATE, RESET, NOTIFIER, VPWR, VGND );"}
{"task_id": 270, "completion": "module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix(aclk, aresetn, s_axi_awaddr, s_axi_awprot, s_axi_awvalid, s_axi_awready, s_axi_wdata, s_axi_wstrb, s_axi_wvalid, s_axi_wready, s_axi_bresp, s_axi_bvalid, s_axi_bready, s_axi_araddr, s_axi_arprot, s_axi_arvalid, s_axi_arready, s_axi_rdata, s_axi_rresp, s_axi_rvalid, s_axi_rready, m_axi_awaddr, m_axi_awprot, m_axi_awvalid, m_axi_awready, m_axi_wdata, m_axi_wstrb, m_axi_wvalid, m_axi_wready, m_axi_bresp, m_axi_bvalid, m_axi_bready, m_axi_araddr, m_axi_arprot, m_axi_arvalid, m_axi_arready, m_axi_rdata, m_axi_rresp, m_axi_rvalid, m_axi_rready);"}
{"task_id": 183, "completion": "module sky130_fd_sc_ls__sdfrbp ( Q, Q_N, CLK, D, SCD, SCE, RESET_B );"}
{"task_id": 730, "completion": "module sky130_fd_sc_hdll__a21boi (\n    input A1,\n    input A2,\n    input B1_N,\n    input VPWR,\n    input VGND,\n    input VPB,\n    input VNB,\n    output Y\n);"}
{"task_id": 735, "completion": "module mg42n( clken, clock, denom, numer, quotient, remain); input clken; input clock; input [24:0] denom; input [63:0] numer; output [63:0] quotient; output [24:0] remain;"}
{"task_id": 778, "completion": "module sky130_fd_sc_hvl__decap (input VPB, input VPWR, input VGND, input VNB);"}
{"task_id": 118, "completion": "module axi_protocol_converter_v2_1_b_downsizer #(\n   parameter C_FAMILY = \"none\",\n   parameter integer C_AXI_ID_WIDTH = 4,\n   parameter integer C_AXI_SUPPORTS_USER_SIGNALS = 0,\n   parameter integer C_AXI_BUSER_WIDTH = 1\n)(\n   input wire ARESET,\n   input wire ACLK,\n   input wire cmd_valid,\n   input wire cmd_split,\n   input wire [4-1:0] cmd_repeat,\n   output wire cmd_ready,\n   output wire [C_AXI_ID_WIDTH-1:0] S_AXI_BID,\n   output wire [2-1:0] S_AXI_BRESP,\n   output wire [C_AXI_BUSER_WIDTH-1:0] S_AXI_BUSER,\n   output wire S_AXI_BVALID,\n   input wire S_AXI_BREADY,\n   input wire [C_AXI_ID_WIDTH-1:0] M_AXI_BID,\n   input wire [2-1:0] M_AXI_BRESP,\n   input wire [C_AXI_BUSER_WIDTH-1:0] M_AXI_BUSER,\n   input wire M_AXI_BVALID,\n   output wire M_AXI_BREADY\n);"}
{"task_id": 802, "completion": "module sky130_fd_sc_lp__dlybuf4s15kapwr (\n    input  A,\n    output X,\n    input  KAPWR,\n    input  VPB,\n    input  VPWR,\n    input  VGND,\n    input  VNB\n);"}
{"task_id": 363, "completion": "module tes_pll (areset, inclk0, c0, c1, c2, c3, c4); input areset; input inclk0; output c0; output c1; output c2; output c3; output c4;"}
{"task_id": 620, "completion": "module wasca_performance_counter_0 (  output  [ 31: 0] readdata,  input   [  2: 0] address,  input            begintransfer,  input            clk,  input            reset_n,  input            write,  input   [ 31: 0] writedata );"}
{"task_id": 822, "completion": "module sky130_fd_sc_hs__and2_2 (\n    X   ,\n    A   ,\n    B   ,\n    VPWR,\n    VGND\n);"}
{"task_id": 358, "completion": "module ao68000 (\n        input wire CLK_I,\n        input wire reset_n,\n        output wire CYC_O,\n        output wire [29:0] ADR_O,\n        output wire [31:0] DAT_O,\n        input wire [31:0] DAT_I,\n        output wire [3:0] SEL_O,\n        output wire STB_O,\n        output wire WE_O,\n        input wire ACK_I,\n        input wire ERR_I,\n        input wire RTY_I,\n        output wire SGL_O,\n        output wire BLK_O,\n        output wire RMW_O,\n        output wire [2:0] CTI_O,\n        output wire [1:0] BTE_O,\n        output wire [2:0] fc_o,\n        input wire [2:0] ipl_i,\n        output wire reset_o,\n        output wire blocked_o\n    );"}
{"task_id": 740, "completion": "module fifo_39x256 (\n\tclock,\n\tdata,\n\trdreq,\n\twrreq,\n\talmost_full,\n\tempty,\n\tfull,\n\tq,\n\tusedw\n);"}
{"task_id": 835, "completion": "module archive_handler()(\n    input wire [PATH_WIDTH-1:0] path,\n    input wire [MOUNT_WIDTH-1:0] mount,\n    output wire success,\n    output wire [ARCHIVE_WIDTH-1:0] archive_out\n);"}
{"task_id": 839, "completion": "module clk_gen (input clk_in1, output clk_out1, input reset);"}
{"task_id": 468, "completion": "module blk_mem_gen_v6_2(  clka,  addra,  douta);  input clka;  input [11 : 0] addra;  output [15 : 0] douta;"}
{"task_id": 787, "completion": "module sky130_fd_sc_hdll__o21a (\n    output X,\n    input  A1,\n    input  A2,\n    input  B1,\n    input  VPWR,\n    input  VGND,\n    input  VPB,\n    input  VNB\n);"}
{"task_id": 874, "completion": "module sky130_fd_sc_lp__iso0p (X, A, SLEEP, KAPWR, VGND, VPB, VNB);"}
{"task_id": 32, "completion": "module processing_system7_v5_5_trace_buffer #(\n   parameter integer FIFO_SIZE = 128,\n   parameter integer USE_TRACE_DATA_EDGE_DETECTOR = 0,\n   parameter integer C_DELAY_CLKS = 12\n )(\n   input wire TRACE_CLK,\n   input wire RST,\n   input wire TRACE_VALID_IN,\n   input wire [3:0] TRACE_ATID_IN,\n   input wire [31:0] TRACE_DATA_IN,\n   output wire TRACE_VALID_OUT,\n   output wire [3:0] TRACE_ATID_OUT,\n   output wire [31:0] TRACE_DATA_OUT\n );"}
{"task_id": 86, "completion": "module mc_chroma_top (\n\tclk,\n\trstn,\n\tctrl_launch_i,\n\tctrl_launch_sel_i,\n\tctrl_done_o,\n\tmv_rden_o,\n\tmv_rdaddr_o,\n\tmv_data_i,\n\tref_rden_o,\n\tref_idx_x_o,\n\tref_idx_y_o,\n\tref_sel_o,\n\tref_pel_i,\n\tpred_pixel_o,\n\tpred_wren_o,\n\tpred_addr_o\n);"}
{"task_id": 859, "completion": "module fallthrough_small_fifo #(\n      parameter WIDTH = 72,\n      parameter MAX_DEPTH_BITS = 3,\n      parameter PROG_FULL_THRESHOLD = 2**MAX_DEPTH_BITS - 1\n    )(\n     input [WIDTH-1:0] din,\n     input wr_en,\n     input rd_en,\n     output [WIDTH-1:0] dout,\n     output full,\n     output nearly_full,\n     output prog_full,\n     output reg empty,\n     input reset,\n     input clk\n    );"}
{"task_id": 769, "completion": "module pcie_7x_v1_3_axi_basic_rx #(  parameter C_DATA_WIDTH  = 128,  parameter C_FAMILY      = \"X7\",  parameter C_ROOT_PORT   = \"FALSE\",  parameter C_PM_PRIORITY = \"FALSE\",  parameter TCQ = 1,  parameter REM_WIDTH  = (C_DATA_WIDTH == 128) ? 2 : 1,  parameter KEEP_WIDTH = C_DATA_WIDTH / 8 ) (  output  [C_DATA_WIDTH-1:0] m_axis_rx_tdata,  output                     m_axis_rx_tvalid,  input                      m_axis_rx_tready,  output    [KEEP_WIDTH-1:0] m_axis_rx_tkeep,  output                     m_axis_rx_tlast,  output              [21:0] m_axis_rx_tuser,  input  [C_DATA_WIDTH-1:0] trn_rd,  input                     trn_rsof,  input                     trn_reof,  input                     trn_rsrc_rdy,  output                    trn_rdst_rdy,  input                     trn_rsrc_dsc,  input     [REM_WIDTH-1:0] trn_rrem,  input                     trn_rerrfwd,  input               [6:0] trn_rbar_hit,  input                     trn_recrc_err,  output              [2:0] np_counter,  input                     user_clk,  input                     user_rst );"}
{"task_id": 928, "completion": "module CLA_32Bit_Adder(CO,S,A,B,CI);\n  output          CO;\n  output [31:0]   S;\n  input  [31:0]   A,B;\n  input           CI;\n  wire            GPP, PPP;\n  wire   [1:0]    PP, GP;\n  wire            C16, C32, C48;"}
{"task_id": 504, "completion": "module bool_logic (input wire b1, input wire b2, input wire b3, output wire and_result, output wire or_result, output wire nand_result, output wire and3_result);"}
{"task_id": 959, "completion": "module Main_Module(clock, reset, write_data_selector, led_write, led_read, led_success, led_fail, addr, dato, clock2, estado, mem_data, WE);"}
{"task_id": 838, "completion": "module ZedboardOLED_v1_0 #(\n\tparameter integer C_S00_AXI_DATA_WIDTH = 32,\n\tparameter integer C_S00_AXI_ADDR_WIDTH = 7\n)(\n\toutput wire SDIN,\n\toutput wire SCLK,\n\toutput wire DC,\n\toutput wire RES,\n\toutput wire VBAT,\n\toutput wire VDD,\n\tinput wire s00_axi_aclk,\n\tinput wire s00_axi_aresetn,\n\tinput wire [C_S00_AXI_ADDR_WIDTH-1 : 0] s00_axi_awaddr,\n\tinput wire [2 : 0] s00_axi_awprot,\n\tinput wire s00_axi_awvalid,\n\toutput wire s00_axi_awready,\n\tinput wire [C_S00_AXI_DATA_WIDTH-1 : 0] s00_axi_wdata,\n\tinput wire [(C_S00_AXI_DATA_WIDTH/8)-1 : 0] s00_axi_wstrb,\n\tinput wire s00_axi_wvalid,\n\toutput wire s00_axi_wready,\n\toutput wire [1 : 0] s00_axi_bresp,\n\toutput wire s00_axi_bvalid,\n\tinput wire s00_axi_bready,\n\tinput wire [C_S00_AXI_ADDR_WIDTH-1 : 0] s00_axi_araddr,\n\tinput wire [2 : 0] s00_axi_arprot,\n\tinput wire s00_axi_arvalid,\n\toutput wire s00_axi_arready,\n\toutput wire [C_S00_AXI_DATA_WIDTH-1 : 0] s00_axi_rdata,\n\toutput wire [1 : 0] s00_axi_rresp,\n\toutput wire s00_axi_rvalid,\n\tinput wire s00_axi_rready\n);"}
{"task_id": 975, "completion": "module velocityControlHdl_Reset_Delay_block1(\n           input CLK_IN,\n           input reset,\n           input enb_1_2000_0,\n           input Reset_1,\n           input signed [31:0] In,\n           output signed [31:0] Out\n);"}
{"task_id": 1015, "completion": "module sky130_fd_sc_hs__o22ai (    Y   ,    A1  ,    A2  ,    B1  ,    B2  ,    VPWR,    VGND);"}
{"task_id": 443, "completion": "module COMMON_SLICE(\n    DX, D1, D2, D3, D4, D5, D6, DMUX, D, DQ,\n    CX, C1, C2, C3, C4, C5, C6, CMUX, C, CQ,\n    BX, B1, B2, B3, B4, B5, B6, BMUX, B, BQ,\n    AX, A1, A2, A3, A4, A5, A6, AMUX, A, AQ,\n    SR, CE, CLK,\n    CIN, CYINIT, COUT\n);"}
{"task_id": 1028, "completion": "module sky130_fd_sc_lp__inputisolatch (\n    Q,\n    D,\n    SLEEP_B,\n    VPWR,\n    VGND,\n    VPB,\n    VNB\n);"}
{"task_id": 283, "completion": "module rem_top_ff #(parameter CHAR_COUNT=32, DELIMITER=0, STATE_COUNT=4) (clk, rst, softRst, input_valid, input_data, input_ready, output_valid, output_match, output_index); input clk; input rst; input softRst; input input_valid; input [511:0] input_data; output reg input_ready; output reg output_valid; output reg output_match; output reg [15:0] output_index;"}
{"task_id": 1081, "completion": "module ClockDivider(clk, clk_vga, clk_cpu, clk_2cpu);"}
{"task_id": 964, "completion": "module pcie3_7x_0_pcie_bram_7vx_req #(parameter IMPL_TARGET = \"HARD\", parameter NO_DECODE_LOGIC = \"TRUE\", parameter INTERFACE_SPEED = \"500 MHZ\", parameter COMPLETION_SPACE = \"16 KB\") (input clk_i, input reset_i, input [8:0] waddr0_i, input [8:0] waddr1_i, input [127:0] wdata_i, input [15:0] wdip_i, input wen0_i, input wen1_i, input wen2_i, input wen3_i, input [8:0] raddr0_i, input [8:0] raddr1_i, output [127:0] rdata_o, output [15:0] rdop_o, input ren0_i, input ren1_i, input ren2_i, input ren3_i);"}
{"task_id": 279, "completion": "module ghrd_10as066n2_axi_bridge_0 #(\n\t\tparameter USE_PIPELINE          = 1,\n\t\tparameter USE_M0_AWID           = 1,\n\t\tparameter USE_M0_AWREGION       = 1,\n\t\tparameter USE_M0_AWLEN          = 1,\n\t\tparameter USE_M0_AWSIZE         = 1,\n\t\tparameter USE_M0_AWBURST        = 1,\n\t\tparameter USE_M0_AWLOCK         = 1,\n\t\tparameter USE_M0_AWCACHE        = 1,\n\t\tparameter USE_M0_AWQOS          = 1,\n\t\tparameter USE_S0_AWREGION       = 1,\n\t\tparameter USE_S0_AWLOCK         = 1,\n\t\tparameter USE_S0_AWCACHE        = 1,\n\t\tparameter USE_S0_AWQOS          = 1,\n\t\tparameter USE_S0_AWPROT         = 1,\n\t\tparameter USE_M0_WSTRB          = 1,\n\t\tparameter USE_S0_WLAST          = 1,\n\t\tparameter USE_M0_BID            = 1,\n\t\tparameter USE_M0_BRESP          = 1,\n\t\tparameter USE_S0_BRESP          = 1,\n\t\tparameter USE_M0_ARID           = 1,\n\t\tparameter USE_M0_ARREGION       = 1,\n\t\tparameter USE_M0_ARLEN          = 1,\n\t\tparameter USE_M0_ARSIZE         = 1,\n\t\tparameter USE_M0_ARBURST        = 1,\n\t\tparameter USE_M0_ARLOCK         = 1,\n\t\tparameter USE_M0_ARCACHE        = 1,\n\t\tparameter USE_M0_ARQOS          = 1,\n\t\tparameter USE_S0_ARREGION       = 1,\n\t\tparameter USE_S0_ARLOCK         = 1,\n\t\tparameter USE_S0_ARCACHE        = 1,\n\t\tparameter USE_S0_ARQOS          = 1,\n\t\tparameter USE_S0_ARPROT         = 1,\n\t\tparameter USE_M0_RID            = 1,\n\t\tparameter USE_M0_RRESP          = 1,\n\t\tparameter USE_M0_RLAST          = 1,\n\t\tparameter USE_S0_RRESP          = 1,\n\t\tparameter M0_ID_WIDTH           = 3,\n\t\tparameter S0_ID_WIDTH           = 6,\n\t\tparameter DATA_WIDTH            = 512,\n\t\tparameter WRITE_ADDR_USER_WIDTH = 32,\n\t\tparameter READ_ADDR_USER_WIDTH  = 32,\n\t\tparameter WRITE_DATA_USER_WIDTH = 32,\n\t\tparameter WRITE_RESP_USER_WIDTH = 32,\n\t\tparameter READ_DATA_USER_WIDTH  = 32,\n\t\tparameter ADDR_WIDTH            = 32,\n\t\tparameter USE_S0_AWUSER         = 0,\n\t\tparameter USE_S0_ARUSER         = 0,\n\t\tparameter USE_S0_WUSER          = 0,\n\t\tparameter USE_S0_RUSER          = 0,\n\t\tparameter USE_S0_BUSER          = 0,\n\t\tparameter USE_M0_AWUSER         = 0,\n\t\tparameter USE_M0_ARUSER         = 0,\n\t\tparameter USE_M0_WUSER          = 0,\n\t\tparameter USE_M0_RUSER          = 0,\n\t\tparameter USE_M0_BUSER          = 0,\n\t\tparameter AXI_VERSION           = \"AXI4\"\n\t) (\n\t\tinput  wire         aclk,        \n\t\tinput  wire         aresetn,     \n\t\toutput wire [2:0]   m0_awid,     \n\t\toutput wire [31:0]  m0_awaddr,   \n\t\toutput wire [7:0]   m0_awlen,    \n\t\toutput wire [2:0]   m0_awsize,   \n\t\toutput wire [1:0]   m0_awburst,  \n\t\toutput wire [0:0]   m0_awlock,   \n\t\toutput wire [3:0]   m0_awcache,  \n\t\toutput wire [2:0]   m0_awprot,   \n\t\toutput wire [3:0]   m0_awqos,    \n\t\toutput wire [3:0]   m0_awregion, \n\t\toutput wire         m0_awvalid,  \n\t\tinput  wire         m0_awready,  \n\t\toutput wire [511:0] m0_wdata,    \n\t\toutput wire [63:0]  m0_wstrb,    \n\t\toutput wire         m0_wlast,    \n\t\toutput wire         m0_wvalid,   \n\t\tinput  wire         m0_wready,   \n\t\tinput  wire [2:0]   m0_bid,      \n\t\tinput  wire [1:0]   m0_bresp,    \n\t\tinput  wire         m0_bvalid,   \n\t\toutput wire         m0_bready,   \n\t\toutput wire [2:0]   m0_arid,     \n\t\toutput wire [31:0]  m0_araddr,   \n\t\toutput wire [7:0]   m0_arlen,    \n\t\toutput wire [2:0]   m0_arsize,   \n\t\toutput wire [1:0]   m0_arburst,  \n\t\toutput wire [0:0]   m0_arlock,   \n\t\toutput wire [3:0]   m0_arcache,  \n\t\toutput wire [2:0]   m0_arprot,   \n\t\toutput wire [3:0]   m0_arqos,    \n\t\toutput wire [3:0]   m0_arregion, \n\t\toutput wire         m0_arvalid,  \n\t\tinput  wire         m0_arready,  \n\t\tinput  wire [2:0]   m0_rid,      \n\t\tinput  wire [511:0] m0_rdata,    \n\t\tinput  wire [1:0]   m0_rresp,    \n\t\tinput  wire         m0_rlast,    \n\t\tinput  wire         m0_rvalid,   \n\t\toutput wire         m0_rready,   \n\t\tinput  wire [5:0]   s0_awid,     \n\t\tinput  wire [31:0]  s0_awaddr,   \n\t\tinput  wire [7:0]   s0_awlen,    \n\t\tinput  wire [2:0]   s0_awsize,   \n\t\tinput  wire [1:0]   s0_awburst,  \n\t\tinput  wire [0:0]   s0_awlock,   \n\t\tinput  wire [3:0]   s0_awcache,  \n\t\tinput  wire [2:0]   s0_awprot,   \n\t\tinput  wire [3:0]   s0_awqos,    \n\t\tinput  wire [3:0]   s0_awregion, \n\t\tinput  wire         s0_awvalid,  \n\t\toutput wire         s0_awready,  \n\t\tinput  wire [511:0] s0_wdata,    \n\t\tinput  wire [63:0]  s0_wstrb,    \n\t\tinput  wire         s0_wlast,    \n\t\tinput  wire         s0_wvalid,   \n\t\toutput wire         s0_wready,   \n\t\toutput wire [5:0]   s0_bid,      \n\t\toutput wire [1:0]   s0_bresp,    \n\t\toutput wire         s0_bvalid,   \n\t\tinput  wire         s0_bready,   \n\t\tinput  wire [5:0]   s0_arid,     \n\t\tinput  wire [31:0]  s0_araddr,   \n\t\tinput  wire [7:0]   s0_arlen,    \n\t\tinput  wire [2:0]   s0_arsize,   \n\t\tinput  wire [1:0]   s0_arburst,  \n\t\tinput  wire [0:0]   s0_arlock,   \n\t\tinput  wire [3:0]   s0_arcache,  \n\t\tinput  wire [2:0]   s0_arprot,   \n\t\tinput  wire [3:0]   s0_arqos,    \n\t\tinput  wire [3:0]   s0_arregion, \n\t\tinput  wire         s0_arvalid,  \n\t\toutput wire         s0_arready,  \n\t\toutput wire [5:0]   s0_rid,      \n\t\toutput wire [511:0] s0_rdata,    \n\t\toutput wire [1:0]   s0_rresp,    \n\t\toutput wire         s0_rlast,    \n\t\toutput wire         s0_rvalid,   \n\t\tinput  wire         s0_rready    \n\t);"}
{"task_id": 1073, "completion": "module sky130_fd_sc_ls__o41ai (\n    output Y,\n    input  A1,\n    input  A2,\n    input  A3,\n    input  A4,\n    input  B1,\n    input  VPWR,\n    input  VGND,\n    input  VPB,\n    input  VNB\n);"}
{"task_id": 917, "completion": "module faux_sata_hd_phy (\n        input               rst,\n        input               clk,\n        output  reg [31:0]  tx_dout,\n        output  reg         tx_isk,\n        output  reg         tx_set_elec_idle,\n        output  reg         rx_byte_is_aligned,\n        input       [31:0]  rx_din,\n        input       [3:0]   rx_isk,\n        input               rx_is_elec_idle,\n        input               comm_reset_detect,\n        input               comm_wake_detect,\n        output  reg         tx_comm_reset,\n        output  reg         tx_comm_wake,\n        output      [3:0]   lax_state,\n        output  reg         hd_ready,\n        output              phy_ready\n    );"}
{"task_id": 1078, "completion": "module m_ckt_jno (m_bus_pc_in, w_bus_addr, w_bus_data, w_jno, w_sr_out, w_clock, w_reset);"}
{"task_id": 1077, "completion": "module sky130_fd_sc_lp__xor2 (\n    output X,\n    input  A,\n    input  B\n);"}
{"task_id": 1091, "completion": "module FFF0 (\n\taddress,\n\tclock,\n\tdata,\n\twren,\n\tq);\n\n\tinput\t[10:0]  address;\n\tinput\t  clock;\n\tinput\t[7:0]  data;\n\tinput\t  wren;\n\toutput\t[7:0]  q;"}
{"task_id": 726, "completion": "module altera_tse_pcs_pma_gige (input [4:0] address, input clk, input [7:0] gmii_tx_d, input gmii_tx_en, input gmii_tx_err, input gxb_cal_blk_clk, input gxb_pwrdn_in, input [3:0] mii_tx_d, input mii_tx_en, input mii_tx_err, input read, input reconfig_clk, input [3:0] reconfig_togxb, input reconfig_busy, input ref_clk, input reset, input reset_rx_clk, input reset_tx_clk, input rxp, input write, input [15:0] writedata, output [7:0] gmii_rx_d, output gmii_rx_dv, output gmii_rx_err, output hd_ena, output led_an, output led_char_err, output led_col, output led_crs, output led_disp_err, output led_link, output mii_col, output mii_crs, output [3:0] mii_rx_d, output mii_rx_dv, output mii_rx_err, output pcs_pwrdn_out, output [15:0] readdata, output [16:0] reconfig_fromgxb, output rx_clk, output set_10, output set_100, output set_1000, output tx_clk, output rx_clkena, output tx_clkena, output txp, output rx_recovclkout, output waitrequest);"}
{"task_id": 87, "completion": "module processing_system7_v5_5_atc #(\n   parameter         C_FAMILY                         = \"rtl\",\n   parameter integer C_AXI_ID_WIDTH                   = 4,\n   parameter integer C_AXI_ADDR_WIDTH                 = 32,\n   parameter integer C_AXI_DATA_WIDTH                 = 64,\n   parameter integer C_AXI_AWUSER_WIDTH               = 1,\n   parameter integer C_AXI_ARUSER_WIDTH               = 1,\n   parameter integer C_AXI_WUSER_WIDTH                = 1,\n   parameter integer C_AXI_RUSER_WIDTH                = 1,\n   parameter integer C_AXI_BUSER_WIDTH                = 1\n)(\n   input  wire                                  ACLK,\n   input  wire                                  ARESETN,\n   input  wire [C_AXI_ID_WIDTH-1:0]             S_AXI_AWID,\n   input  wire [C_AXI_ADDR_WIDTH-1:0]           S_AXI_AWADDR,\n   input  wire [4-1:0]                          S_AXI_AWLEN,\n   input  wire [3-1:0]                          S_AXI_AWSIZE,\n   input  wire [2-1:0]                          S_AXI_AWBURST,\n   input  wire [2-1:0]                          S_AXI_AWLOCK,\n   input  wire [4-1:0]                          S_AXI_AWCACHE,\n   input  wire [3-1:0]                          S_AXI_AWPROT,\n   input  wire [C_AXI_AWUSER_WIDTH-1:0]         S_AXI_AWUSER,\n   input  wire                                  S_AXI_AWVALID,\n   output wire                                  S_AXI_AWREADY,\n   input  wire [C_AXI_ID_WIDTH-1:0]             S_AXI_WID,\n   input  wire [C_AXI_DATA_WIDTH-1:0]           S_AXI_WDATA,\n   input  wire [C_AXI_DATA_WIDTH/8-1:0]         S_AXI_WSTRB,\n   input  wire                                  S_AXI_WLAST,\n   input  wire [C_AXI_WUSER_WIDTH-1:0]          S_AXI_WUSER,\n   input  wire                                  S_AXI_WVALID,\n   output wire                                  S_AXI_WREADY,\n   output wire [C_AXI_ID_WIDTH-1:0]             S_AXI_BID,\n   output wire [2-1:0]                          S_AXI_BRESP,\n   output wire [C_AXI_BUSER_WIDTH-1:0]          S_AXI_BUSER,\n   output wire                                  S_AXI_BVALID,\n   input  wire                                  S_AXI_BREADY,\n   input  wire [C_AXI_ID_WIDTH-1:0]             S_AXI_ARID,\n   input  wire [C_AXI_ADDR_WIDTH-1:0]           S_AXI_ARADDR,\n   input  wire [4-1:0]                          S_AXI_ARLEN,\n   input  wire [3-1:0]                          S_AXI_ARSIZE,\n   input  wire [2-1:0]                          S_AXI_ARBURST,\n   input  wire [2-1:0]                          S_AXI_ARLOCK,\n   input  wire [4-1:0]                          S_AXI_ARCACHE,\n   input  wire [3-1:0]                          S_AXI_ARPROT,\n   input  wire [C_AXI_ARUSER_WIDTH-1:0]         S_AXI_ARUSER,\n   input  wire                                  S_AXI_ARVALID,\n   output wire                                  S_AXI_ARREADY,\n   output wire [C_AXI_ID_WIDTH-1:0]             S_AXI_RID,\n   output wire [C_AXI_DATA_WIDTH-1:0]           S_AXI_RDATA,\n   output wire [2-1:0]                          S_AXI_RRESP,\n   output wire                                  S_AXI_RLAST,\n   output wire [C_AXI_RUSER_WIDTH-1:0]          S_AXI_RUSER,\n   output wire                                  S_AXI_RVALID,\n   input  wire                                  S_AXI_RREADY,\n   output wire                                  ERROR_TRIGGER,\n   output wire [C_AXI_ID_WIDTH-1:0]             ERROR_TRANSACTION_ID\n);"}
{"task_id": 1176, "completion": "module design_1_xlslice_6_1 (\n  input wire [39 : 0] Din,\n  output wire [15 : 0] Dout\n);"}
{"task_id": 1007, "completion": "module usb_top(    input                   I_sys_clk           ,    input                   I_usb_clk           ,    input                   I_sys_rst           ,    input                   I_usb_rst           ,    input                   I_usb_wfifo_aclr    ,    input                   I_usb_wrreq         ,    input   [15: 0]         I_usb_din           ,    output                  O_usb_wrfull        ,    output  [15: 0]         O_usb_wruesdw       ,    input                   I_usb_rdreq         ,    output  [31: 0]         O_usb_dout          ,    output                  O_usb_rdempty       ,    input                   I_usb_uart_tx_req   ,    input   [7 : 0]         I_usb_uart_tx_data  ,    output                  O_usb_uart_tx_full  ,    input                   I_usb_uart_rx_req   ,    output  [7 : 0]         O_usb_uart_rx_data  ,    output                  O_usb_uart_rx_empty ,    output                  O_usb_pclk          ,    output                  O_usb_clk           ,    input                   I_usb_flga          ,    input                   I_usb_flgb          ,    output                  O_usb_cs            ,    output                  O_usb_wr            ,    output                  O_usb_rd            ,    output                  O_usb_oe            ,    output                  O_usb_a0            ,    output                  O_usb_a1            ,    output                  O_usb_pkt           ,    output                  O_usb_reset         ,    inout  [31:0]           IO_usb_dq           ,    output                  O_usb_uart_txd      ,    input                   I_usb_uart_rxd      ,    input                   I_usb_dir);"}
{"task_id": 148, "completion": "module artemis_pcie_sata (  input          i_sata_reset,  input          i_pcie_reset,  output         o_sata_pll_detect_k,  output         o_pcie_pll_detect_k,  output         o_sata_reset_done,  output         o_pcie_reset_done,  output         o_sata_75mhz_clk,  output         o_sata_300mhz_clk,  output         o_pcie_62p5mhz_clk,  output         o_sata_dcm_locked,  output         o_pcie_dcm_locked,  output  [1:0]  o_sata_loss_of_sync,  output  [1:0]  o_pcie_loss_of_sync,  output  [3:0]  o_sata_rx_char_is_comma,  output  [3:0]  o_sata_rx_char_is_k,  output  [3:0]  o_pcie_rx_char_is_k,  output  [3:0]  o_sata_disparity_error,  output  [3:0]  o_pcie_disparity_error,  output  [3:0]  o_sata_rx_not_in_table,  output  [3:0]  o_pcie_rx_not_in_table,  output  [2:0]  o_sata_clk_correct_count,  output  [2:0]  o_pcie_clk_correct_count,  output  [31:0] o_sata_rx_data,  output  [31:0] o_pcie_rx_data,  output         o_sata_rx_elec_idle,  output         o_pcie_rx_elec_idle,  input   [1:0]  i_sata_rx_pre_amp,  input          i_sata_phy_rx_p,  input          i_sata_phy_rx_n,  input          i_pcie_phy_rx_p,  input          i_pcie_phy_rx_n,  output         o_sata_rx_byte_is_aligned,  output         o_pcie_rx_byte_is_aligned,  output  [2:0]  o_sata_rx_status,  output  [2:0]  o_pcie_rx_status,  output         o_pcie_phy_status,  output         o_pcie_phy_rx_valid,  input          i_pcie_rx_polarity,  input   [3:0]  i_pcie_disparity_mode,  input          i_sata_tx_char_is_k,  input   [3:0]  i_pcie_tx_char_is_k,  input   [31:0] i_sata_tx_data,  input   [31:0] i_pcie_tx_data,  input   [3:0]  i_tx_diff_swing,  output         o_sata_phy_tx_p,  output         o_sata_phy_tx_n,  output         o_pcie_phy_tx_p,  output         o_pcie_phy_tx_n,  input          i_pcie_tx_detect_rx,  input          i_sata_tx_elec_idle,  input          i_pcie_tx_elec_idle,  input          i_sata_tx_comm_start,  input          i_sata_tx_comm_type,  input          i_gtp0_clk_p,  input          i_gtp0_clk_n,  input          i_gtp1_clk_p,  input          i_gtp1_clk_n  );"}
{"task_id": 1143, "completion": "module sky130_fd_sc_ls__o2111a_2 (\n    X ,\n    A1,\n    A2,\n    B1,\n    C1,\n    D1\n);"}
{"task_id": 247, "completion": "module layer_ctrl(\n\tCLK,\n\tRESETn,\n\t\n\t// Interface with MBus\n\tTX_ADDR, \n\tTX_DATA, \n\tTX_PEND, \n\tTX_REQ, \n\tTX_ACK, \n\tTX_PRIORITY,\n\t\n\tRX_ADDR, \n\tRX_DATA, \n\tRX_PEND, \n\tRX_REQ, \n\tRX_ACK, \n\tRX_BROADCAST,\n\t\n\tRX_FAIL,\n\tTX_FAIL, \n\tTX_SUCC, \n\tTX_RESP_ACK,\n\t\n\tRELEASE_RST_FROM_MBUS,\n\t// End of interface\n\t\n\t// Interface with Registers\n\tREG_RD_DATA,\n\tREG_WR_DATA,\n\tREG_WR_EN,\n\t// End of interface\n\t\n\t// Interface with MEM\n\tMEM_REQ_OUT,\n\tMEM_WRITE,\n\tMEM_ACK_IN,\n\tMEM_WR_DATA,\n\tMEM_RD_DATA,\n\tMEM_ADDR,\n\t// End of interface\n\t\n\t// Interrupt\n\tINT_VECTOR,\n\tCLR_INT,\n\tINT_FU_ID,\n\tINT_CMD\n);"}
{"task_id": 1148, "completion": "module fifo_301x128 (\n\tinput\t[300:0]  data,\n\tinput\t  rdclk,\n\tinput\t  rdreq,\n\tinput\t  wrclk,\n\tinput\t  wrreq,\n\toutput\t[300:0]  q,\n\toutput\t  rdempty,\n\toutput\t  wrempty,\n\toutput\t  wrfull,\n\toutput\t[6:0]  wrusedw\n);"}
{"task_id": 939, "completion": "module vid_driver(clk, rst_n, vid_time, x, y, padl0, padl1, vid, audio_o, DEMO_MODE, serv_ball, game_rst, ball_speed);"}
{"task_id": 1270, "completion": "module tvm_vpi_read_mmap\n  #(\n    parameter DATA_WIDTH = 8,\n    parameter ADDR_WIDTH = 8,\n    parameter BASE_ADDR_WIDTH = 32\n    )\n   (\n    input                       clk,\n    input                       rst,\n    input [ADDR_WIDTH-1:0]      addr,\n    output [DATA_WIDTH-1:0]     data_out,\n    input [BASE_ADDR_WIDTH-1:0] mmap_addr\n    );"}
{"task_id": 1205, "completion": "module strong_rec #(\n        parameter DATA_TYPE = ...\n    )(\n        input wire [DATA_WIDTH-1:0] n,\n        input wire [DATA_WIDTH-1:0] a,\n        input wire [DATA_WIDTH-1:0] f\n    );"}
{"task_id": 862, "completion": "module PCIEBus_qpll_drp #(\n    parameter PCIE_GT_DEVICE   = \"GTX\",\n    parameter PCIE_USE_MODE    = \"3.0\",\n    parameter PCIE_PLL_SEL     = \"CPLL\",\n    parameter PCIE_REFCLK_FREQ = 0,\n    parameter LOAD_CNT_MAX     = 2'd3,\n    parameter INDEX_MAX        = 3'd6\n)(\n    input               DRP_CLK,\n    input               DRP_RST_N,\n    input               DRP_OVRD,\n    input               DRP_GEN3,\n    input               DRP_QPLLLOCK,\n    input               DRP_START,\n    input       [15:0]  DRP_DO,\n    input               DRP_RDY,\n    output      [ 7:0]  DRP_ADDR,\n    output              DRP_EN,\n    output      [15:0]  DRP_DI,\n    output              DRP_WE,\n    output              DRP_DONE,\n    output              DRP_QPLLRESET,\n    output      [ 5:0]  DRP_CRSCODE,\n    output      [ 8:0]  DRP_FSM\n);"}
{"task_id": 1118, "completion": "module crc #(\n    parameter DATA_BYTE_WIDTH = 4\n)(\n    input   wire                                clk,\n    input   wire                                rst,\n\n    input   wire                                val_in,\n    input   wire    [DATA_BYTE_WIDTH*8 - 1:0]   data_in,\n    output  wire    [DATA_BYTE_WIDTH*8 - 1:0]   crc_out\n);"}
{"task_id": 1253, "completion": "module FpuFpD(\n\tinput clock,\n\tinput[7:0] opMode,\n\tinput[1:0] idMode,\n\tinput[63:0] idValA,\n\tinput[63:0] idValB,\n\tinput[63:0] idValC,\n\toutput[63:0] idValD,\n\tinput[6:0] idRegA,\n\tinput[6:0] idRegB,\n\tinput[6:0] idRegC,\n\toutput[6:0] idRegD,\n\toutput[1:0] idModeD,\n\tinput[31:0] ctlInSr,\n\toutput[31:0] ctlOutSr,\n\tinput[31:0] ctlInFpul,\n\toutput[31:0] ctlOutFpul,\n\tinput[31:0] ctlInFpScr,\n\toutput[31:0] ctlOutFpScr\n);"}
{"task_id": 1346, "completion": "module nh_lcd_command (\n  input               rst,\n  input               clk,\n  output      [31:0]  debug,\n  input               i_cmd_write_stb,\n  input               i_cmd_read_stb,\n  input       [7:0]   i_cmd_data,\n  output  reg [7:0]   o_cmd_data,\n  input               i_enable,\n  input               i_cmd_parameter,\n  output  reg         o_cmd_finished,\n  output              o_cmd_mode,\n  output  reg         o_write,\n  output  reg         o_read,\n  output  reg [7:0]   o_data_out,\n  input       [7:0]   i_data_in,\n  output  reg         o_data_out_en\n);"}
{"task_id": 460, "completion": "module qsys (\n\tinput  wire        clk_clk,\n\tinput  wire        reset_reset_n,\n\tinput  wire        sdram_clock_areset_conduit_export,\n\toutput wire        sdram_clock_c0_clk,\n\tinput  wire        sdram_read_control_fixed_location,\n\tinput  wire [31:0] sdram_read_control_read_base,\n\tinput  wire [31:0] sdram_read_control_read_length,\n\tinput  wire        sdram_read_control_go,\n\toutput wire        sdram_read_control_done,\n\toutput wire        sdram_read_control_early_done,\n\tinput  wire        sdram_read_user_read_buffer,\n\toutput wire [63:0] sdram_read_user_buffer_output_data,\n\toutput wire        sdram_read_user_data_available,\n\toutput wire [12:0] sdram_wire_addr,\n\toutput wire [1:0]  sdram_wire_ba,\n\toutput wire        sdram_wire_cas_n,\n\toutput wire        sdram_wire_cke,\n\toutput wire        sdram_wire_cs_n,\n\tinout  wire [15:0] sdram_wire_dq,\n\toutput wire [1:0]  sdram_wire_dqm,\n\toutput wire        sdram_wire_ras_n,\n\toutput wire        sdram_wire_we_n,\n\tinput  wire        sdram_write_control_fixed_location,\n\tinput  wire [31:0] sdram_write_control_write_base,\n\tinput  wire [31:0] sdram_write_control_write_length,\n\tinput  wire        sdram_write_control_go,\n\toutput wire        sdram_write_control_done,\n\tinput  wire        sdram_write_user_write_buffer,\n\tinput  wire [63:0] sdram_write_user_buffer_input_data,\n\toutput wire        sdram_write_user_buffer_full\n);"}
{"task_id": 192, "completion": "module e203_exu_alu_dpath(\n  input  alu_req_alu,\n  input  alu_req_alu_add ,\n  input  alu_req_alu_sub ,\n  input  alu_req_alu_xor ,\n  input  alu_req_alu_sll ,\n  input  alu_req_alu_srl ,\n  input  alu_req_alu_sra ,\n  input  alu_req_alu_or  ,\n  input  alu_req_alu_and ,\n  input  alu_req_alu_slt ,\n  input  alu_req_alu_sltu,\n  input  alu_req_alu_lui ,\n  input  [`E203_XLEN-1:0] alu_req_alu_op1,\n  input  [`E203_XLEN-1:0] alu_req_alu_op2,\n  output [`E203_XLEN-1:0] alu_req_alu_res,\n  input  bjp_req_alu,\n  input  [`E203_XLEN-1:0] bjp_req_alu_op1,\n  input  [`E203_XLEN-1:0] bjp_req_alu_op2,\n  input  bjp_req_alu_cmp_eq ,\n  input  bjp_req_alu_cmp_ne ,\n  input  bjp_req_alu_cmp_lt ,\n  input  bjp_req_alu_cmp_gt ,\n  input  bjp_req_alu_cmp_ltu,\n  input  bjp_req_alu_cmp_gtu,\n  input  bjp_req_alu_add,\n  output bjp_req_alu_cmp_res,\n  output [`E203_XLEN-1:0] bjp_req_alu_add_res,\n  input  agu_req_alu,\n  input  [`E203_XLEN-1:0] agu_req_alu_op1,\n  input  [`E203_XLEN-1:0] agu_req_alu_op2,\n  input  agu_req_alu_swap,\n  input  agu_req_alu_add ,\n  input  agu_req_alu_and ,\n  input  agu_req_alu_or  ,\n  input  agu_req_alu_xor ,\n  input  agu_req_alu_max ,\n  input  agu_req_alu_min ,\n  input  agu_req_alu_maxu,\n  input  agu_req_alu_minu,\n  output [`E203_XLEN-1:0] agu_req_alu_res,\n  input  agu_sbf_0_ena,\n  input  [`E203_XLEN-1:0] agu_sbf_0_nxt,\n  output [`E203_XLEN-1:0] agu_sbf_0_r,\n  input  agu_sbf_1_ena,\n  input  [`E203_XLEN-1:0] agu_sbf_1_nxt,\n  output [`E203_XLEN-1:0] agu_sbf_1_r,\n  input  clk,\n  input  rst_n\n);"}
{"task_id": 415, "completion": "module or1200_cpu(\n\tclk,\n\trst,\n\tic_en,\n\ticpu_adr_o,\n\ticpu_cycstb_o,\n\ticpu_sel_o,\n\ticpu_tag_o,\n\ticpu_dat_i,\n\ticpu_ack_i,\n\ticpu_rty_i,\n\ticpu_err_i,\n\ticpu_adr_i,\n\ticpu_tag_i,\n\timmu_en,\n\tex_insn,\n\tex_freeze,\n\tid_pc,\n\tbranch_op,\n\tspr_dat_npc,\n\trf_dataw,\n\tdu_stall,\n\tdu_addr,\n\tdu_dat_du,\n\tdu_read,\n\tdu_write,\n\tdu_dsr,\n\tdu_hwbkpt,\n\tdu_except,\n\tdu_dat_cpu,\n\tdc_en,\n\tdcpu_adr_o,\n\tdcpu_cycstb_o,\n\tdcpu_we_o,\n\tdcpu_sel_o,\n\tdcpu_tag_o,\n\tdcpu_dat_o,\n\tdcpu_dat_i,\n\tdcpu_ack_i,\n\tdcpu_rty_i,\n\tdcpu_err_i,\n\tdcpu_tag_i,\ndmmu_en,\n\tsig_int,\n\tsig_tick,\n\tsupv,\n\tspr_addr,\n\tspr_dat_cpu,\n\tspr_dat_pic,\n\tspr_dat_tt,\n\tspr_dat_pm,\n\tspr_dat_dmmu,\n\tspr_dat_immu,\n\tspr_dat_du,\n\tspr_cs,\n\tspr_we);\n\nparameter dw = `OR1200_OPERAND_WIDTH;\nparameter aw = `OR1200_REGFILE_ADDR_WIDTH;"}
{"task_id": 1420, "completion": "module oh_mux12 #(parameter DW = 1 ) (input sel11, input sel10, input sel9, input sel8, input sel7, input sel6, input sel5, input sel4, input sel3, input sel2, input sel1, input sel0, input [DW-1:0] in11, input [DW-1:0] in10, input [DW-1:0] in9, input [DW-1:0] in8, input [DW-1:0] in7, input [DW-1:0] in6, input [DW-1:0] in5, input [DW-1:0] in4, input [DW-1:0] in3, input [DW-1:0] in2, input [DW-1:0] in1, input [DW-1:0] in0, output [DW-1:0] out);"}
{"task_id": 1374, "completion": "module red_black_tree #(\n        parameter KEY_WIDTH = 32,\n        parameter VAL_WIDTH = 32\n    )(\n        input wire [KEY_WIDTH-1:0] key,\n        input wire [VAL_WIDTH-1:0] value,\n        input wire insert_en,\n        output wire [VAL_WIDTH-1:0] return_value,\n        output wire valid\n    );"}
{"task_id": 884, "completion": "module system_acl_iface_mm_interconnect_1 (\n\t\tinput  wire         pll_outclk0_clk,\n\t\tinput  wire         clock_cross_kernel_mem1_m0_reset_reset_bridge_in_reset_reset,\n\t\tinput  wire [29:0]  clock_cross_kernel_mem1_m0_address,\n\t\toutput wire         clock_cross_kernel_mem1_m0_waitrequest,\n\t\tinput  wire [4:0]   clock_cross_kernel_mem1_m0_burstcount,\n\t\tinput  wire [31:0]  clock_cross_kernel_mem1_m0_byteenable,\n\t\tinput  wire         clock_cross_kernel_mem1_m0_read,\n\t\toutput wire [255:0] clock_cross_kernel_mem1_m0_readdata,\n\t\toutput wire         clock_cross_kernel_mem1_m0_readdatavalid,\n\t\tinput  wire         clock_cross_kernel_mem1_m0_write,\n\t\tinput  wire [255:0] clock_cross_kernel_mem1_m0_writedata,\n\t\tinput  wire         clock_cross_kernel_mem1_m0_debugaccess,\n\t\toutput wire [24:0]  address_span_extender_kernel_windowed_slave_address,\n\t\toutput wire         address_span_extender_kernel_windowed_slave_write,\n\t\toutput wire         address_span_extender_kernel_windowed_slave_read,\n\t\tinput  wire [255:0] address_span_extender_kernel_windowed_slave_readdata,\n\t\toutput wire [255:0] address_span_extender_kernel_windowed_slave_writedata,\n\t\toutput wire [4:0]   address_span_extender_kernel_windowed_slave_burstcount,\n\t\toutput wire [31:0]  address_span_extender_kernel_windowed_slave_byteenable,\n\t\tinput  wire         address_span_extender_kernel_windowed_slave_readdatavalid,\n\t\tinput  wire         address_span_extender_kernel_windowed_slave_waitrequest\n\t);"}
{"task_id": 174, "completion": "module CHARMAP (\n\taddress,\n\tclock,\n\tq);\n\n\tinput\t[8:0]  address;\n\tinput\t  clock;\n\toutput\t[17:0]  q;"}
{"task_id": 276, "completion": "module system_rgb565_to_rgb888_1_0(clk, rgb_565, rgb_888)input clk; input [15:0] rgb_565; output [23:0] rgb_888;"}
{"task_id": 210, "completion": "module fork_cond2_r1_2ph (input r, output a, output r1, input a1, input cond1, output r2, input a2, input cond2, input rstn);"}
{"task_id": 559, "completion": "module sky130_fd_sc_hdll__nor3 ("}
{"task_id": 552, "completion": "module dual_port_sim(\n   input clock_a,\n   input [31:0] data_a,\n   input wren_a,\n   input [4:0] address_a,\n   input clock_b,\n   input [31:0] data_b,\n   input wren_b,\n   input [4:0] address_b,\n   output reg [31:0] q_a,\n   output reg [31:0] q_b\n);"}
{"task_id": 783, "completion": "module sky130_fd_sc_hs__o21ba (input A1, input A2, input B1_N, output X, input VPWR, input VGND);"}
{"task_id": 746, "completion": "module sky130_fd_sc_ls__udp_pwrgood_pp$P (input UDP_IN, output UDP_OUT, input VPWR);"}
{"task_id": 551, "completion": "module sky130_fd_sc_ls__o31a ( X, A1, A2, A3, B1, VPWR, VGND, VPB, VNB );"}
{"task_id": 259, "completion": "module rom_8x2k_lo(\n        input [10 : 0] addr,\n        input clk,\n        input [7 : 0] din,\n        output [7 : 0] dout,\n        input en,\n        input we);"}
{"task_id": 602, "completion": "module system_ov7670_vga_1_0(pclk, data, rgb);"}
{"task_id": 15, "completion": "module sky130_fd_sc_hs__sdfbbn ( Q, Q_N, D, SCD, SCE, CLK_N, SET_B, RESET_B, VPWR, VGND );"}
{"task_id": 476, "completion": "module spi_map(\n\t       input  i_rstb,\n\t       input  i_spi_active,\n\t       input [7:0] vi_data_rx,\n\t       input  i_rx_valid,\n\t       input [2:0] vi_byte_num,\n\t       inout [7:0] vio_data_spi);"}
{"task_id": 643, "completion": "module sky130_fd_sc_hs__dlygate4sd1_1 (\n    X,\n    A,\n    VPWR,\n    VGND\n);"}
{"task_id": 394, "completion": "module top_nto1_ddr_se_tx (\ninput reset,\ninput refclkin_p, refclkin_n,\noutput [7:0] dataout,\noutput clkout);"}
{"task_id": 883, "completion": "module system_zed_hdmi_0_0(clk, clk_x2, clk_100, active, hsync, vsync, rgb888, hdmi_clk, hdmi_hsync, hdmi_vsync, hdmi_d, hdmi_de, hdmi_scl, hdmi_sda);"}
{"task_id": 771, "completion": "module peg_l2_fcs_gen #(  parameter DATA_W = 8,  parameter CRC_INIT_VAL = 32'd0 )(  input clk,  input rst_n,  input fcs_calc_rst,  input fcs_calc_valid,  input [DATA_W-1:0] fcs_calc_data,  output [31:0] fcs );"}
{"task_id": 920, "completion": "module nat_indux (\n    input wire [31:0] n, \n    output wire p_n,\n    output wire p_n_plus_1\n);"}
{"task_id": 545, "completion": "module behavior_equivalence #(parameter DATA_WIDTH = 8)(parameter FIFO_DEPTH = 16)(parameter STATE_WIDTH = 32)(parameter VAR_WIDTH = 8)(parameter AEXP_WIDTH = 32)(parameter BEXP_WIDTH = 1)(parameter COM_WIDTH = 32)(parameter ID_WIDTH = 8)(parameter BOOL_DEPTH = 8)(parameter AEXPR_ARCH = 0)(parameter BEXPR_ARCH = 0)(parameter COM_ARCH = 0)(parameter CMD_DEPTH = 8)(parameter LOOP_DEPTH = 8)(parameter IF_DEPTH = 8)(parameter WHILE_DEPTH = 8)(parameter HAVOC_DEPTH = 8)(parameter ASSIGN_DEPTH = 8)(parameter SEQ_DEPTH = 8)()(\n\tinput wire clk,\n\tinput wire rst_n,\n\tinput wire wr_en,\n\tinput wire rd_en,\n\tinput wire [DATA_WIDTH-1:0] data_in,\n\toutput wire [DATA_WIDTH-1:0] data_out,\n\toutput wire full,\n\toutput wire empty\n);"}
{"task_id": 1055, "completion": "module sky130_fd_sc_hdll__nor2b ( Y, A, B_N, VPWR, VGND, VPB, VNB );"}
{"task_id": 1076, "completion": "module sky130_fd_sc_lp__udp_dff$NSR (\n    input  D,\n    output Q,\n    input  RESET,\n    input  SET,\n    input  CLK_N\n);"}
{"task_id": 977, "completion": "module select_if_active_LUT (\n        input wire s1,\n        input wire s2,\n        input wire [15:0] d1,\n        input wire [15:0] d2,\n        input wire c1,\n        input wire c2,\n        output reg [15:0] od,\n        output reg os,\n        output reg oc,\n        input wire CLK\n    );"}
{"task_id": 922, "completion": "module velocityControlHdl_Maintain_Range(\n    input signed [35:0] In1,\n    output signed [17:0] Out1\n);"}
{"task_id": 704, "completion": "module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix( input clka, input ena, input [0:0]wea, input [10:0]addra, input [19:0]dina, output [19:0]douta);"}
{"task_id": 211, "completion": "module wb_dsp_equations_top (\n   output wire [31:0] eq_adr_o,\n   output wire [31:0] eq_dat_o,\n   output wire [3:0] eq_sel_o,\n   output wire eq_we_o,\n   output wire eq_cyc_o,\n   output wire eq_stb_o,\n   output wire [2:0] eq_cti_o,\n   output wire [1:0] eq_bte_o,\n   output wire equation_done,\n   input wire wb_clk,\n   input wire wb_rst,\n   input wire [31:0] wb_dat_i,\n   input wire wb_ack_i,\n   input wire wb_err_i,\n   input wire wb_rty_i,\n   input wire [31:0] base_address,\n   input wire [7:0] equation_enable\n);"}
{"task_id": 320, "completion": "module pcieCore_pcie_top # (\n  parameter        PIPE_PIPELINE_STAGES = 0,\n  parameter [11:0] AER_BASE_PTR = 12'h140,\n  parameter        AER_CAP_ECRC_CHECK_CAPABLE = \"FALSE\",\n  parameter        DEV_CAP_ROLE_BASED_ERROR = \"TRUE\",\n  ...\n)(\n  output                                     user_clk_out,\n  input                                      user_reset,\n  input                                      user_lnk_up,\n  ...\n);"}
{"task_id": 1130, "completion": "module top;\n  reg y, a, b, flip, hidden;\n  reg pass;\n  function f_and (input i1, i2);\n    reg  partial;\n    begin\n      partial = i1 & i2;\n      f_and = partial | hidden;\n    end\n  endfunction\n  reg intr;\n  always_comb begin\n    intr = flip;\n    y = f_and(a, b) ^ intr;\n  end\n  initial begin\n    pass = 1'b1;\n    flip = 1'b0;\n    hidden = 1'b0;\n    a = 1'b0;\n    b = 1'b0;\n    #1;\n    if (y !== 1'b0) begin\n      $display(\"FAILED: a=1'b0, b=1'b0, hidden=1'b0, expected 1'b0, got %b\", y);\n      pass = 1'b0;\n    end"}
{"task_id": 630, "completion": "module sf_spec_properties #( \n    candidate: Set\n) (\n    input wire [0:0] e, \n    input wire [0:0] eliminated\n);"}
{"task_id": 146, "completion": "module channelizer_xlaxififogen(\n s_aclk,\n ce,\n aresetn,\n axis_underflow,\n axis_overflow,\n axis_data_count,\n axis_prog_full_thresh,\n axis_prog_empty_thresh,\n s_axis_tdata,\n s_axis_tstrb,\n s_axis_tkeep,\n s_axis_tlast,\n s_axis_tid,\n s_axis_tdest,\n s_axis_tuser,\n s_axis_tvalid,\n s_axis_tready,\n m_axis_tdata,\n m_axis_tstrb,\n m_axis_tkeep,\n m_axis_tlast,\n m_axis_tid,\n m_axis_tdest,\n m_axis_tuser,\n m_axis_tvalid,\n m_axis_tready);\n parameter core_name0 = \"\";\n parameter has_aresetn = -1;\n parameter tdata_width = -1;\n parameter tdest_width = -1;\n parameter tstrb_width = -1;\n parameter tkeep_width = -1;\n parameter tid_width = -1;\n parameter tuser_width = -1;\n parameter depth_bits = -1;\n input ce;\n input s_aclk;\n input aresetn;\n output axis_underflow;\n output axis_overflow;\n output [depth_bits-1:0] axis_data_count;\n input  [depth_bits-2:0] axis_prog_full_thresh;\n input  [depth_bits-2:0] axis_prog_empty_thresh;\n input  [tdata_width-1:0] s_axis_tdata;\n input  [tstrb_width-1:0] s_axis_tstrb;\n input  [tkeep_width-1:0] s_axis_tkeep;\n input                     s_axis_tlast;\n input  [tid_width-1:0] s_axis_tid;\n input  [tdest_width-1:0] s_axis_tdest;\n input  [tuser_width-1:0] s_axis_tuser;\n input                     s_axis_tvalid;\n output                    s_axis_tready;\n output  [tdata_width-1:0] m_axis_tdata;\n output  [tstrb_width-1:0] m_axis_tstrb;\n output  [tkeep_width-1:0] m_axis_tkeep;\n output                        m_axis_tlast;\n output  [tid_width-1:0] m_axis_tid;\n output  [tdest_width-1:0] m_axis_tdest;\n output  [tuser_width-1:0] m_axis_tuser;\n output                        m_axis_tvalid;\n input                 m_axis_tready;"}
{"task_id": 1199, "completion": "module sky130_fd_sc_hs__or4b (    output X,    input A,    input B,    input C,    input D_N,    input VPWR,    input VGND);"}
{"task_id": 1314, "completion": "module add12 (\n  clk, ce, a, b, s\n);\n  input clk;\n  input ce;\n  input [11 : 0] a;\n  input [11 : 0] b;\n  output [11 : 0] s;"}
{"task_id": 1247, "completion": "module m_port_ultra_top ( input CLK100MHZ, input [15:0] SW, input BTNC, BTNU, BTND, BTNL, BTNR, input CPU_RESETN, output [15:0] LED, output CA, output CB, output CC, output CD, output CE, output CF, output CG, output DP, output [7:0] AN );"}
{"task_id": 19, "completion": "module blk_mem_gen_v8_3_5 #(\n  parameter C_CORENAME = \"blk_mem_gen_v8_3_5\",\n  parameter C_FAMILY = \"virtex7\",\n  parameter C_XDEVICEFAMILY = \"virtex7\",\n  parameter C_INTERFACE_TYPE = 0,\n  parameter C_AXI_TYPE = 0,\n  parameter C_AXI_SLAVE_TYPE = 0,\n  parameter C_MEM_TYPE = 2,\n  parameter C_BYTE_SIZE = 9,\n  parameter C_ALGORITHM = 1,\n  parameter C_PRIM_TYPE = 3,\n  parameter C_LOAD_INIT_FILE = 0,\n  parameter C_INIT_FILE_NAME = \"\",\n  parameter C_INIT_FILE = \"\",\n  parameter C_USE_DEFAULT_DATA = 0,\n  parameter C_DEFAULT_DATA = \"0\",\n  parameter C_HAS_RSTA = 0,\n  parameter C_RST_PRIORITY_A = \"CE\",\n  parameter C_RSTRAM_A = 0,\n  parameter C_INITA_VAL = \"0\",\n  parameter C_HAS_ENA = 1,\n  parameter C_HAS_REGCEA = 0,\n  parameter C_USE_BYTE_WEA = 0,\n  parameter C_WEA_WIDTH = 1,\n  parameter C_WRITE_MODE_A = \"WRITE_FIRST\",\n  parameter C_WRITE_WIDTH_A = 32,\n  parameter C_READ_WIDTH_A = 32,\n  parameter C_WRITE_DEPTH_A = 64,\n  parameter C_READ_DEPTH_A = 64,\n  parameter C_ADDRA_WIDTH = 5,\n  parameter C_HAS_RSTB = 0,\n  parameter C_RST_PRIORITY_B = \"CE\",\n  parameter C_RSTRAM_B = 0,\n  parameter C_INITB_VAL = \"\",\n  parameter C_HAS_ENB = 1,\n  parameter C_HAS_REGCEB = 0,\n  parameter C_USE_BYTE_WEB = 0,\n  parameter C_WEB_WIDTH = 1,\n  parameter C_WRITE_MODE_B = \"WRITE_FIRST\",\n  parameter C_WRITE_WIDTH_B = 32,\n  parameter C_READ_WIDTH_B = 32,\n  parameter C_WRITE_DEPTH_B = 64,\n  parameter C_READ_DEPTH_B = 64,\n  parameter C_ADDRB_WIDTH = 5,\n  parameter C_HAS_MEM_OUTPUT_REGS_A = 0,\n  parameter C_HAS_MEM_OUTPUT_REGS_B = 0,\n  parameter C_HAS_MUX_OUTPUT_REGS_A = 0,\n  parameter C_HAS_MUX_OUTPUT_REGS_B = 0,\n  parameter C_HAS_SOFTECC_INPUT_REGS_A = 0,\n  parameter C_HAS_SOFTECC_OUTPUT_REGS_B = 0,\n  parameter C_MUX_PIPELINE_STAGES = 0,\n  parameter C_USE_SOFTECC = 0,\n  parameter C_USE_ECC = 0)\n(\n  input clka,\n  input rsta,\n  input ena,\n  input regcea,\n  input [C_WEA_WIDTH-1:0] wea,\n  input [C_ADDRA_WIDTH-1:0] addra,\n  input [C_WRITE_WIDTH_A-1:0] dina,\n  output [C_READ_WIDTH_A-1:0] douta,\n  input clkb,\n  input rstb,\n  input enb,\n  input regceb,\n  input [C_WEB_WIDTH-1:0] web,\n  input [C_ADDRB_WIDTH-1:0] addrb,\n  input [C_WRITE_WIDTH_B-1:0] dinb,\n  output [C_READ_WIDTH_B-1:0] doutb,\n  input injectsbiterr,\n  input injectdbiterr,\n  output sbiterr,\n  output dbiterr,\n  output [C_ADDRB_WIDTH-1:0] rdaddrecc,\n  input eccpipece,\n  input sleep);"}
{"task_id": 153, "completion": "module hs_demo #(\n  parameter BUFFER_WIDTH             = 10,\n  parameter FIFO_WIDTH               = 10\n)(\n  input                             clk,\n  input                             rst,\n\n  output                            o_idle,\n\n  input                             i_bram_wea,\n  input   [BUFFER_WIDTH - 1:0]      i_bram_addr,\n  input   [31:0]                    i_bram_din,\n  output  [31:0]                    o_bram_dout,\n\n  input                             i_write_enable,\n  input   [63:0]                    i_write_addr,\n  input                             i_write_addr_inc,\n  input                             i_write_addr_dec,\n  output                            o_write_finished,\n  input   [23:0]                    i_write_count,\n  input                             i_write_flush,\n\n  output  [1:0]                     o_write_ready,\n  input   [1:0]                     i_write_activate,\n  output  [23:0]                    o_write_size,\n  input                             i_write_strobe,\n  input   [31:0]                    i_write_data,\n\n  input                             i_read_enable,\n  input   [63:0]                    i_read_addr,\n  input                             i_read_addr_inc,\n  input                             i_read_addr_dec,\n  output                            o_read_busy,\n  output                            o_read_error,\n  input   [23:0]                    i_read_count,\n  input                             i_read_flush,\n\n  output                            o_read_ready,\n  input                             i_read_activate,\n  output  [23:0]                    o_read_size,\n  output  [31:0]                    o_read_data,\n  input                             i_read_strobe\n);"}
{"task_id": 89, "completion": "module blk_mem_gen_v8_2 #(\n    parameter C_CORENAME = \"blk_mem_gen_v8_2\",\n    parameter C_FAMILY = \"virtex7\",\n    parameter C_XDEVICEFAMILY = \"virtex7\",\n    parameter C_INTERFACE_TYPE = 0,\n    parameter C_USE_BRAM_BLOCK = 0,\n    parameter C_AXI_TYPE = 0,\n    parameter C_AXI_SLAVE_TYPE = 0,\n    parameter C_HAS_AXI_ID = 0,\n    parameter C_AXI_ID_WIDTH = 4,\n    parameter C_MEM_TYPE = 2,\n    parameter C_BYTE_SIZE = 9,\n    parameter C_ALGORITHM = 1,\n    parameter C_PRIM_TYPE = 3,\n    parameter C_LOAD_INIT_FILE = 0,\n    parameter C_INIT_FILE_NAME = \"\",\n    parameter C_INIT_FILE = \"\",\n    parameter C_USE_DEFAULT_DATA = 0,\n    parameter C_DEFAULT_DATA = \"0\",\n    parameter C_HAS_RSTA = 0,\n    parameter C_RST_PRIORITY_A = \"CE\",\n    parameter C_RSTRAM_A = 0,\n    parameter C_INITA_VAL = \"0\",\n    parameter C_HAS_ENA = 1,\n    parameter C_HAS_REGCEA = 0,\n    parameter C_USE_BYTE_WEA = 0,\n    parameter C_WEA_WIDTH = 1,\n    parameter C_WRITE_MODE_A = \"WRITE_FIRST\",\n    parameter C_WRITE_WIDTH_A = 32,\n    parameter C_READ_WIDTH_A = 32,\n    parameter C_WRITE_DEPTH_A = 64,\n    parameter C_READ_DEPTH_A = 64,\n    parameter C_ADDRA_WIDTH = 5,\n    parameter C_HAS_RSTB = 0,\n    parameter C_RST_PRIORITY_B = \"CE\",\n    parameter C_RSTRAM_B = 0,\n    parameter C_INITB_VAL = \"\",\n    parameter C_HAS_ENB = 1,\n    parameter C_HAS_REGCEB = 0,\n    parameter C_USE_BYTE_WEB = 0,\n    parameter C_WEB_WIDTH = 1,\n    parameter C_WRITE_MODE_B = \"WRITE_FIRST\",\n    parameter C_WRITE_WIDTH_B = 32,\n    parameter C_READ_WIDTH_B = 32,\n    parameter C_WRITE_DEPTH_B = 64,\n    parameter C_READ_DEPTH_B = 64,\n    parameter C_ADDRB_WIDTH = 5,\n    parameter C_HAS_MEM_OUTPUT_REGS_A = 0,\n    parameter C_HAS_MEM_OUTPUT_REGS_B = 0,\n    parameter C_HAS_MUX_OUTPUT_REGS_A = 0,\n    parameter C_HAS_MUX_OUTPUT_REGS_B = 0,\n    parameter C_HAS_SOFTECC_INPUT_REGS_A = 0,\n    parameter C_HAS_SOFTECC_OUTPUT_REGS_B = 0,\n    parameter C_MUX_PIPELINE_STAGES = 0,\n    parameter C_USE_SOFTECC = 0,\n    parameter C_USE_ECC = 0,\n    parameter C_HAS_INJECTERR = 0,\n    parameter C_COMMON_CLK = 1,\n    parameter C_DISABLE_WARN_BHV_COLL = 0,\n    parameter C_DISABLE_WARN_BHV_RANGE = 0\n)(\n    input clka,\n    input rsta,\n    input ena,\n    input regcea,\n    input [C_WEA_WIDTH-1:0] wea,\n    input [C_ADDRA_WIDTH-1:0] addra,\n    input [C_WRITE_WIDTH_A-1:0] dina,\n    output [C_READ_WIDTH_A-1:0] douta,\n    input clkb,\n    input rstb,\n    input enb,\n    input regceb,\n    input [C_WEB_WIDTH-1:0] web,\n    input [C_ADDRB_WIDTH-1:0] addrb,\n    input [C_WRITE_WIDTH_B-1:0] dinb,\n    output [C_READ_WIDTH_B-1:0] doutb,\n    input injectsbiterr,\n    input injectdbiterr,\n    output sbiterr,\n    output dbiterr,\n    output [C_ADDRB_WIDTH-1:0] rdaddrecc,\n    input eccpipece,\n    input sleep\n);"}
{"task_id": 209, "completion": "module mkIQADCWorker(\n        input CLK_sys0_clk,\n        input RST_N_sys0_rst,\n        input CLK_adc_clock,\n        input RST_N_adc_reset,\n        input CLK_adcCaptureClk,\n        input wciS0_Clk,\n        input wciS0_MReset_n,\n        input [2 : 0] wciS0_MCmd,\n        input wciS0_MAddrSpace,\n        input [3 : 0] wciS0_MByteEn,\n        input [31 : 0] wciS0_MAddr,\n        input [31 : 0] wciS0_MData,\n        output [1 : 0] wciS0_SResp,\n        output [31 : 0] wciS0_SData,\n        output wciS0_SThreadBusy,\n        output [1 : 0] wciS0_SFlag,\n        input [1 : 0] wciS0_MFlag,\n        input [66 : 0] wtiS0_req,\n        output wtiS0_SThreadBusy,\n        output wtiS0_SReset_n,\n        output [2 : 0] wsiM0_MCmd,\n        output wsiM0_MReqLast,\n        output wsiM0_MBurstPrecise,\n        output [11 : 0] wsiM0_MBurstLength,\n        output [31 : 0] wsiM0_MData,\n        output [3 : 0] wsiM0_MByteEn,\n        output [7 : 0] wsiM0_MReqInfo,\n        output wsiM0_MReset_n,\n        output adc_oe,\n        input [13 : 0] adc_da_i,\n        input [13 : 0] adc_db_i,\n        output adc_sclkgate,\n        output adc_resetp,\n        output adc_sen,\n        output adc_smosi,\n        input adc_smiso_i,\n        output CLK_adc_sclk,\n        output CLK_GATE_adc_sclk,\n        output CLK_adc_sclkn,\n        output CLK_GATE_adc_sclkn,\n        output CLK_adcSdrClk,\n        output CLK_GATE_adcSdrClk,\n        output RST_N_adc_rst,\n        output RST_N_adcSdrRst);"}
{"task_id": 1207, "completion": "module syn2(clock, reset, in1, in2, in3, in4, in5, out_1, out_2, out_3, out_4);"}
{"task_id": 1377, "completion": "module relation_definition #( \n        parameter RELATION_WIDTH = 8 \n    )( \n        input wire clk, \n        input wire rst_n, \n        input wire wr_en, \n        input wire rd_en, \n        input wire [RELATION_WIDTH-1:0] data_in, \n        output wire [RELATION_WIDTH-1:0] data_out, \n        output wire full, \n        output wire empty \n    );"}
{"task_id": 1255, "completion": "module altpcie_serdes_2agx_x1d_gen1_08p (input cal_blk_clk, input [0:0] gxb_powerdown, input [0:0] pipe8b10binvpolarity, input pll_inclk, input [1:0] powerdn, input [0:0] rx_analogreset, input [0:0] rx_cruclk, input [0:0] rx_datain, input [0:0] rx_digitalreset, input [0:0] tx_ctrlenable, input [7:0] tx_datain, input [0:0] tx_detectrxloop, input [0:0] tx_digitalreset, input [0:0] tx_forcedispcompliance, input [0:0] tx_forceelecidle, output [0:0] pipedatavalid, output [0:0] pipeelecidle, output [0:0] pipephydonestatus, output [2:0] pipestatus, output [0:0] pll_locked, output [0:0] rx_ctrldetect, output [7:0] rx_dataout, output [0:0] rx_freqlocked, output [0:0] rx_patterndetect, output [0:0] rx_pll_locked, output [0:0] rx_syncstatus, output [0:0] tx_clkout, output [0:0] tx_dataout);"}
{"task_id": 1430, "completion": "module RecursiveKOA\n   #(parameter SW = 24,\n    parameter Opt_FPGA_ASIC=1)  \n\t(\n    input wire clk,\n    input wire rst,\n    input wire load_b_i,\n    input wire [SW-1:0] Data_A_i,\n    input wire [SW-1:0] Data_B_i,\n    output wire [2*SW-1:0] sgf_result_o\n    );"}
{"task_id": 1465, "completion": "module wb_ram #(\n        parameter DATA_WIDTH = 32,\n        parameter ADDR_WIDTH = 16,\n        parameter SELECT_WIDTH = 4\n    )(\n        input wire clk,\n        input wire [ADDR_WIDTH-1:0] adr_i,\n        input wire [DATA_WIDTH-1:0] dat_i,\n        output wire [DATA_WIDTH-1:0] dat_o,\n        input wire we_i,\n        input wire [SELECT_WIDTH-1:0] sel_i,\n        input wire stb_i,\n        output wire ack_o,\n        input wire cyc_i\n    );"}
{"task_id": 1461, "completion": "module naturals (\n        input wire [WIDTH-1:0] n,\n        output wire even\n    );"}
{"task_id": 52, "completion": "module axi_protocol_converter_v2_1_axi3_conv #(\n   parameter C_FAMILY = \"none\",\n   parameter integer C_AXI_ID_WIDTH = 1,\n   parameter integer C_AXI_ADDR_WIDTH = 32,\n   parameter integer C_AXI_DATA_WIDTH = 32,\n   parameter integer C_AXI_SUPPORTS_USER_SIGNALS = 0,\n   parameter integer C_AXI_AWUSER_WIDTH = 1,\n   parameter integer C_AXI_ARUSER_WIDTH = 1,\n   parameter integer C_AXI_WUSER_WIDTH = 1,\n   parameter integer C_AXI_RUSER_WIDTH = 1,\n   parameter integer C_AXI_BUSER_WIDTH = 1,\n   parameter integer C_AXI_SUPPORTS_WRITE = 1,\n   parameter integer C_AXI_SUPPORTS_READ = 1,\n   parameter integer C_SUPPORT_SPLITTING = 1,\n   parameter integer C_SUPPORT_BURSTS = 1,\n   parameter integer C_SINGLE_THREAD = 1\n)(\n   input wire ACLK,\n   input wire ARESETN,\n   input  wire [C_AXI_ID_WIDTH-1:0] S_AXI_AWID,\n   input  wire [C_AXI_ADDR_WIDTH-1:0] S_AXI_AWADDR,\n   input  wire [8-1:0] S_AXI_AWLEN,\n   input  wire [3-1:0] S_AXI_AWSIZE,\n   input  wire [2-1:0] S_AXI_AWBURST,\n   input  wire [1-1:0] S_AXI_AWLOCK,\n   input  wire [4-1:0] S_AXI_AWCACHE,\n   input  wire [3-1:0] S_AXI_AWPROT,\n   input  wire [4-1:0] S_AXI_AWQOS,\n   input  wire [C_AXI_AWUSER_WIDTH-1:0] S_AXI_AWUSER,\n   input  wire S_AXI_AWVALID,\n   output wire S_AXI_AWREADY,\n   input  wire [C_AXI_DATA_WIDTH-1:0] S_AXI_WDATA,\n   input  wire [C_AXI_DATA_WIDTH/8-1:0] S_AXI_WSTRB,\n   input  wire S_AXI_WLAST,\n   input  wire [C_AXI_WUSER_WIDTH-1:0] S_AXI_WUSER,\n   input  wire S_AXI_WVALID,\n   output wire S_AXI_WREADY,\n   output wire [C_AXI_ID_WIDTH-1:0] S_AXI_BID,\n   output wire [2-1:0] S_AXI_BRESP,\n   output wire [C_AXI_BUSER_WIDTH-1:0] S_AXI_BUSER,\n   output wire S_AXI_BVALID,\n   input  wire S_AXI_BREADY,\n   input  wire [C_AXI_ID_WIDTH-1:0] S_AXI_ARID,\n   input  wire [C_AXI_ADDR_WIDTH-1:0] S_AXI_ARADDR,\n   input  wire [8-1:0] S_AXI_ARLEN,\n   input  wire [3-1:0] S_AXI_ARSIZE,\n   input  wire [2-1:0] S_AXI_ARBURST,\n   input  wire [1-1:0] S_AXI_ARLOCK,\n   input  wire [4-1:0] S_AXI_ARCACHE,\n   input  wire [3-1:0] S_AXI_ARPROT,\n   input  wire [4-1:0] S_AXI_ARQOS,\n   input  wire [C_AXI_ARUSER_WIDTH-1:0] S_AXI_ARUSER,\n   input  wire S_AXI_ARVALID,\n   output wire S_AXI_ARREADY,\n   output wire [C_AXI_ID_WIDTH-1:0] S_AXI_RID,\n   output wire [C_AXI_DATA_WIDTH-1:0] S_AXI_RDATA,\n   output wire [2-1:0] S_AXI_RRESP,\n   output wire S_AXI_RLAST,\n   output wire [C_AXI_RUSER_WIDTH-1:0] S_AXI_RUSER,\n   output wire S_AXI_RVALID,\n   input  wire S_AXI_RREADY,\n   output wire [C_AXI_ID_WIDTH-1:0] M_AXI_AWID,\n   output wire [C_AXI_ADDR_WIDTH-1:0] M_AXI_AWADDR,\n   output wire [4-1:0] M_AXI_AWLEN,\n   output wire [3-1:0] M_AXI_AWSIZE,\n   output wire [2-1:0] M_AXI_AWBURST,\n   output wire [2-1:0] M_AXI_AWLOCK,\n   output wire [4-1:0] M_AXI_AWCACHE,\n   output wire [3-1:0] M_AXI_AWPROT,\n   output wire [4-1:0] M_AXI_AWQOS,\n   output wire [C_AXI_AWUSER_WIDTH-1:0] M_AXI_AWUSER,\n   output wire M_AXI_AWVALID,\n   input  wire M_AXI_AWREADY,\n   output wire [C_AXI_ID_WIDTH-1:0] M_AXI_WID,\n   output wire [C_AXI_DATA_WIDTH-1:0] M_AXI_WDATA,\n   output wire [C_AXI_DATA_WIDTH/8-1:0] M_AXI_WSTRB,\n   output wire M_AXI_WLAST,\n   output wire [C_AXI_WUSER_WIDTH-1:0] M_AXI_WUSER,\n   output wire M_AXI_WVALID,\n   input  wire M_AXI_WREADY,\n   input  wire [C_AXI_ID_WIDTH-1:0] M_AXI_BID,\n   input  wire [2-1:0] M_AXI_BRESP,\n   input  wire [C_AXI_BUSER_WIDTH-1:0] M_AXI_BUSER,\n   input  wire M_AXI_BVALID,\n   output wire M_AXI_BREADY,\n   output wire [C_AXI_ID_WIDTH-1:0] M_AXI_ARID,\n   output wire [C_AXI_ADDR_WIDTH-1:0] M_AXI_ARADDR,\n   output wire [4-1:0] M_AXI_ARLEN,\n   output wire [3-1:0] M_AXI_ARSIZE,\n   output wire [2-1:0] M_AXI_ARBURST,\n   output wire [2-1:0] M_AXI_ARLOCK,\n   output wire [4-1:0] M_AXI_ARCACHE,\n   output wire [3-1:0] M_AXI_ARPROT,\n   output wire [4-1:0] M_AXI_ARQOS,\n   output wire [C_AXI_ARUSER_WIDTH-1:0] M_AXI_ARUSER,\n   output wire M_AXI_ARVALID,\n   input  wire M_AXI_ARREADY,\n   input  wire [C_AXI_ID_WIDTH-1:0] M_AXI_RID,\n   input  wire [C_AXI_DATA_WIDTH-1:0] M_AXI_RDATA,\n   input  wire [2-1:0] M_AXI_RRESP,\n   input  wire M_AXI_RLAST,\n   input  wire [C_AXI_RUSER_WIDTH-1:0] M_AXI_RUSER,\n   input  wire M_AXI_RVALID,\n   output wire M_AXI_RREADY\n);"}
{"task_id": 299, "completion": "module zynq_design_1_system_ila_0 (\n  clk,\n  SLOT_0_AXI_awaddr,\n  SLOT_0_AXI_awvalid,\n  SLOT_0_AXI_awready,\n  SLOT_0_AXI_wdata,\n  SLOT_0_AXI_wstrb,\n  SLOT_0_AXI_wvalid,\n  SLOT_0_AXI_wready,\n  SLOT_0_AXI_bresp,\n  SLOT_0_AXI_bvalid,\n  SLOT_0_AXI_bready,\n  SLOT_0_AXI_araddr,\n  SLOT_0_AXI_arvalid,\n  SLOT_0_AXI_arready,\n  SLOT_0_AXI_rdata,\n  SLOT_0_AXI_rresp,\n  SLOT_0_AXI_rvalid,\n  SLOT_0_AXI_rready,\n  SLOT_1_GPIO_tri_o,\n  SLOT_2_AXI_awid,\n  SLOT_2_AXI_awaddr,\n  SLOT_2_AXI_awlen,\n  SLOT_2_AXI_awsize,\n  SLOT_2_AXI_awburst,\n  SLOT_2_AXI_awlock,\n  SLOT_2_AXI_awcache,\n  SLOT_2_AXI_awprot,\n  SLOT_2_AXI_awqos,\n  SLOT_2_AXI_awvalid,\n  SLOT_2_AXI_awready,\n  SLOT_2_AXI_wdata,\n  SLOT_2_AXI_wstrb,\n  SLOT_2_AXI_wlast,\n  SLOT_2_AXI_wvalid,\n  SLOT_2_AXI_wready,\n  SLOT_2_AXI_bid,\n  SLOT_2_AXI_bresp,\n  SLOT_2_AXI_bvalid,\n  SLOT_2_AXI_bready,\n  SLOT_2_AXI_arid,\n  SLOT_2_AXI_araddr,\n  SLOT_2_AXI_arlen,\n  SLOT_2_AXI_arsize,\n  SLOT_2_AXI_arburst,\n  SLOT_2_AXI_arlock,\n  SLOT_2_AXI_arcache,\n  SLOT_2_AXI_arprot,\n  SLOT_2_AXI_arqos,\n  SLOT_2_AXI_arvalid,\n  SLOT_2_AXI_arready,\n  SLOT_2_AXI_rid,\n  SLOT_2_AXI_rdata,\n  SLOT_2_AXI_rresp,\n  SLOT_2_AXI_rlast,\n  SLOT_2_AXI_rvalid,\n  SLOT_2_AXI_rready,\n  resetn,\n  TRIG_IN_trig,\n  TRIG_IN_ack,\n  TRIG_OUT_trig,\n  TRIG_OUT_ack\n);"}
{"task_id": 1408, "completion": "module mig_7series_v1_8_ui_top #(\n   parameter TCQ = 100,\n   parameter APP_DATA_WIDTH = 256,\n   parameter APP_MASK_WIDTH = 32,\n   parameter BANK_WIDTH = 3,\n   parameter COL_WIDTH = 12,\n   parameter CWL = 5,\n   parameter DATA_BUF_ADDR_WIDTH = 5,\n   parameter ECC = \"OFF\",\n   parameter ECC_TEST = \"OFF\",\n   parameter ORDERING = \"NORM\",\n   parameter nCK_PER_CLK = 2,\n   parameter RANKS = 4,\n   parameter REG_CTRL = \"ON\",\n   parameter RANK_WIDTH = 2,\n   parameter ROW_WIDTH = 16,\n   parameter MEM_ADDR_ORDER = \"BANK_ROW_COLUMN\"\n)(\n  input accept,\n  /*AUTOINPUT*/\n  input [ADDR_WIDTH-1:0] app_addr,\n  input [2:0] app_cmd,\n  input app_en,\n  input app_hi_pri,\n  input [2*nCK_PER_CLK-1:0] app_raw_not_ecc,\n  input app_sz,\n  input [APP_DATA_WIDTH-1:0] app_wdf_data,\n  input app_wdf_end,\n  input [APP_MASK_WIDTH-1:0] app_wdf_mask,\n  input app_wdf_wren,\n  input clk,\n  input [2*nCK_PER_CLK-1:0] ecc_multiple,\n  input [APP_DATA_WIDTH-1:0] rd_data,\n  input [DATA_BUF_ADDR_WIDTH-1:0] rd_data_addr,\n  input rd_data_en,\n  input rd_data_end,\n  input rd_data_offset,\n  input rst,\n  input [DATA_BUF_ADDR_WIDTH-1:0] wr_data_addr,\n  input wr_data_en,\n  input wr_data_offset,\n  /*AUTOOUTPUT*/\n  output [2*nCK_PER_CLK-1:0] app_ecc_multiple_err,\n  output [APP_DATA_WIDTH-1:0] app_rd_data,\n  output app_rd_data_end,\n  output app_rd_data_valid,\n  output app_rdy,\n  output app_wdf_rdy,\n  output [BANK_WIDTH-1:0] bank,\n  output [2:0] cmd,\n  output [COL_WIDTH-1:0] col,\n  output [DATA_BUF_ADDR_WIDTH-1:0] data_buf_addr,\n  output hi_priority,\n  output [RANK_WIDTH-1:0] rank,\n  output [2*nCK_PER_CLK-1:0] raw_not_ecc,\n  output [ROW_WIDTH-1:0] row,\n  output size,\n  output use_addr,\n  output [APP_DATA_WIDTH-1:0] wr_data,\n  output [APP_MASK_WIDTH-1:0] wr_data_mask\n);"}
{"task_id": 1180, "completion": "module ui_rd_data #(parameter TCQ = 100, parameter APP_DATA_WIDTH = 256, parameter ECC = \"OFF\", parameter ORDERING = \"NORM\") (input rst, input clk, output wire ram_init_done_r, output wire [3:0] ram_init_addr, input rd_data_en, input [3:0] rd_data_addr, input rd_data_offset, input rd_data_end, input [APP_DATA_WIDTH-1:0] rd_data, input [3:0] ecc_multiple, input rd_accepted, output reg app_rd_data_valid, output reg app_rd_data_end, output reg [APP_DATA_WIDTH-1:0] app_rd_data, output wire [3:0] app_ecc_multiple_err, output wire rd_buf_full, output wire [3:0] rd_data_buf_addr_r);"}
{"task_id": 1493, "completion": "module clock_divider(\n    input clk,\n    input rst,\n    output reg clk_div\n);"}
{"task_id": 1193, "completion": "module PmodOLEDrgb_v1_0 #(\n\tparameter integer C_AXI_LITE_SPI_DATA_WIDTH = 32,\n\tparameter integer C_AXI_LITE_SPI_ADDR_WIDTH = 7,\n\tparameter integer C_AXI_LITE_GPIO_DATA_WIDTH = 32,\n\tparameter integer C_AXI_LITE_GPIO_ADDR_WIDTH = 9\n)(\n\tinput wire ext_spi_clk,\n\tinput wire pmod_out_pin10_i,\n\toutput wire pmod_out_pin10_o,\n\toutput wire pmod_out_pin10_t,\n\tinput wire pmod_out_pin1_i,\n\toutput wire pmod_out_pin1_o,\n\toutput wire pmod_out_pin1_t,\n\tinput wire pmod_out_pin2_i,\n\toutput wire pmod_out_pin2_o,\n\toutput wire pmod_out_pin2_t,\n\tinput wire pmod_out_pin3_i,\n\toutput wire pmod_out_pin3_o,\n\toutput wire pmod_out_pin3_t,\n\tinput wire pmod_out_pin4_i,\n\toutput wire pmod_out_pin4_o,\n\toutput wire pmod_out_pin4_t,\n\tinput wire pmod_out_pin7_i,\n\toutput wire pmod_out_pin7_o,\n\toutput wire pmod_out_pin7_t,\n\tinput wire pmod_out_pin8_i,\n\toutput wire pmod_out_pin8_o,\n\toutput wire pmod_out_pin8_t,\n\tinput wire pmod_out_pin9_i,\n\toutput wire pmod_out_pin9_o,\n\toutput wire pmod_out_pin9_t,\n\tinput wire  s_axi_aclk,\n\tinput wire  s_axi_aclk2,\n\tinput wire  s_axi_aresetn,\n\tinput wire [C_AXI_LITE_SPI_ADDR_WIDTH-1 : 0] axi_lite_spi_awaddr,\n\tinput wire [2 : 0] axi_lite_spi_awprot,\n\tinput wire  axi_lite_spi_awvalid,\n\toutput wire  axi_lite_spi_awready,\n\tinput wire [C_AXI_LITE_SPI_DATA_WIDTH-1 : 0] axi_lite_spi_wdata,\n\tinput wire [(C_AXI_LITE_SPI_DATA_WIDTH/8)-1 : 0] axi_lite_spi_wstrb,\n\tinput wire  axi_lite_spi_wvalid,\n\toutput wire  axi_lite_spi_wready,\n\toutput wire [1 : 0] axi_lite_spi_bresp,\n\toutput wire  axi_lite_spi_bvalid,\n\tinput wire  axi_lite_spi_bready,\n\tinput wire [C_AXI_LITE_SPI_ADDR_WIDTH-1 : 0] axi_lite_spi_araddr,\n\tinput wire [2 : 0] axi_lite_spi_arprot,\n\tinput wire  axi_lite_spi_arvalid,\n\toutput wire  axi_lite_spi_arready,\n\toutput wire [C_AXI_LITE_SPI_DATA_WIDTH-1 : 0] axi_lite_spi_rdata,\n\toutput wire [1 : 0] axi_lite_spi_rresp,\n\toutput wire  axi_lite_spi_rvalid,\n\tinput wire  axi_lite_spi_rready,\n\tinput wire [C_AXI_LITE_GPIO_ADDR_WIDTH-1 : 0] axi_lite_gpio_awaddr,\n\tinput wire [2 : 0] axi_lite_gpio_awprot,\n\tinput wire  axi_lite_gpio_awvalid,\n\toutput wire  axi_lite_gpio_awready,\n\tinput wire [C_AXI_LITE_GPIO_DATA_WIDTH-1 : 0] axi_lite_gpio_wdata,\n\tinput wire [(C_AXI_LITE_GPIO_DATA_WIDTH/8)-1 : 0] axi_lite_gpio_wstrb,\n\tinput wire  axi_lite_gpio_wvalid,\n\toutput wire  axi_lite_gpio_wready,\n\toutput wire [1 : 0] axi_lite_gpio_bresp,\n\toutput wire  axi_lite_gpio_bvalid,\n\tinput wire  axi_lite_gpio_bready,\n\tinput wire [C_AXI_LITE_GPIO_ADDR_WIDTH-1 : 0] axi_lite_gpio_araddr,\n\tinput wire [2 : 0] axi_lite_gpio_arprot,\n\tinput wire  axi_lite_gpio_arvalid,\n\toutput wire  axi_lite_gpio_arready,\n\toutput wire [C_AXI_LITE_GPIO_DATA_WIDTH-1 : 0] axi_lite_gpio_rdata,\n\toutput wire [1 : 0] axi_lite_gpio_rresp,\n\toutput wire  axi_lite_gpio_rvalid,\n\tinput wire  axi_lite_gpio_rready\n);"}
{"task_id": 357, "completion": "module mc_cache(\n    input mclock,\n    input mc_rstn,\n    input [3:0] mc_dev_sel,\n    input mc_local_write_req,\n    input mc_local_read_req,\n    input mc_local_burstbegin,\n    input [23:0] mc_local_address,\n    input [127:0] mc_local_wdata,\n    input [15:0] mc_local_be,\n    input [5:0] mc_local_size,\n    output mc_local_ready,\n    output reg [127:0] mc_local_rdata,\n    output reg mc_local_rdata_valid,\n    input ddr3_ready,\n    input ddr3_rdata_valid,\n    input [255:0] ddr3_rdata,\n    output reg ddr3_write_req,\n    output reg ddr3_read_req,\n    output reg ddr3_burstbegin,\n    output reg [23:0] ddr3_address,\n    output reg [4:0] ddr3_size,\n    output reg [255:0] ddr3_wdata,\n    output reg [31:0] ddr3_be,\n    output reg ff_rdata_pop,\n    output local_read_empty,\n    output [7:0] data_fifo_used,\n    output [3:0] read_cmd_used,\n    output read_adr_0,\n    output [5:0] read_count_128\n);"}
{"task_id": 1502, "completion": "module altera_int_osc( clkout, oscena); parameter DEVICE_FAMILY = \"MAX 10\"; parameter DEVICE_ID = \"08\"; parameter CLOCK_FREQUENCY = \"dummy\"; output clkout; input oscena; wire wire_clkout; assign clkout = wire_clkout;"}
{"task_id": 1491, "completion": "module hpdmc_ctlif #(                                \n\tparameter csr_addr = 1'b0,                           \n\tparameter sdram_addrdepth = 12                       \n) (                                                     \n\tinput sys_clk,                                        \n\tinput sys_rst,                                        \n\tinput      [ 2:0] csr_a,                             \n\tinput             csr_we,                            \n\tinput      [15:0] csr_di,                            \n\toutput reg [15:0] csr_do,                            \n\toutput reg bypass,                                    \n\toutput reg sdram_rst,                                \n\toutput reg        sdram_cke,                         \n\toutput reg        sdram_cs_n,                       \n\toutput reg        sdram_we_n,                       \n\toutput reg        sdram_cas_n,                      \n\toutput reg        sdram_ras_n,                      \n\toutput reg [sdram_addrdepth-1:0] sdram_adr,         \n\toutput     [ 1:0] sdram_ba,                          \n\toutput reg [2:0] tim_rp,                             \n\toutput reg [2:0] tim_rcd,                            \n\toutput reg tim_cas,                                  \n\toutput reg [10:0] tim_refi,                          \n\toutput reg [3:0] tim_rfc,                            \n\toutput reg [1:0] tim_wr                               \n);"}
{"task_id": 1050, "completion": "module tx1_pcie_host_interface (input clk, input rst, input i_sys_rst, input i_pcie_reset, input i_pcie_per_fifo_sel, input i_pcie_mem_fifo_sel, input i_pcie_dma_fifo_sel, output o_pcie_write_fin, output o_pcie_read_fin, input [31:0] i_pcie_data_size, input [31:0] i_pcie_data_address, input i_pcie_data_fifo_flg, input i_pcie_data_read_flg, input i_pcie_data_write_flg, output o_pcie_interrupt_stb, output [31:0] o_pcie_interrupt_value, output o_pcie_data_clk, input i_pcie_ingress_fifo_rdy, output o_pcie_ingress_fifo_act, input [23:0] i_pcie_ingress_fifo_size, output o_pcie_ingress_fifo_stb, input [31:0] i_pcie_ingress_fifo_data, input i_pcie_ingress_fifo_idle, input [1:0] i_pcie_egress_fifo_rdy, output [1:0] o_pcie_egress_fifo_act, input [23:0] i_pcie_egress_fifo_size, output o_pcie_egress_fifo_stb, output [31:0] o_pcie_egress_fifo_data, input i_master_ready, output o_ih_reset, output o_ih_ready, output [31:0] o_in_command, output [31:0] o_in_address, output [31:0] o_in_data, output [27:0] o_in_data_count, output o_oh_ready, input i_oh_en, input [31:0] i_out_status, input [31:0] i_out_address, input [31:0] i_out_data, input [27:0] i_out_data_count, input [31:0] i_usr_interrupt_value, output o_ddr3_cmd_clk, output o_ddr3_cmd_en, output [2:0] o_ddr3_cmd_instr, output [5:0] o_ddr3_cmd_bl, output [29:0] o_ddr3_cmd_byte_addr, input i_ddr3_cmd_empty, input i_ddr3_cmd_full, output o_ddr3_wr_clk, output o_ddr3_wr_en, output [3:0] o_ddr3_wr_mask, output [31:0] o_ddr3_wr_data, input i_ddr3_wr_full, input i_ddr3_wr_empty, input [6:0] i_ddr3_wr_count, input i_ddr3_wr_underrun, input i_ddr3_wr_error, output o_ddr3_rd_clk, output o_ddr3_rd_en, input [31:0] i_ddr3_rd_data, input i_ddr3_rd_full, input i_ddr3_rd_empty, input [6:0] i_ddr3_rd_count, input i_ddr3_rd_overflow, input i_ddr3_rd_error, input i_idma_enable, input i_idma_flush, input i_idma_activate, output o_idma_ready, input i_idma_stb, output [23:0] o_idma_size, output [31:0] o_idma_data, input i_odma_enable, input i_odma_flush, output [1:0] o_odma_ready, input [1:0] i_odma_activate, input i_odma_stb, output [23:0] o_odma_size, input [31:0] i_odma_data, input [3:0] i_dbg_sm_state, output [31:0] o_debug);"}
{"task_id": 45, "completion": "module altera_avalon_sc_fifo #(\n    parameter SYMBOLS_PER_BEAT = 1,\n    parameter BITS_PER_SYMBOL = 8,\n    parameter FIFO_DEPTH = 16,\n    parameter CHANNEL_WIDTH = 0,\n    parameter ERROR_WIDTH = 0,\n    parameter USE_PACKETS = 0,\n    parameter USE_FILL_LEVEL = 0,\n    parameter USE_STORE_FORWARD = 0,\n    parameter USE_ALMOST_FULL_IF = 0,\n    parameter USE_ALMOST_EMPTY_IF = 0,\n    parameter EMPTY_LATENCY = 3,\n    parameter USE_MEMORY_BLOCKS = 1,\n    parameter DATA_WIDTH = SYMBOLS_PER_BEAT * BITS_PER_SYMBOL,\n    parameter EMPTY_WIDTH = log2ceil(SYMBOLS_PER_BEAT)\n)(\n    input clk,\n    input reset,\n    input [DATA_WIDTH-1:0] in_data,\n    input in_valid,\n    input in_startofpacket,\n    input in_endofpacket,\n    input [((EMPTY_WIDTH>0) ? (EMPTY_WIDTH-1):0) : 0] in_empty,\n    input [((ERROR_WIDTH>0) ? (ERROR_WIDTH-1):0) : 0] in_error,\n    input [((CHANNEL_WIDTH>0) ? (CHANNEL_WIDTH-1):0): 0] in_channel,\n    output in_ready,\n    output [DATA_WIDTH-1:0] out_data,\n    output reg out_valid,\n    output out_startofpacket,\n    output out_endofpacket,\n    output [((EMPTY_WIDTH>0) ? (EMPTY_WIDTH-1):0) : 0] out_empty,\n    output [((ERROR_WIDTH>0) ? (ERROR_WIDTH-1):0) : 0] out_error,\n    output [((CHANNEL_WIDTH>0) ? (CHANNEL_WIDTH-1):0): 0] out_channel,\n    input out_ready,\n    input [(USE_STORE_FORWARD ? 2 : 1) : 0] csr_address,\n    input csr_write,\n    input csr_read,\n    input [31:0] csr_writedata,\n    output reg [31:0] csr_readdata,\n    output wire almost_full_data,\n    output wire almost_empty_data\n);"}
{"task_id": 1504, "completion": "module mult12_8 (\n\tclock,\n\tdataa,\n\tdatab,\n\tresult);\n\n\tinput\t clock;\n\tinput\t[11:0]  dataa;\n\tinput\t[7:0]  datab;\n\toutput\t[19:0]  result;"}
{"task_id": 1232, "completion": "module TimeHoldOver_Qsys_spi_1 (\n                                 // inputs:\n                                  MISO,\n                                  clk,\n                                  data_from_cpu,\n                                  mem_addr,\n                                  read_n,\n                                  reset_n,\n                                  spi_select,\n                                  write_n,\n\n                                 // outputs:\n                                  MOSI,\n                                  SCLK,\n                                  SS_n,\n                                  data_to_cpu,\n                                  dataavailable,\n                                  endofpacket,\n                                  irq,\n                                  readyfordata\n                               ) ;\n\n  output           MOSI;\n  output           SCLK;\n  output           SS_n;\n  output  [ 15: 0] data_to_cpu;\n  output           dataavailable;\n  output           endofpacket;\n  output           irq;\n  output           readyfordata;\n  input            MISO;\n  input            clk;\n  input   [ 15: 0] data_from_cpu;\n  input   [  2: 0] mem_addr;\n  input            read_n;\n  input            reset_n;\n  input            spi_select;\n  input            write_n;"}
{"task_id": 1494, "completion": "module uart(\n   output uart_busy,\n   output uart_tx,\n   input uart_wr_i,\n   input [7:0] uart_dat_i,\n   input sys_clk_i,\n   input sys_rst_i\n);"}
{"task_id": 1501, "completion": "module viterbi_decoder (d, cx, clk, reset); output d; input [1:0] cx; input clk; input reset;"}
{"task_id": 1352, "completion": "module altpciexpav_stif_app #(\n    parameter INTENDED_DEVICE_FAMILY = \"Arria V\",\n    parameter CG_AVALON_S_ADDR_WIDTH = 24,\n    parameter CG_COMMON_CLOCK_MODE = 1,\n    ...\n)(\n    input AvlClk_i,\n    input Rstn_i,\n    ...\n);"}
{"task_id": 182, "completion": "module fpga_core #(\n    parameter TARGET = \"XILINX\"\n)(\n    input  wire       clk,\n    input  wire       rst,\n    output wire [1:0] user_led_g,\n    output wire       user_led_r,\n    output wire [1:0] front_led,\n    input  wire [1:0] user_sw,\n    input  wire        qsfp_0_tx_clk_0,\n    input  wire        qsfp_0_tx_rst_0,\n    output wire [63:0] qsfp_0_txd_0,\n    output wire [7:0]  qsfp_0_txc_0,\n    input  wire        qsfp_0_rx_clk_0,\n    input  wire        qsfp_0_rx_rst_0,\n    input  wire [63:0] qsfp_0_rxd_0,\n    input  wire [7:0]  qsfp_0_rxc_0,\n    input  wire        qsfp_0_tx_clk_1,\n    input  wire        qsfp_0_tx_rst_1,\n    output wire [63:0] qsfp_0_txd_1,\n    output wire [7:0]  qsfp_0_txc_1,\n    input  wire        qsfp_0_rx_clk_1,\n    input  wire        qsfp_0_rx_rst_1,\n    input  wire [63:0] qsfp_0_rxd_1,\n    input  wire [7:0]  qsfp_0_rxc_1,\n    input  wire        qsfp_0_tx_clk_2,\n    input  wire        qsfp_0_tx_rst_2,\n    output wire [63:0] qsfp_0_txd_2,\n    output wire [7:0]  qsfp_0_txc_2,\n    input  wire        qsfp_0_rx_clk_2,\n    input  wire        qsfp_0_rx_rst_2,\n    input  wire [63:0] qsfp_0_rxd_2,\n    input  wire [7:0]  qsfp_0_rxc_2,\n    input  wire        qsfp_0_tx_clk_3,\n    input  wire        qsfp_0_tx_rst_3,\n    output wire [63:0] qsfp_0_txd_3,\n    output wire [7:0]  qsfp_0_txc_3,\n    input  wire        qsfp_0_rx_clk_3,\n    input  wire        qsfp_0_rx_rst_3,\n    input  wire [63:0] qsfp_0_rxd_3,\n    input  wire [7:0]  qsfp_0_rxc_3,\n    input  wire        qsfp_1_tx_clk_0,\n    input  wire        qsfp_1_tx_rst_0,\n    output wire [63:0] qsfp_1_txd_0,\n    output wire [7:0]  qsfp_1_txc_0,\n    input  wire        qsfp_1_rx_clk_0,\n    input  wire        qsfp_1_rx_rst_0,\n    input  wire [63:0] qsfp_1_rxd_0,\n    input  wire [7:0]  qsfp_1_rxc_0,\n    input  wire        qsfp_1_tx_clk_1,\n    input  wire        qsfp_1_tx_rst_1,\n    output wire [63:0] qsfp_1_txd_1,\n    output wire [7:0]  qsfp_1_txc_1,\n    input  wire        qsfp_1_rx_clk_1,\n    input  wire        qsfp_1_rx_rst_1,\n    input  wire [63:0] qsfp_1_rxd_1,\n    input  wire [7:0]  qsfp_1_rxc_1,\n    input  wire        qsfp_1_tx_clk_2,\n    input  wire        qsfp_1_tx_rst_2,\n    output wire [63:0] qsfp_1_txd_2,\n    output wire [7:0]  qsfp_1_txc_2,\n    input  wire        qsfp_1_rx_clk_2,\n    input  wire        qsfp_1_rx_rst_2,\n    input  wire [63:0] qsfp_1_rxd_2,\n    input  wire [7:0]  qsfp_1_rxc_2,\n    input  wire        qsfp_1_tx_clk_3,\n    input  wire        qsfp_1_tx_rst_3,\n    output wire [63:0] qsfp_1_txd_3,\n    output wire [7:0]  qsfp_1_txc_3,\n    input  wire        qsfp_1_rx_clk_3,\n    input  wire        qsfp_1_rx_rst_3,\n    input  wire [63:0] qsfp_1_rxd_3,\n    input  wire [7:0]  qsfp_1_rxc_3\n);"}
{"task_id": 1511, "completion": "module FIFO_WxD #(\n\tparameter U_FIFO_WIDTH = 24, \n\tparameter U_FIFO_SQ_DEPTH = 10\n)(\n\tinput wire rst,\n\tinput wire [U_FIFO_WIDTH - 1:0] dataIn,\n\tinput wire wr_en,\n\tinput wire rd_en,\n\toutput wire [U_FIFO_WIDTH - 1:0] dataOut,\n\toutput wire full_flg,\n\toutput wire empty_flg\n);"}
{"task_id": 1495, "completion": "module altera_avalon_st_pipeline_base (\n                                       clk,\n                                       reset,\n                                       in_ready,\n                                       in_valid,\n                                       in_data,\n                                       out_ready,\n                                       out_valid,\n                                       out_data\n                                       );\n\n   parameter  SYMBOLS_PER_BEAT  = 1;\n   parameter  BITS_PER_SYMBOL   = 8;\n   parameter  PIPELINE_READY    = 1;\n   localparam DATA_WIDTH = SYMBOLS_PER_BEAT * BITS_PER_SYMBOL;\n   input clk;\n   input reset;\n   output in_ready;\n   input  in_valid;\n   input [DATA_WIDTH-1:0] in_data;\n   input                  out_ready;\n   output                 out_valid;\n   output [DATA_WIDTH-1:0] out_data;"}
{"task_id": 1486, "completion": "module ctrl_flash #(\n  parameter FAW = 22,             // flash address width\n  parameter FDW = 8,              // flash data width\n  parameter QAW = 22,             // qmem address width\n  parameter QDW = 32,             // qmem data width\n  parameter QSW = QDW/8,          // qmem select width\n  parameter DLY = 3,              // 80ns delay @ 50MHz clock - for S29AL032D70 (70ns access part)\n  parameter BE  = 1               // big endianness - 1 = big endian, 2 = little endian\n)(\n  // system\n  input  wire           clk,\n  input  wire           rst,\n  // config\n  input  wire           boot_sel,\n  // qmem interface\n  input  wire [QAW-1:0] adr,\n  input  wire           cs,\n  input  wire           we,\n  input  wire [QSW-1:0] sel,\n  input  wire [QDW-1:0] dat_w,\n  output reg  [QDW-1:0] dat_r,\n  output reg            ack,\n  output wire           err,\n  // flash interface\n  output reg  [FAW-1:0] fl_adr,\n  output reg            fl_ce_n,\n  output reg            fl_we_n,\n  output reg            fl_oe_n,\n  output reg            fl_rst_n,\n  output wire [FDW-1:0] fl_dat_w,\n  input  wire [FDW-1:0] fl_dat_r\n);"}
{"task_id": 1393, "completion": "module axi_dwidth_converter_v2_1_7_r_downsizer #(\n   parameter         C_FAMILY                         = \"none\", \n   parameter integer C_AXI_ID_WIDTH                   = 1, \n   parameter integer C_S_AXI_DATA_WIDTH               = 64,\n   parameter integer C_M_AXI_DATA_WIDTH               = 32,\n   parameter integer C_S_AXI_BYTES_LOG                = 3,\n   parameter integer C_M_AXI_BYTES_LOG                = 2,\n   parameter integer C_RATIO_LOG                      = 1)\n  (\n   input  wire                                                    ARESET,\n   input  wire                                                    ACLK,\n   input  wire                              cmd_valid,\n   input  wire                              cmd_split,\n   input  wire                              cmd_mirror,\n   input  wire                              cmd_fix,\n   input  wire [C_S_AXI_BYTES_LOG-1:0]      cmd_first_word, \n   input  wire [C_S_AXI_BYTES_LOG-1:0]      cmd_offset,\n   input  wire [C_S_AXI_BYTES_LOG-1:0]      cmd_mask,\n   input  wire [C_M_AXI_BYTES_LOG:0]        cmd_step,\n   input  wire [3-1:0]                      cmd_size,\n   input  wire [8-1:0]                      cmd_length,\n   output wire                              cmd_ready,\n   input  wire [C_AXI_ID_WIDTH-1:0]         cmd_id,\n   output wire [C_AXI_ID_WIDTH-1:0]           S_AXI_RID,\n   output wire [C_S_AXI_DATA_WIDTH-1:0]     S_AXI_RDATA,\n   output wire [2-1:0]                          S_AXI_RRESP,\n   output wire                                                    S_AXI_RLAST,\n   output wire                                                    S_AXI_RVALID,\n   input  wire                                                    S_AXI_RREADY,\n   input  wire [C_M_AXI_DATA_WIDTH-1:0]    M_AXI_RDATA,\n   input  wire [2-1:0]                         M_AXI_RRESP,\n   input  wire                                                   M_AXI_RLAST,\n   input  wire                                                   M_AXI_RVALID,\n   output wire                                                   M_AXI_RREADY\n   );"}
{"task_id": 590, "completion": "module module_1 (\n    inout [53:0] processing_system7_0_MIO,\n    input processing_system7_0_PS_SRSTB_pin,\n    input processing_system7_0_PS_CLK_pin,\n    input processing_system7_0_PS_PORB_pin,\n    inout processing_system7_0_DDR_Clk,\n    inout processing_system7_0_DDR_Clk_n,\n    inout processing_system7_0_DDR_CKE,\n    inout processing_system7_0_DDR_CS_n,\n    inout processing_system7_0_DDR_RAS_n,\n    inout processing_system7_0_DDR_CAS_n,\n    output processing_system7_0_DDR_WEB_pin,\n    inout [2:0] processing_system7_0_DDR_BankAddr,\n    inout [14:0] processing_system7_0_DDR_Addr,\n    inout processing_system7_0_DDR_ODT,\n    inout processing_system7_0_DDR_DRSTB,\n    inout [31:0] processing_system7_0_DDR_DQ,\n    inout [3:0] processing_system7_0_DDR_DM,\n    inout [3:0] processing_system7_0_DDR_DQS,\n    inout [3:0] processing_system7_0_DDR_DQS_n,\n    inout processing_system7_0_DDR_VRN,\n    inout processing_system7_0_DDR_VRP,\n    output [7:0] coprocessor_0_LED_OUT_pin,\n    input [7:0] coprocessor_0_SW_IN_pin,\n    input [4:0] coprocessor_0_BTN_IN_pin\n);"}
{"task_id": 1529, "completion": "module BypassWire(WGET, WVAL);\n   parameter width = 1;\n   input [width - 1 : 0]    WVAL;\n   output [width - 1 : 0]   WGET;"}
{"task_id": 1499, "completion": "module pkt_mux( input clk, input reset, input [339:0] pkt_metadata_nocut, input pkt_metadata_nocut_valid, input [339:0] pkt_metadata_out, input pkt_metadata_out_valid, output reg [4:0] pkt_addr, output reg pkt_addr_wr, output reg [63:0] metadata_data, output reg metadata_data_wr, output reg p2k_valid, output reg [7:0] p2k_ingress, output reg [127:0] p2k_rloc_src, output reg [127:0] p2k_eid_dst, output reg [71:0] p2k_metadata );"}
{"task_id": 1471, "completion": "module ER1 (input  JTCK, input  JTDI, output JTDO1, output reg JTDO2, input  JSHIFT, input  JUPDATE, input  JRSTN, input  JCE1, input [14:0] ER2_TDO, output reg [14:0] IP_ENABLE, input  ISPTRACY_ER2_TDO, output ISPTRACY_ENABLE, output CONTROL_DATAN);"}
{"task_id": 1307, "completion": "module control_unit(\n    output reg [ 2:0] sbox_sel,\n    output reg [ 1:0] rk_sel,\n    output reg [ 1:0] key_out_sel,\n    output reg [ 1:0] col_sel,\n    output reg [ 3:0] key_en,\n    output reg [ 3:0] col_en,\n    output     [ 3:0] round,\n    output reg bypass_rk,\n    output reg bypass_key_en,\n    output reg key_sel,\n    output reg iv_cnt_en,\n    output reg iv_cnt_sel,\n    output reg key_derivation_en,\n    output end_comp,\n    output key_init,\n    output key_gen,\n    output mode_ctr,\n    output mode_cbc,\n    output last_round,\n    output encrypt_decrypt,\n    input [1:0] operation_mode,\n    input [1:0] aes_mode,\n    input start,\n    input disable_core,\n    input clk,\n    input rst_n\n);"}
{"task_id": 1445, "completion": "module nand_log(\n\t\tinput wire bclk,\n\t\tinput wire clk100,\n\t\tinput wire nand_re,\n\t\tinput wire nand_we,\n\t\tinput wire nand_ale,\n\t\tinput wire nand_cle,\n\t\tinput wire nand_cs,\n\t\tinput wire nand_rb,\n\t\tinput wire [7:0] nand_din,\n\t\tinput wire [9:0] nand_uk,\n\t\tinput wire log_reset,\n\t\tinput wire log_run,\n\t\toutput reg log_cmd_error,\n\t\toutput reg log_data_error,\n\t\toutput reg [26:0] log_entries,\n\t\toutput wire [3:0] ddr3_wr_mask,\n\t\toutput wire [31:0] ddr3_wr_data,\n\t\toutput wire ddr3_wr_en,\n\t\tinput wire ddr3_wr_full,\n\t\tinput wire ddr3_wr_empty,\n\t\tinput wire [6:0] ddr3_wr_count,\n\t\toutput wire ddr3_cmd_clk,\n\t\toutput wire [2:0] ddr3_cmd_instr,\n\t\toutput wire ddr3_cmd_en,\n\t\toutput wire [5:0] ddr3_cmd_burstlen,\n\t\toutput wire [29:0] ddr3_cmd_addr,\n\t\tinput wire ddr3_cmd_full,\n\t\tinput wire ddr3_cmd_empty,\n\t\toutput wire [63:0] time_t_clk100,\n\t\tinput wire reset\n\t);"}
{"task_id": 1488, "completion": "module doImgProc_CRTL_BUS_s_axi #(parameter C_S_AXI_ADDR_WIDTH = 5, parameter C_S_AXI_DATA_WIDTH = 32)(input  wire ACLK, input  wire ARESET, input  wire ACLK_EN, input  wire [C_S_AXI_ADDR_WIDTH-1:0] AWADDR, input  wire AWVALID, output wire AWREADY, input  wire [C_S_AXI_DATA_WIDTH-1:0] WDATA, input  wire [C_S_AXI_DATA_WIDTH/8-1:0] WSTRB, input  wire WVALID, output wire WREADY, output wire [1:0] BRESP, output wire BVALID, input  wire BREADY, input  wire [C_S_AXI_ADDR_WIDTH-1:0] ARADDR, input  wire ARVALID, output wire ARREADY, output wire [C_S_AXI_DATA_WIDTH-1:0] RDATA, output wire [1:0] RRESP, output wire RVALID, input  wire RREADY, output wire interrupt, output wire ap_start, input  wire ap_done, input  wire ap_ready, input  wire ap_idle, output wire [31:0] operation);"}
{"task_id": 1556, "completion": "module rw_manager_lfsr72(\n\tclk,\n\tnrst,\n\tena,\n\tword\n);\n\n\tinput clk;\n\tinput nrst;\n\tinput ena;\n\toutput reg [71:0] word;"}
{"task_id": 1551, "completion": "module baudgen_rx #(\n         parameter BAUDRATE = `B115200\n)(\n         input wire rstn,\n         input wire clk,\n         input wire clk_ena,\n         output wire clk_out\n);"}
{"task_id": 1560, "completion": "module c_wf_alloc_wrapper(clk, reset, update, req, gnt);\n   parameter num_ports = 8;\n   parameter wf_alloc_type = `WF_ALLOC_TYPE_REP;\n   parameter error_recovery = 0;\n   parameter reset_type = `RESET_TYPE_ASYNC;\n   input clk;\n   input reset;\n   input update;\n   input [0:num_ports*num_ports-1] req;\n   output [0:num_ports*num_ports-1] gnt;\n   wire [0:num_ports*num_ports-1] gnt;\n   wire [0:num_ports*num_ports-1] req_int;"}
{"task_id": 1574, "completion": "module PULLUP (O); output O; wire A;"}
{"task_id": 1580, "completion": "module vlog_functions;"}
{"task_id": 1566, "completion": "module audio_direct(\n    input wire clk_i,\n    input wire en_i,\n    input wire pdm_audio_i,\n    output wire pdm_m_clk_o,\n    output wire pwm_audio_o,\n    output wire done_o,\n    output wire pwm_audio_shutdown\n);"}
{"task_id": 1515, "completion": "module t (\n   input clk\n);"}
{"task_id": 815, "completion": "module phy_wrlvl #(\n   parameter TCQ = 100,\n   parameter DQS_CNT_WIDTH     = 3,\n   parameter DQ_WIDTH          = 64,\n   parameter DQS_WIDTH         = 2,\n   parameter DRAM_WIDTH        = 8,\n   parameter RANKS             = 1,\n   parameter SIM_CAL_OPTION    = \"NONE\"\n   )(\n   input                        clk,\n   input                        rst,\n   input                        wr_level_start,\n   input                        wl_sm_start,\n   input [(DQ_WIDTH)-1:0]       rd_data_rise0,\n   output reg                   wr_level_done,\n   output                       wrlvl_rank_done,\n   output                       done_dqs_tap_inc,\n   output [DQS_CNT_WIDTH:0]     po_stg2_wl_cnt,\n   output reg                   dqs_po_stg2_f_incdec,\n   output reg                   dqs_po_en_stg2_f,\n   output reg                   dqs_wl_po_stg2_c_incdec,\n   output reg                   dqs_wl_po_en_stg2_c,\n   output reg                   dqs_wl_po_stg2_load,\n   output reg [8:0]             dqs_wl_po_stg2_reg_l,\n   output reg                   wrlvl_err,\n   output reg [3*DQS_WIDTH-1:0] wl_po_coarse_cnt,\n   output reg [6*DQS_WIDTH-1:0] wl_po_fine_cnt,\n   output [5:0]                 dbg_wl_tap_cnt,\n   output                       dbg_wl_edge_detect_valid,\n   output [(DQS_WIDTH)-1:0]     dbg_rd_data_edge_detect,\n   output [DQS_CNT_WIDTH:0]     dbg_dqs_count,\n   output [3:0]                 dbg_wl_state\n   );"}
{"task_id": 1547, "completion": "module _80_cycloneiv_alu (A, B, CI, BI, X, Y, CO);\n        parameter A_SIGNED = 0;\n\tparameter B_SIGNED = 0;\n\tparameter A_WIDTH = 1;\n\tparameter B_WIDTH = 1;\n\tparameter Y_WIDTH = 1;\n\n\t(* force_downto *)\n\tinput [A_WIDTH-1:0] A;\n\t(* force_downto *)\n\tinput [B_WIDTH-1:0] B;\n\t(* force_downto *)\n\toutput [Y_WIDTH-1:0] X, Y;\n\n\tinput CI, BI;\n\toutput [Y_WIDTH:0] CO;\n\n\twire _TECHMAP_FAIL_ = Y_WIDTH < 6;\n\n\t(* force_downto *)\n\twire [Y_WIDTH-1:0] A_buf, B_buf;\n\t\\$pos #(.A_SIGNED(A_SIGNED), .A_WIDTH(A_WIDTH), .Y_WIDTH(Y_WIDTH)) A_conv (.A(A), .Y(A_buf));\n\t\\$pos #(.A_SIGNED(B_SIGNED), .A_WIDTH(B_WIDTH), .Y_WIDTH(Y_WIDTH)) B_conv (.A(B), .Y(B_buf));\n\n\t(* force_downto *)\n\twire [Y_WIDTH-1:0] AA = A_buf;\n\t(* force_downto *)\n\twire [Y_WIDTH-1:0] BB = BI ? ~B_buf : B_buf;\n\twire [Y_WIDTH:0] C = {CO, CI};"}
{"task_id": 138, "completion": "module mkMMU_Cache(CLK, RST_N, set_verbosity_verbosity, EN_set_verbosity, RDY_set_verbosity, EN_server_reset_request_put, RDY_server_reset_request_put, EN_server_reset_response_get, RDY_server_reset_response_get, req_op, req_f3, req_amo_funct7, req_addr, req_st_value, req_priv, req_sstatus_SUM, req_mstatus_MXR, req_satp, EN_req, valid, addr, cword, st_amo_val, exc, exc_code, EN_server_flush_request_put, RDY_server_flush_request_put, EN_server_flush_response_get, RDY_server_flush_response_get, EN_tlb_flush, RDY_tlb_flush, mem_master_awvalid, mem_master_awid, mem_master_awaddr, mem_master_awlen, mem_master_awsize, mem_master_awburst, mem_master_awlock, mem_master_awcache, mem_master_awprot, mem_master_awqos, mem_master_awregion, mem_master_awready, mem_master_wvalid, mem_master_wdata, mem_master_wstrb, mem_master_wlast, mem_master_wready, mem_master_bvalid, mem_master_bid, mem_master_bresp, mem_master_bready, mem_master_arvalid, mem_master_arid, mem_master_araddr, mem_master_arlen, mem_master_arsize, mem_master_arburst, mem_master_arlock, mem_master_arcache, mem_master_arprot, mem_master_arqos, mem_master_arregion, mem_master_arready, mem_master_rvalid, mem_master_rid, mem_master_rdata, mem_master_rresp, mem_master_rlast, mem_master_rready, set_watch_tohost_watch_tohost, set_watch_tohost_tohost_addr, EN_set_watch_tohost, RDY_set_watch_tohost, mv_tohost_value, RDY_mv_tohost_value, EN_ma_ddr4_ready, RDY_ma_ddr4_ready, mv_status);"}
{"task_id": 1546, "completion": "module trace_generator_controller #(parameter ADDR_WIDTH = 18)(\n    input clk,\n    input [5:0] controls_input,\n    input [ADDR_WIDTH-1:0] numSample,\n    input reset_n,\n    output reg trace_enb_1d\n);"}
{"task_id": 1571, "completion": "module t (/*AUTOARG*/\n   input clk\n);"}
{"task_id": 1521, "completion": "module mccomp (input wire stp, rst, clk, input wire [1:0] dptype, input wire [4:0] regselect, output wire exec, output wire [5:0] initype, output wire [3:0] node, output wire [7:0] segment);"}
{"task_id": 1531, "completion": "module ztex_ufm1_15b1 (fxclk_in, reset, pll_stop,  dcm_progclk, dcm_progdata, dcm_progen,  rd_clk, wr_clk, wr_start, read, write);"}
{"task_id": 1583, "completion": "module altera_avalon_st_idle_remover (\n      input              clk,\n      input              reset_n,\n      output reg         in_ready,\n      input              in_valid,\n      input      [7: 0]  in_data,\n      input              out_ready,\n      output reg         out_valid,\n      output reg [7: 0]  out_data\n);"}
{"task_id": 1538, "completion": "module ad_datafmt (\n  input           clk,\n  input           valid,\n  input   [15:0]  data,\n  output          valid_out,\n  output  [15:0]  data_out,\n  input           dfmt_enable,\n  input           dfmt_type,\n  input           dfmt_se);"}
{"task_id": 1601, "completion": "module mod_leds(rst, clk, ie, de, iaddr, daddr, drw, din, iout, dout, leds);    input rst;    input clk;    input ie,de;    input [31:0] iaddr, daddr;    input [1:0] drw;    input [31:0] din;    output [31:0] iout, dout;    output reg [7:0] leds;"}
{"task_id": 1526, "completion": "module t ( input clk );"}
{"task_id": 1587, "completion": "module uart_rx (input clk, input rx_serial, output reg tx_flag = 1'b0, output reg [7:0] tx_byte = 8'd0);"}
{"task_id": 1489, "completion": "module lm32_top (\n    input clk_i,\n    input rst_i,\n`ifdef CFG_DEBUG_ENABLED\n `ifdef CFG_ALTERNATE_EBA\n    input at_debug,\n `endif\n`endif\n`ifdef CFG_INTERRUPTS_ENABLED\n    input [`LM32_INTERRUPT_RNG] interrupt_n,\n`endif\n`ifdef CFG_USER_ENABLED\n    input [`LM32_WORD_RNG] user_result,\n    input user_complete,\n`endif     \n`ifdef CFG_IWB_ENABLED\n    input [`LM32_WORD_RNG] I_DAT_I,\n    input I_ACK_I,\n    input I_ERR_I,\n    input I_RTY_I,\n`endif\n    input [`LM32_WORD_RNG] D_DAT_I,\n    input D_ACK_I,\n    input D_ERR_I,\n    input D_RTY_I,\n    input [`LM32_WORD_RNG] DEBUG_ADR_I,\n    input [`LM32_WORD_RNG] DEBUG_DAT_I,\n    input [`LM32_BYTE_SELECT_RNG] DEBUG_SEL_I,\n    input DEBUG_WE_I,\n    input [`LM32_CTYPE_RNG] DEBUG_CTI_I,\n    input [`LM32_BTYPE_RNG] DEBUG_BTE_I,\n    input DEBUG_LOCK_I,\n    input DEBUG_CYC_I,\n    input DEBUG_STB_I,\n    `ifdef CFG_USER_ENABLED\n    output user_valid,\n    output [`LM32_USER_OPCODE_RNG] user_opcode,\n    output [`LM32_WORD_RNG] user_operand_0,\n    output [`LM32_WORD_RNG] user_operand_1,\n    `endif    \n`ifdef CFG_IROM_EXPOSE\n    output irom_clk_rd, irom_clk_wr,\n    output irom_rst_rd, irom_rst_wr,\n    output [`LM32_WORD_RNG] irom_d_rd /* unused */, irom_d_wr,\n    output [`IROM_ADDR_WIDTH-1:0] irom_addr_rd, irom_addr_wr,\n    output irom_en_rd, irom_en_wr,\n    output irom_write_rd, irom_write_wr,\n    `endif\n`ifdef CFG_DRAM_EXPOSE\n    output dram_clk_rd, dram_clk_wr,\n    output dram_rst_rd, dram_rst_wr,\n    output [`LM32_WORD_RNG] dram_d_rd /* unused */, dram_d_wr,\n    output [`DRAM_ADDR_WIDTH-1:0] dram_addr_rd, dram_addr_wr,\n    output dram_en_rd, dram_en_wr,\n    output dram_write_rd, dram_write_wr,\n    `endif\n`ifdef CFG_IWB_ENABLED\n    output [`LM32_WORD_RNG] I_DAT_O,\n    output [`LM32_WORD_RNG] I_ADR_O,\n    output I_CYC_O,\n    output [`LM32_BYTE_SELECT_RNG] I_SEL_O,\n    output I_STB_O,\n    output I_WE_O,\n    output [`LM32_CTYPE_RNG] I_CTI_O,\n    output I_LOCK_O,\n    output [`LM32_BTYPE_RNG] I_BTE_O,\n    `endif\n    output [`LM32_WORD_RNG] D_DAT_O,\n    output [`LM32_WORD_RNG] D_ADR_O,\n    output D_CYC_O,\n    output [`LM32_BYTE_SELECT_RNG] D_SEL_O,\n    output D_STB_O,\n    output D_WE_O,\n    output [`LM32_CTYPE_RNG] D_CTI_O,\n    output D_LOCK_O,\n    output [`LM32_BTYPE_RNG] D_BTE_O,\n    output DEBUG_ACK_O,\n    output DEBUG_ERR_O,\n    output DEBUG_RTY_O,\n    output [`LM32_WORD_RNG] DEBUG_DAT_O\n    );"}
{"task_id": 1528, "completion": "module eth_rxstatem (MRxClk, Reset, MRxDV, ByteCntEq0, ByteCntGreat2, Transmitting, MRxDEq5, MRxDEqD, IFGCounterEq24, ByteCntMaxFrame, StateData, StateIdle, StatePreamble, StateSFD, StateDrop);"}
{"task_id": 1539, "completion": "module phy_rdctrl_sync #(\n   parameter TCQ = 100\n  )(\n   input clk,\n   input rst_rsync,\n   input mc_data_sel,\n   input [4:0] rd_active_dly,\n   input dfi_rddata_en,\n   input phy_rddata_en,\n   output reg dfi_rddata_valid,\n   output reg dfi_rddata_valid_phy,\n   output reg rdpath_rdy\n  );"}
{"task_id": 1532, "completion": "module serial_atx (\n    input        clk,\n    input        txd_start,\n    input        baud1tick,\n    input  [7:0] txd_data,\n    output reg   txd,\n    output       txd_busy\n  );"}
{"task_id": 1519, "completion": "module pcie_gt_wrapper_top #(\n    parameter NO_OF_LANES = 1,\n    parameter SIM = 0,\n    parameter USE_V5FXT = 0,\n    parameter REF_CLK_FREQ = 1,\n    parameter TXDIFFBOOST = \"FALSE\",\n    parameter GTDEBUGPORTS = 0\n)(\n    output  wire   [7:0]                gt_rx_elec_idle,\n    output  wire   [23:0]               gt_rx_status,\n    output  wire   [63:0]               gt_rx_data,\n    output  wire   [7:0]                gt_rx_phy_status,\n    output  wire   [7:0]                gt_rx_data_k,\n    output  wire   [7:0]                gt_rx_valid,\n    output  wire   [7:0]                gt_rx_chanisaligned,\n    input   wire   [NO_OF_LANES-1:0]    gt_rx_n,\n    input   wire   [NO_OF_LANES-1:0]    gt_rx_p,\n    output  wire   [NO_OF_LANES-1:0]    gt_tx_n,\n    output  wire   [NO_OF_LANES-1:0]    gt_tx_p,\n    input   wire   [63:0]               gt_tx_data,\n    input   wire   [7:0]                gt_tx_data_k,\n    input   wire   [7:0]                gt_tx_elec_idle,\n    input   wire   [7:0]                gt_tx_detect_rx_loopback,\n    input   wire   [7:0]                gt_tx_compliance,\n    input   wire   [7:0]                gt_rx_polarity,\n    input   wire   [15:0]               gt_power_down,\n    input   wire   [7:0]                gt_deskew_lanes,\n    input   wire   [7:0]                gt_pipe_reset,\n    input   wire   [7:0]                gt_rx_present,\n    input   wire                        gsr,\n    input   wire                        gtreset,\n    input   wire                        refclk,\n    output  wire                        refclkout_bufg,\n    output  wire                        gtclk_bufg,\n    output  wire  [7:0]                 resetdone,\n    output  wire  [3:0]                 plllkdet_out,\n    input   wire                        gt_usrclk,\n    input   wire                        gt_usrclk2,\n    input   wire                        txsync_clk,\n    output  wire  [7:0]                 rxbyteisaligned,\n    output  wire  [7:0]                 rxchanbondseq,\n    output  wire                        pcie_reset,\n    input   wire                        clock_lock,\n    input   wire                        trn_lnk_up_n,\n    input   wire                        gt_dclk,\n    input   wire   [NO_OF_LANES*7-1:0]  gt_daddr,\n    input   wire   [NO_OF_LANES-1:0]    gt_den,\n    input   wire   [NO_OF_LANES-1:0]    gt_dwen,\n    input   wire   [NO_OF_LANES*16-1:0] gt_di,\n    output  wire   [NO_OF_LANES*16-1:0] gt_do,\n    output  wire   [NO_OF_LANES-1:0]    gt_drdy,\n    input   wire  [2:0]                 gt_txdiffctrl_0,\n    input   wire  [2:0]                 gt_txdiffctrl_1,\n    input   wire  [2:0]                 gt_txbuffctrl_0,\n    input   wire  [2:0]                 gt_txbuffctrl_1,\n    input   wire  [2:0]                 gt_txpreemphesis_0,\n    input   wire  [2:0]                 gt_txpreemphesis_1\n);"}
{"task_id": 1597, "completion": "module ctrl_clk_xilinx (  input  wire inclk0,  output wire c0,  output wire c1,  output wire c2,  output wire locked );"}
{"task_id": 151, "completion": "module axi_mc_controller(\n  input           ref_clk,\n  input           ctrl_data_clk,\n  output          fmc_en_o,\n  output          pwm_ah_o,\n  output          pwm_al_o,\n  output          pwm_bh_o,\n  output          pwm_bl_o,\n  output          pwm_ch_o,\n  output          pwm_cl_o,\n  output  [3:0]   gpo_o,\n  input           pwm_a_i,\n  input           pwm_b_i,\n  input           pwm_c_i,\n  input           ctrl_data_valid_i,\n  input [31:0]    ctrl_data0_i,\n  input [31:0]    ctrl_data1_i,\n  input [31:0]    ctrl_data2_i,\n  input [31:0]    ctrl_data3_i,\n  input [31:0]    ctrl_data4_i,\n  input [31:0]    ctrl_data5_i,\n  input [31:0]    ctrl_data6_i,\n  input [31:0]    ctrl_data7_i,\n  output[1:0]     sensors_o,\n  input [2:0]     position_i,\n  output          adc_clk_o,\n  output          adc_enable_c0,\n  output          adc_enable_c1,\n  output          adc_enable_c2,\n  output          adc_enable_c3,\n  output          adc_enable_c4,\n  output          adc_enable_c5,\n  output          adc_enable_c6,\n  output          adc_enable_c7,\n  output          adc_valid_c0,\n  output          adc_valid_c1,\n  output          adc_valid_c2,\n  output          adc_valid_c3,\n  output          adc_valid_c4,\n  output          adc_valid_c5,\n  output          adc_valid_c6,\n  output          adc_valid_c7,\n  output  [31:0]  adc_data_c0,\n  output  [31:0]  adc_data_c1,\n  output  [31:0]  adc_data_c2,\n  output  [31:0]  adc_data_c3,\n  output  [31:0]  adc_data_c4,\n  output  [31:0]  adc_data_c5,\n  output  [31:0]  adc_data_c6,\n  output  [31:0]  adc_data_c7,\n  input           s_axi_aclk,\n  input           s_axi_aresetn,\n  input           s_axi_awvalid,\n  input   [31:0]  s_axi_awaddr,\n  output          s_axi_awready,\n  input           s_axi_wvalid,\n  input   [31:0]  s_axi_wdata,\n  input   [3:0]   s_axi_wstrb,\n  output          s_axi_wready,\n  output          s_axi_bvalid,\n  output  [1:0]   s_axi_bresp,\n  input           s_axi_bready,\n  input           s_axi_arvalid,\n  input   [31:0]  s_axi_araddr,\n  output          s_axi_arready,\n  output          s_axi_rvalid,\n  output  [1:0]   s_axi_rresp,\n  output  [31:0]  s_axi_rdata,\n  input           s_axi_rready\n);"}
{"task_id": 1619, "completion": "module FixedRoundSigned(\n\tclk,\n\tfixed_num,\n\tround,\n\toverflow\n);\n\n\tparameter num_width = 42;\n\tparameter fixed_pos = 16;\n\tparameter res_width = 12;\n\n\tinput clk;\n\tinput signed [num_width - 1 : 0] fixed_num;\n\toutput reg signed [res_width : 0] round;\n\toutput reg overflow;"}
{"task_id": 1590, "completion": "module top (\n    input clk,\n    input cpu_reset,\n    input data_in,\n    output [5:0] data_out\n);"}
{"task_id": 1472, "completion": "module eth2dma_intercon ( input aclk, input aresetn, input s_rxs0_axis_tvalid, input s_rxs1_axis_tvalid, input s_rxs2_axis_tvalid, input s_rxs3_axis_tvalid, output s_rxs0_axis_tready, output s_rxs1_axis_tready, output s_rxs2_axis_tready, output s_rxs3_axis_tready, input [31 : 0] s_rxs0_axis_tdata, input [31 : 0] s_rxs1_axis_tdata, input [31 : 0] s_rxs2_axis_tdata, input [31 : 0] s_rxs3_axis_tdata, input [3 : 0] s_rxs0_axis_tkeep, input [3 : 0] s_rxs1_axis_tkeep, input [3 : 0] s_rxs2_axis_tkeep, input [3 : 0] s_rxs3_axis_tkeep, input s_rxs0_axis_tlast, input s_rxs1_axis_tlast, input s_rxs2_axis_tlast, input s_rxs3_axis_tlast, output reg m_rxs_axis_tvalid, input m_rxs_axis_tready, output reg [31 : 0] m_rxs_axis_tdata, output reg [3 : 0] m_rxs_axis_tkeep, output m_rxs_axis_tlast, input s_rxd0_axis_tvalid, input s_rxd1_axis_tvalid, input s_rxd2_axis_tvalid, input s_rxd3_axis_tvalid, output s_rxd0_axis_tready, output s_rxd1_axis_tready, output s_rxd2_axis_tready, output s_rxd3_axis_tready, input [31 : 0] s_rxd0_axis_tdata, input [31 : 0] s_rxd1_axis_tdata, input [31 : 0] s_rxd2_axis_tdata, input [31 : 0] s_rxd3_axis_tdata, input [3 : 0] s_rxd0_axis_tkeep, input [3 : 0] s_rxd1_axis_tkeep, input [3 : 0] s_rxd2_axis_tkeep, input [3 : 0] s_rxd3_axis_tkeep, input s_rxd0_axis_tlast, input s_rxd1_axis_tlast, input s_rxd2_axis_tlast, input s_rxd3_axis_tlast, output reg m_rxd_axis_tvalid, input m_rxd_axis_tready, output reg [31 : 0] m_rxd_axis_tdata, output reg [3 : 0] m_rxd_axis_tkeep, output m_rxd_axis_tlast, output reg [1 : 0] m_rxd_axis_tid );"}
{"task_id": 296, "completion": "module zap_cache_fsm   #(parameter CACHE_SIZE    = 1024,  parameter CACHE_LINE    = 8) (input   wire                      i_clk, input   wire                      i_reset, input   wire    [31:0]            i_address, input   wire                      i_rd, input   wire                      i_wr, input   wire    [31:0]            i_din, input   wire    [3:0]             i_ben, output  reg     [31:0]            o_dat, output  reg                       o_ack, output  reg                       o_err, output  reg     [7:0]             o_fsr, output  reg     [31:0]            o_far, output  reg                       o_err2, input   wire                      i_cache_en, input   wire                      i_cache_inv, input   wire                      i_cache_clean, output  reg                       o_cache_inv_done, output  reg                       o_cache_clean_done, input   wire    [CACHE_LINE*8-1:0]i_cache_line, input   wire                      i_cache_tag_dirty, input   wire  [`CACHE_TAG_WDT-1:0] i_cache_tag, output  reg   [`CACHE_TAG_WDT-1:0] o_cache_tag, output  reg                        o_cache_tag_dirty, output  reg                        o_cache_tag_wr_en, output  reg     [CACHE_LINE*8-1:0]o_cache_line, output  reg     [CACHE_LINE-1:0]  o_cache_line_ben, output  reg                       o_cache_clean_req, input   wire                      i_cache_clean_done, output  reg                       o_cache_inv_req, input   wire                      i_cache_inv_done, output reg [31:0]                 o_address, input   wire    [31:0]            i_phy_addr, input   wire    [7:0]             i_fsr, input   wire    [31:0]            i_far, input   wire                      i_fault, input   wire                      i_cacheable, input   wire                      i_busy, output  reg             o_wb_cyc_ff, o_wb_cyc_nxt, output  reg             o_wb_stb_ff, o_wb_stb_nxt, output  reg     [31:0]  o_wb_adr_ff, o_wb_adr_nxt, output  reg     [31:0]  o_wb_dat_ff, o_wb_dat_nxt, output  reg     [3:0]   o_wb_sel_ff, o_wb_sel_nxt, output  reg             o_wb_wen_ff, o_wb_wen_nxt, output  reg     [2:0]   o_wb_cti_ff, o_wb_cti_nxt, input   wire            i_wb_ack, input   wire    [31:0]  i_wb_dat);"}
{"task_id": 1607, "completion": "module oh_csa62  #(parameter DW = 1)( input [DW-1:0] in0, input [DW-1:0] in1, input [DW-1:0] in2, input [DW-1:0] in3, input [DW-1:0] in4, input [DW-1:0] in5, input [DW-1:0] cin0, input [DW-1:0] cin1, input [DW-1:0] cin2, output [DW-1:0] s, output [DW-1:0] c, output [DW-1:0] cout0, output [DW-1:0] cout1, output [DW-1:0] cout2 );"}
{"task_id": 1585, "completion": "module jtag_fifo (\n\tinput rx_clk,\n\tinput [11:0] rx_data,\n\tinput wr_en, rd_en,\n\toutput [8:0] tx_data,\n\toutput tx_full, tx_empty\n);"}
{"task_id": 1610, "completion": "module a25_multiply (\ninput                       i_clk,\ninput                       i_core_stall,\ninput       [31:0]          i_a_in,\ninput       [31:0]          i_b_in,\ninput       [1:0]           i_function,\ninput                       i_execute,\noutput      [31:0]          o_out,\noutput      [1:0]           o_flags,\noutput reg                  o_done = 'd0\n);"}
{"task_id": 1057, "completion": "module SORTINGNETWORK(input  wire         CLK,\n                      input  wire         RST_IN,\n                      input  wire         DATAEN_IN,\n                      input  wire [511:0] DIN_T,\n                      output reg  [511:0] DOUT,\n                      output reg          DATAEN_OUT);"}
{"task_id": 1605, "completion": "module ext_pll_ctrl(\n    input           osc_50,\n    input           rstn,\n    input     [3:0] clk1_set_wr,\n    output    [3:0] clk1_set_rd,\n    input     [3:0] clk2_set_wr,\n    output    [3:0] clk2_set_rd,\n    input     [3:0] clk3_set_wr,\n    output    [3:0] clk3_set_rd,\n    input           conf_wr,\n    input           conf_rd,\n    output          conf_ready,\n    output          max_sclk,\n    inout           max_sdat\n    );"}
{"task_id": 1613, "completion": "module t (/*AUTOARG*/\n   // Inputs\n   clk\n   );\n   input clk;\n\n   typedef enum logic [59:0] {\n                 E01 = 60'h1,\n                 ELARGE = 60'h1234_4567_abcd\n                 } my_t;\n\n   integer      cyc = 0;\n   my_t e;\n\n   string all;\n   int    i_cast;"}
{"task_id": 1636, "completion": "module notegen(input wire clk,          \n               input wire rstn,         \n               input wire [15:0] note,  \n               output reg clk_out);"}
{"task_id": 1621, "completion": "module axi_data_fifo_v2_1_16_axic_fifo #(\n   parameter         C_FAMILY          = \"virtex6\",\n   parameter integer C_FIFO_DEPTH_LOG  = 5,\n   parameter integer C_FIFO_WIDTH      = 64,\n   parameter         C_FIFO_TYPE       = \"lut\"\n  )(\n   input  wire                        ACLK,\n   input  wire                        ARESET,\n   input  wire [C_FIFO_WIDTH-1:0]     S_MESG,\n   input  wire                        S_VALID,\n   output wire                        S_READY,\n   output wire [C_FIFO_WIDTH-1:0]     M_MESG,\n   output wire                        M_VALID,\n   input  wire                        M_READY\n  );"}
{"task_id": 1609, "completion": "module fir_scu_rtl_restructured_for_cmm_exp (clk, reset, sample, result); input clk, reset; input [7:0] sample; output [9:0] result; reg [9:0] result; reg [7:0] samp_latch; reg [16:0] pro; reg [18:0] acc; reg [19:0] clk_cnt; reg [7:0] shift_0,shift_1,shift_2,shift_3,shift_4,shift_5,shift_6,shift_7,shift_8,shift_9,shift_10,shift_11,shift_12,shift_13,shift_14,shift_15,shift_16; reg [8:0]coefs_0,coefs_1,coefs_2,coefs_3,coefs_4,coefs_5,coefs_6,coefs_7,coefs_8, coefs_9,coefs_10,coefs_11,coefs_12,coefs_13,coefs_14,coefs_15,coefs_16;"}
{"task_id": 1627, "completion": "module or1200_dpram_32x32(\n\tclk_a, rst_a, ce_a, oe_a, addr_a, do_a,\n\tclk_b, rst_b, ce_b, we_b, addr_b, di_b);\n\nparameter aw = 5;\nparameter dw = 32;\n\ninput clk_a;\ninput rst_a;\ninput ce_a;\ninput oe_a;\ninput [aw-1:0] addr_a;\noutput [dw-1:0] do_a;\ninput clk_b;\ninput rst_b;\ninput ce_b;\ninput we_b;\ninput [aw-1:0] addr_b;\ninput [dw-1:0] di_b;"}
{"task_id": 692, "completion": "module mc_arb #(\n    parameter BYTES = 16\n)(\n   input                mclock,\n   input                reset_n,\n   input [27:0]         dlp_arb_addr,\n   input [4:0]          dlp_arb_wcnt,\n   input                dlp_arb_req,\n   input                line_actv_4,\n   input [31:0]         de_arb_addr,\n   input [3:0]          de_arb_page,\n   input [1:0]          de_arb_cmd,\n   input                de_arb_req,\n   input [31:0]         z_arb_addr,\n   input                empty_de,\n   input [66:0]         blend_ctrl_data,\n   input                mff_empty,\n   input [6:0]          mff_usedw,\n   input [4:0]          z_to_arb_in,\n   input [22:0]         hst_arb_addr,\n   input [1:0]          hst_arb_page,\n   input                hst_arb_read,\n   input                hst_arb_req,\n   input                crt_arb_req,\n   input [4:0]          crt_arb_page,\n   input [20:0]         crt_arb_addr,\n   input                vga_mode,\n   input                vga_arb_req,\n   input [17:0]         vga_arb_addr,\n   input                vga_arb_read,\n   input [31:0]         tc_address,\n   input [5:0]          tc_page,\n   input                tc_req,\n   output reg           tc_ack,\n   input [31:0]         pal_address,\n   input                pal_req,\n   input                pal_half,\n   output reg           pal_ack,\n   input                local_ready,\n   input                local_rdata_valid,\n   input                init_done,\n   output reg [24:0]    local_address,\n   output reg           local_write_req,\n   output reg           local_read_req,\n   output reg           local_burstbegin,\n   output reg [5:0]     local_size,\n   output               dlp_gnt,\n   output reg           de_gnt,\n   output               hst_gnt,\n   output               crt_gnt,\n   output               vga_gnt,\n   output               unload_de,\n   output               unload_z,\n   output               unload_mff,\n   output               unload_hst,\n   output reg           push_de,\n   output reg           push_crt,\n   output reg           push_dlp,\n   output reg           push_tex,\n   output reg           push_pal,\n   output reg           push_hst,\n   output reg           push_mff,\n   output reg           push_z,\n   output               vga_pop,\n   output reg           vga_push,\n   output reg           mc_dat_pop,\n   output [3:0]         dev_sel,\n   output reg [66:0]    mff_ctrl_data,\n   output reg           mc_busy,\n   output reg [3:0]     arb_state,\n   output reg [1:0]     current_cmd,\n   output reg [4:0]     z_data,\n   output reg [2:0]     next_dev,\n   output [8:0]         requests,\n   output [8:0]         read_dev\n);"}
{"task_id": 1624, "completion": "module top(\n        input   PACKAGEPIN,\n        output  [1:0] PLLOUTCORE,\n        output  [1:0] PLLOUTGLOBAL,\n        input   EXTFEEDBACK,\n        input   [7:0] DYNAMICDELAY,\n        output  LOCK,\n        input   BYPASS,\n        input   RESETB,\n        input   LATCHINPUTVALUE,\n\n        output  SDO,\n        input   SDI,\n        input   SCLK\n);"}
{"task_id": 1637, "completion": "module autoinst_precomment (why, nnnot);"}
{"task_id": 1639, "completion": "module altera_up_sync_fifo (\n\tinput clk,\n\tinput reset,\n\tinput write_en,\n\tinput [31:0] write_data,\n\tinput read_en,\n\toutput fifo_is_empty,\n\toutput fifo_is_full,\n\toutput [5:0] words_used,\n\toutput [31:0] read_data\n);"}
{"task_id": 1604, "completion": "module FACADE_SLICE #(\n\tparameter MODE = \"LOGIC\",\n\tparameter GSR = \"ENABLED\",\n\tparameter SRMODE = \"LSR_OVER_CE\",\n\tparameter CEMUX = \"1\",\n\tparameter CLKMUX = \"0\",\n\tparameter LSRMUX = \"LSR\",\n\tparameter LSRONMUX = \"LSRMUX\",\n\tparameter LUT0_INITVAL = 16'hFFFF,\n\tparameter LUT1_INITVAL = 16'hFFFF,\n\tparameter REGMODE = \"FF\",\n\tparameter REG0_SD = \"1\",\n\tparameter REG1_SD = \"1\",\n\tparameter REG0_REGSET = \"SET\",\n\tparameter REG1_REGSET = \"SET\",\n\tparameter CCU2_INJECT1_0 = \"YES\",\n\tparameter CCU2_INJECT1_1 = \"YES\",\n\tparameter WREMUX = \"INV\"\n)(\n\tinput A0, B0, C0, D0,\n\tinput A1, B1, C1, D1,\n\tinput M0, M1,\n\tinput FCI, FXA, FXB,\n\n\tinput CLK, LSR, CE,\n\tinput DI0, DI1,\n\n\tinput WD0, WD1,\n\tinput WAD0, WAD1, WAD2, WAD3,\n\tinput WRE, WCK,\n\n\toutput F0, Q0,\n\toutput F1, Q1,\n\toutput FCO, OFX0, OFX1,\n\n\toutput WDO0, WDO1, WDO2, WDO3,\n\toutput WADO0, WADO1, WADO2, WADO3\n);"}
{"task_id": 1611, "completion": "module system_rgb565_to_rgb888_0_0(\n    input clk,\n    input [15:0] rgb_565,\n    output [23:0] rgb_888\n);"}
{"task_id": 1633, "completion": "module or1200_dc_ram(\n\tclk,\n\trst,\n\n`ifdef OR1200_BIST\n\tmbist_si_i,\n\tmbist_so_o,\n\tmbist_ctrl_i,\n`endif\n\taddr,\n\ten,\n\twe,\n\tdatain,\n\tdataout\n);\n\nparameter dw = `OR1200_OPERAND_WIDTH;\nparameter aw = `OR1200_DCINDX;\n\ninput\t\tclk;\ninput\t\trst;\ninput\t[aw-1:0]\taddr;\ninput\t\ten;\ninput\t[3:0]\twe;\ninput\t[dw-1:0]\tdatain;\noutput\t[dw-1:0]\tdataout;\n\n`ifdef OR1200_BIST\ninput\t\tmbist_si_i;\ninput [`OR1200_MBIST_CTRL_WIDTH - 1:0]\tmbist_ctrl_i;\noutput\t\tmbist_so_o;\n`endif"}
{"task_id": 1400, "completion": "module vcr_vc_alloc_wf(clk, reset, route_port_ip_ivc, inc_rc_ip_ivc, elig_op_ovc, req_ip_ivc, gnt_ip_ivc, gnt_ip_ivc_ovc, gnt_op_ovc, gnt_op_ovc_ip, gnt_op_ovc_ivc);"}
{"task_id": 1414, "completion": "module brouter_4x4(\n    input   `control_w  b0000_ci,\n    input   `control_w  b0001_ci,\n    input   `control_w  b0010_ci,\n    input   `control_w  b0011_ci,\n    input   `control_w  b0100_ci,\n    input   `control_w  b0101_ci,\n    input   `control_w  b0110_ci,\n    input   `control_w  b0111_ci,\n    input   `control_w  b1000_ci,\n    input   `control_w  b1001_ci,\n    input   `control_w  b1010_ci,\n    input   `control_w  b1011_ci,\n    input   `control_w  b1100_ci,\n    input   `control_w  b1101_ci,\n    input   `control_w  b1110_ci,\n    input   `control_w  b1111_ci,\n    input   `data_w     b0000_di,\n    input   `data_w     b0001_di,\n    input   `data_w     b0010_di,\n    input   `data_w     b0011_di,\n    input   `data_w     b0100_di,\n    input   `data_w     b0101_di,\n    input   `data_w     b0110_di,\n    input   `data_w     b0111_di,\n    input   `data_w     b1000_di,\n    input   `data_w     b1001_di,\n    input   `data_w     b1010_di,\n    input   `data_w     b1011_di,\n    input   `data_w     b1100_di,\n    input   `data_w     b1101_di,\n    input   `data_w     b1110_di,\n    input   `data_w     b1111_di,\n    input               clk,\n    input               rst,\n    output  `control_w  b0000_co,\n    output  `control_w  b0001_co,\n    output  `control_w  b0010_co,\n    output  `control_w  b0011_co,\n    output  `control_w  b0100_co,\n    output  `control_w  b0101_co,\n    output  `control_w  b0110_co,\n    output  `control_w  b0111_co,\n    output  `control_w  b1000_co,\n    output  `control_w  b1001_co,\n    output  `control_w  b1010_co,\n    output  `control_w  b1011_co,\n    output  `control_w  b1100_co,\n    output  `control_w  b1101_co,\n    output  `control_w  b1110_co,\n    output  `control_w  b1111_co,\n    output  `data_w     b0000_do,\n    output  `data_w     b0001_do,\n    output  `data_w     b0010_do,\n    output  `data_w     b0011_do,\n    output  `data_w     b0100_do,\n    output  `data_w     b0101_do,\n    output  `data_w     b0110_do,\n    output  `data_w     b0111_do,\n    output  `data_w     b1000_do,\n    output  `data_w     b1001_do,\n    output  `data_w     b1010_do,\n    output  `data_w     b1011_do,\n    output  `data_w     b1100_do,\n    output  `data_w     b1101_do,\n    output  `data_w     b1110_do,\n    output  `data_w     b1111_do,\n    output              b0000_r,\n    output              b0001_r,\n    output              b0010_r,\n    output              b0011_r,\n    output              b0100_r,\n    output              b0101_r,\n    output              b0110_r,\n    output              b0111_r,\n    output              b1000_r,\n    output              b1001_r,\n    output              b1010_r,\n    output              b1011_r,\n    output              b1100_r,\n    output              b1101_r,\n    output              b1110_r,\n    output              b1111_r);"}
{"task_id": 1665, "completion": "module t (input clk);"}
{"task_id": 1635, "completion": "module fpu_add( clk, rst, enable, opa, opb, sign, sum_2, exponent_2);\ninput clk;\ninput rst;\ninput enable;\ninput [63:0] opa, opb;\noutput sign;\noutput [55:0] sum_2;\noutput [10:0] exponent_2;"}
{"task_id": 1509, "completion": "module I2C_MASTER_reduced(clk,rst_n,sda,scl,RD_EN,WR_EN,receive_status);"}
{"task_id": 1614, "completion": "module t (/*AUTOARG*/ clk ); input clk;"}
{"task_id": 1652, "completion": "module adder_tree_top (\n\tclk,\n\tisum0_0_0_0, isum0_0_0_1, isum0_0_1_0, isum0_0_1_1, isum0_1_0_0, isum0_1_0_1, isum0_1_1_0, isum0_1_1_1,\n\tsum\n);\n\tinput clk;\n\tinput [`ADDER_WIDTH+0-1:0] isum0_0_0_0, isum0_0_0_1, isum0_0_1_0, isum0_0_1_1, isum0_1_0_0, isum0_1_0_1, isum0_1_1_0, isum0_1_1_1;\n\toutput [`ADDER_WIDTH  :0] sum;\n\treg    [`ADDER_WIDTH  :0] sum;"}
{"task_id": 1316, "completion": "module memc_ui_top #(\n   parameter REFCLK_FREQ = 200,\n   parameter SIM_BYPASS_INIT_CAL = \"OFF\",\n   parameter IODELAY_GRP = \"IODELAY_MIG\",\n   parameter nCK_PER_CLK = 2,\n   parameter DRAM_TYPE = \"DDR3\",\n   parameter nCS_PER_RANK = 1,\n   parameter DQ_CNT_WIDTH = 6,\n   parameter DQS_CNT_WIDTH = 3,\n   parameter RANK_WIDTH = 1,\n   parameter BANK_WIDTH = 3,\n   parameter CK_WIDTH = 1,\n   parameter CKE_WIDTH = 1,\n   parameter COL_WIDTH = 10,\n   parameter CS_WIDTH = 1,\n   parameter DM_WIDTH = 8,\n   parameter USE_DM_PORT = 1,\n   parameter DQ_WIDTH = 64,\n   parameter DRAM_WIDTH = 8,\n   parameter DQS_WIDTH = 8,\n   parameter ROW_WIDTH = 13,\n   parameter AL = \"0\",\n   parameter BURST_MODE = \"8\",\n   parameter BURST_TYPE = \"SEQ\",\n   parameter IBUF_LPWR_MODE = \"OFF\",\n   parameter IODELAY_HP_MODE = \"ON\",\n   parameter nAL = 0,\n   parameter CL = 6,\n   parameter CWL = 5,\n   parameter DATA_BUF_ADDR_WIDTH = 4,\n   parameter DATA_BUF_OFFSET_WIDTH = 1,\n   parameter BM_CNT_WIDTH = 2,\n   parameter ADDR_CMD_MODE = \"1T\",\n   parameter nBANK_MACHS = 4,\n   parameter ORDERING = \"STRICT\",\n   parameter RANKS = 1,\n   parameter WRLVL = \"ON\",\n   parameter PHASE_DETECT = \"ON\",\n   parameter CAL_WIDTH = \"HALF\",\n   parameter RTT_NOM = \"60\",\n   parameter RTT_WR = \"OFF\",\n   parameter OUTPUT_DRV = \"HIGH\",\n   parameter REG_CTRL = \"OFF\",\n   parameter nDQS_COL0 = 6,\n   parameter nDQS_COL1 = 2,\n   parameter nDQS_COL2 = 0,\n   parameter nDQS_COL3 = 0,\n   parameter DQS_LOC_COL0 = 48'h050403020100,\n   parameter DQS_LOC_COL1 = 48'h050403020100,\n   parameter DQS_LOC_COL2 = 48'h050403020100,\n   parameter DQS_LOC_COL3 = 48'h050403020100,\n   parameter tCK = 2500,\n   parameter tFAW = 37500,\n   parameter tPRDI = 1_000_000,\n   parameter tRRD = 10000,\n   parameter tRAS = 37500,\n   parameter tRCD = 13130,\n   parameter tREFI = 7800000,\n   parameter tRFC = 110000,\n   parameter tRP = 13130,\n   parameter tRTP = 7500,\n   parameter tWTR = 7500,\n   parameter tZQI = 128_000_000,\n   parameter tZQCS = 64,\n   parameter SLOT_0_CONFIG = 8'b0000_0001,\n   parameter SLOT_1_CONFIG = 8'b0000_0000,\n   parameter DEBUG_PORT = \"ON\",\n   parameter ADDR_WIDTH = 27,\n   parameter MEM_ADDR_ORDER = \"ROW_BANK_COLUMN\",\n   parameter STARVE_LIMIT = 2,\n   parameter TCQ = 100,\n   parameter ECC = \"OFF\",\n   parameter DATA_WIDTH = 64,\n   parameter ECC_TEST = \"OFF\",\n   parameter PAYLOAD_WIDTH = 64,\n   parameter APP_DATA_WIDTH = PAYLOAD_WIDTH*4,\n   parameter APP_MASK_WIDTH = APP_DATA_WIDTH/8\n)(\n   input clk,\n   input clk_mem,\n   input clk_rd_base,\n   input rst,\n   output [ROW_WIDTH-1:0] ddr_addr,\n   output [BANK_WIDTH-1:0] ddr_ba,\n   output ddr_cas_n,\n   output [CK_WIDTH-1:0] ddr_ck_n,\n   output [CK_WIDTH-1:0] ddr_ck,\n   output [CKE_WIDTH-1:0] ddr_cke,\n   output [CS_WIDTH*nCS_PER_RANK-1:0] ddr_cs_n,\n   output [DM_WIDTH-1:0] ddr_dm,\n   output [CS_WIDTH*nCS_PER_RANK-1:0] ddr_odt,\n   output ddr_ras_n,\n   output ddr_reset_n,\n   output ddr_parity,\n   output ddr_we_n,\n   inout [DQ_WIDTH-1:0] ddr_dq,\n   inout [DQS_WIDTH-1:0] ddr_dqs_n,\n   inout [DQS_WIDTH-1:0] ddr_dqs,\n   output pd_PSEN,\n   output pd_PSINCDEC,\n   input pd_PSDONE,\n   output phy_init_done,\n   output [BM_CNT_WIDTH-1:0] bank_mach_next,\n   output [3:0] app_ecc_multiple_err,\n   output [APP_DATA_WIDTH-1:0] app_rd_data,\n   output app_rd_data_end,\n   output app_rd_data_valid,\n   output app_rdy,\n   output app_wdf_rdy,\n   input [ADDR_WIDTH-1:0] app_addr,\n   input [2:0] app_cmd,\n   input app_en,\n   input app_hi_pri,\n   input app_sz,\n   input [APP_DATA_WIDTH-1:0] app_wdf_data,\n   input app_wdf_end,\n   input [APP_MASK_WIDTH-1:0] app_wdf_mask,\n   input app_wdf_wren,\n   input app_correct_en,\n   input [5*DQS_WIDTH-1:0] dbg_wr_dqs_tap_set,\n   input [5*DQS_WIDTH-1:0] dbg_wr_dq_tap_set,\n   input dbg_wr_tap_set_en,\n   output dbg_wrlvl_start,\n   output dbg_wrlvl_done,\n   output dbg_wrlvl_err,\n   output [DQS_WIDTH-1:0] dbg_wl_dqs_inverted,\n   output [2*DQS_WIDTH-1:0] dbg_wr_calib_clk_delay,\n   output [5*DQS_WIDTH-1:0] dbg_wl_odelay_dqs_tap_cnt,\n   output [5*DQS_WIDTH-1:0] dbg_wl_odelay_dq_tap_cnt,\n   output [1:0] dbg_rdlvl_start,\n   output [1:0] dbg_rdlvl_done,\n   output [1:0] dbg_rdlvl_err,\n   output [5*DQS_WIDTH-1:0] dbg_cpt_tap_cnt,\n   output [5*DQS_WIDTH-1:0] dbg_cpt_first_edge_cnt,\n   output [5*DQS_WIDTH-1:0] dbg_cpt_second_edge_cnt,\n   output [3*DQS_WIDTH-1:0] dbg_rd_bitslip_cnt,\n   output [2*DQS_WIDTH-1:0] dbg_rd_clkdly_cnt,\n   output [4:0] dbg_rd_active_dly,\n   input dbg_pd_off,\n   input dbg_pd_maintain_off,\n   input dbg_pd_maintain_0_only,\n   input dbg_inc_cpt,\n   input dbg_dec_cpt,\n   input dbg_inc_rd_dqs,\n   input dbg_dec_rd_dqs,\n   input [DQS_CNT_WIDTH-1:0] dbg_inc_dec_sel,\n   input dbg_inc_rd_fps,\n   input dbg_dec_rd_fps,\n   output [5*DQS_WIDTH-1:0] dbg_dqs_tap_cnt,\n   output [5*DQS_WIDTH-1:0] dbg_dq_tap_cnt,\n   output [4*DQ_WIDTH-1:0] dbg_rddata\n);"}
{"task_id": 1676, "completion": "module hub_core (uart_clk, new_nonces, golden_nonce, serial_send, serial_busy, slave_nonces);   parameter SLAVES = 2;   input uart_clk;   input [SLAVES-1:0] new_nonces;   input [SLAVES*32-1:0] slave_nonces;   output [31:0] golden_nonce;   output serial_send;   input serial_busy;"}
{"task_id": 1598, "completion": "module phy_pd_top #(\n   parameter TCQ = 100,\n   parameter DQS_CNT_WIDTH = 3,\n   parameter DQS_WIDTH = 8,\n   parameter PD_LHC_WIDTH = 16,\n   parameter PD_CALIB_MODE = \"PARALLEL\",\n   parameter PD_MSB_SEL = 8,\n   parameter PD_DQS0_ONLY = \"ON\",\n   parameter SIM_CAL_OPTION = \"NONE\",\n   parameter DEBUG_PORT = \"OFF\"\n)(\n   input clk,\n   input rst,\n   input pd_cal_start,\n   output pd_cal_done,\n   input dfi_init_complete,\n   input read_valid,\n   output reg pd_PSEN,\n   output reg pd_PSINCDEC,\n   input [5*DQS_WIDTH-1:0] dlyval_rdlvl_dqs,\n   output [DQS_WIDTH-1:0] dlyce_pd_cpt,\n   output [DQS_WIDTH-1:0] dlyinc_pd_cpt,\n   output [5*DQS_WIDTH-1:0] dlyval_pd_dqs,\n   input [DQS_WIDTH-1:0] rd_dqs_rise0,\n   input [DQS_WIDTH-1:0] rd_dqs_fall0,\n   input [DQS_WIDTH-1:0] rd_dqs_rise1,\n   input [DQS_WIDTH-1:0] rd_dqs_fall1,\n   output pd_prech_req,\n   input prech_done,\n   input dbg_pd_off,\n   input dbg_pd_maintain_off,\n   input dbg_pd_maintain_0_only,\n   input dbg_pd_inc_cpt,\n   input dbg_pd_dec_cpt,\n   input dbg_pd_inc_dqs,\n   input dbg_pd_dec_dqs,\n   input dbg_pd_disab_hyst,\n   input dbg_pd_disab_hyst_0,\n   input [3:0] dbg_pd_msb_sel,\n   input [DQS_CNT_WIDTH-1:0] dbg_pd_byte_sel,\n   input dbg_inc_rd_fps,\n   input dbg_dec_rd_fps,\n   output [255:0] dbg_phy_pd\n);"}
{"task_id": 1562, "completion": "module vga_write_iface (    input wb_clk_i,    input wb_rst_i,    input [16:1] wbs_adr_i,    input [ 1:0] wbs_sel_i,    input [15:0] wbs_dat_i,    input wbs_stb_i,    output wbs_ack_o,    output [17:1] wbm_adr_o,    output [ 1:0] wbm_sel_o,    output [15:0] wbm_dat_o,    output wbm_stb_o,    input wbm_ack_i,    input memory_mapping1,    input [ 1:0] write_mode,    input [ 1:0] raster_op,    input [ 7:0] bitmask,    input [ 3:0] set_reset,    input [ 3:0] enable_set_reset,    input [ 3:0] map_mask,    input [7:0] latch0,    input [7:0] latch1,    input [7:0] latch2,    input [7:0] latch3  );"}
{"task_id": 1656, "completion": "module contact_discoverycud(\n    reset,\n    clk,\n    address0,\n    ce0,\n    we0,\n    d0,\n    q0,\n    address1,\n    ce1,\n    q1);\n\nparameter DataWidth = 32'd8;\nparameter AddressRange = 32'd19200;\nparameter AddressWidth = 32'd15;\ninput reset;\ninput clk;\ninput[AddressWidth - 1:0] address0;\ninput ce0;\ninput we0;\ninput[DataWidth - 1:0] d0;\noutput[DataWidth - 1:0] q0;\ninput[AddressWidth - 1:0] address1;\ninput ce1;\noutput[DataWidth - 1:0] q1;"}
{"task_id": 1657, "completion": "module FIFO_image_filter_p_src_cols_V_channel1 (\n    clk,\n    reset,\n    if_empty_n,\n    if_read_ce,\n    if_read,\n    if_dout,\n    if_full_n,\n    if_write_ce,\n    if_write,\n    if_din);\n\nparameter MEM_STYLE = \"shiftreg\";\nparameter DATA_WIDTH = 32'd12;\nparameter ADDR_WIDTH = 32'd2;\nparameter DEPTH = 32'd3;\n\ninput clk;\ninput reset;\noutput if_empty_n;\ninput if_read_ce;\ninput if_read;\noutput[DATA_WIDTH - 1:0] if_dout;\noutput if_full_n;\ninput if_write_ce;\ninput if_write;\ninput[DATA_WIDTH - 1:0] if_din;"}
{"task_id": 1594, "completion": "module t (/*AUTOARG*/\n   // Inputs\n   clk\n   );\n   input clk;"}
{"task_id": 1552, "completion": "module block_design_xbar_0 (input wire aclk, input wire aresetn, input wire [31 : 0] s_axi_awaddr, input wire [2 : 0] s_axi_awprot, input wire [0 : 0] s_axi_awvalid, output wire [0 : 0] s_axi_awready, input wire [31 : 0] s_axi_wdata, input wire [3 : 0] s_axi_wstrb, input wire [0 : 0] s_axi_wvalid, output wire [0 : 0] s_axi_wready, output wire [1 : 0] s_axi_bresp, output wire [0 : 0] s_axi_bvalid, input wire [0 : 0] s_axi_bready, input wire [31 : 0] s_axi_araddr, input wire [2 : 0] s_axi_arprot, input wire [0 : 0] s_axi_arvalid, output wire [0 : 0] s_axi_arready, output wire [31 : 0] s_axi_rdata, output wire [1 : 0] s_axi_rresp, output wire [0 : 0] s_axi_rvalid, input wire [0 : 0] s_axi_rready, output wire [63 : 0] m_axi_awaddr, output wire [5 : 0] m_axi_awprot, output wire [1 : 0] m_axi_awvalid, input wire [1 : 0] m_axi_awready, output wire [63 : 0] m_axi_wdata, output wire [7 : 0] m_axi_wstrb, output wire [1 : 0] m_axi_wvalid, input wire [1 : 0] m_axi_wready, input wire [3 : 0] m_axi_bresp, input wire [1 : 0] m_axi_bvalid, output wire [1 : 0] m_axi_bready, output wire [63 : 0] m_axi_araddr, output wire [5 : 0] m_axi_arprot, output wire [1 : 0] m_axi_arvalid, input wire [1 : 0] m_axi_arready, input wire [63 : 0] m_axi_rdata, input wire [3 : 0] m_axi_rresp, input wire [1 : 0] m_axi_rvalid, output wire [1 : 0] m_axi_rready);"}
{"task_id": 1669, "completion": "module adder_tree_top (\n\tclk,\n\tisum0_0_0_0, isum0_0_0_1, isum0_0_1_0, isum0_0_1_1, isum0_1_0_0, isum0_1_0_1, isum0_1_1_0, isum0_1_1_1,\n\tsum\n);\n\tinput clk;\n\tinput [`ADDER_WIDTH+0-1:0] isum0_0_0_0, isum0_0_0_1, isum0_0_1_0, isum0_0_1_1, isum0_1_0_0, isum0_1_0_1, isum0_1_1_0, isum0_1_1_1;\n\toutput [`ADDER_WIDTH  :0] sum;\n\treg    [`ADDER_WIDTH  :0] sum;"}
{"task_id": 1618, "completion": "module I2C_Controller (input iCLK, input iRST_N, input I2C_CLK, input I2C_EN, input [23:0] I2C_WDATA, output I2C_SCLK, inout I2C_SDAT, input WR, input GO, output ACK, output reg END, output reg [7:0] I2C_RDATA);"}
{"task_id": 1661, "completion": "module lm32_debug (clk_i, rst_i, pc_x, load_x, store_x, load_store_address_x, csr_write_enable_x, csr_write_data, csr_x, jtag_csr_write_enable, jtag_csr_write_data, jtag_csr, eret_q_x, bret_q_x, stall_x, exception_x, q_x, dcache_refill_request, dc_ss, dc_re, bp_match, wp_match);"}
{"task_id": 1694, "completion": "module hps_sdram_p0_reset_sync(\n\treset_n,\n\tclk,\n\treset_n_sync\n);\n\nparameter RESET_SYNC_STAGES = 4;\nparameter NUM_RESET_OUTPUT = 1;\n\ninput\treset_n;\ninput\tclk;\noutput\t[NUM_RESET_OUTPUT-1:0] reset_n_sync;"}
{"task_id": 1549, "completion": "module zet_fetch (    input clk,    input rst,    output     [7:0] opcode,    output     [7:0] modrm,    output           rep,    output           exec_st,    output           ld_base,    output reg [2:0] sop_l,    input need_modrm,    input need_off,    input need_imm,    input off_size,    input imm_size,    input ext_int,    input end_seq,    output reg [15:0] off_l,    output reg [15:0] imm_l,    input [5:0] ftype,    output [15:0] imm_f,    input [15:0] cs,    input [15:0] ip,    input of,    input zf,    input cx_zero,    input [15:0] data,    output [19:0] pc,    output bytefetch,    input  block,    input  div_exc,    input  tflm,    output wr_ip0,    input  intr,    input  iflm,    input  nmir,    input  iflss  );"}
{"task_id": 466, "completion": "module pcie_hip_s4gx_gen2_x4_128_core (\n\tAvlClk_i,\n\tCraAddress_i,\n\tCraByteEnable_i,\n\tCraChipSelect_i,\n\tCraRead,\n\tCraWrite,\n\tCraWriteData_i,\n\tRstn_i,\n\tRxmIrqNum_i,\n\tRxmIrq_i,\n\tRxmReadDataValid_i,\n\tRxmReadData_i,\n\tRxmWaitRequest_i,\n\tTxsAddress_i,\n\tTxsBurstCount_i,\n\tTxsByteEnable_i,\n\tTxsChipSelect_i,\n\tTxsRead_i,\n\tTxsWriteData_i,\n\tTxsWrite_i,\n\t...\n);"}
{"task_id": 1649, "completion": "module adder_tree_top (\n\tclk,\n\tisum0_0_0_0, isum0_0_0_1, isum0_0_1_0, isum0_0_1_1, isum0_1_0_0, isum0_1_0_1, isum0_1_1_0, isum0_1_1_1,\n\tsum\n);\n\tinput clk;\n\tinput [`ADDER_WIDTH+0-1:0] isum0_0_0_0, isum0_0_0_1, isum0_0_1_0, isum0_0_1_1, isum0_1_0_0, isum0_1_0_1, isum0_1_1_0, isum0_1_1_1;\n\toutput [`ADDER_WIDTH  :0] sum;\n\treg    [`ADDER_WIDTH  :0] sum;"}
{"task_id": 1695, "completion": "module alu(Aval, Bval, cin, op, ALUout, cout);\n   input [7:0] Aval;\n   input [7:0] Bval;\n   input cin;\n   input [1:0] op;\n   output cout;\n   output [7:0] ALUout;\n   reg cout;\n   reg [7:0] ALUout;"}
{"task_id": 1660, "completion": "module host_interface(\n\toutput [31:0] HRDATA,\n\toutput HREADYOUT,\n\toutput HRESP,\n\toutput [31:0] bus_wr,\n\toutput [1:0] crc_poly_size,\n\toutput [1:0] bus_size,\n\toutput [1:0] rev_in_type,\n\toutput rev_out_type,\n\toutput crc_init_en,\n\toutput crc_idr_en,\n\toutput crc_poly_en,\n\toutput buffer_write_en,\n\toutput reset_chain,\n\tinput [31:0] HWDATA,\n\tinput [31:0] HADDR,\n\tinput [2:0] HSIZE,\n\tinput [1:0] HTRANS,\n\tinput HWRITE,\n\tinput HSElx,\n\tinput HREADY,\n\tinput HRESETn,\n\tinput HCLK,\n\tinput [31:0] crc_poly_out,\n\tinput [31:0] crc_out,\n\tinput [31:0] crc_init_out,\n\tinput [7:0] crc_idr_out,\n\tinput buffer_full,\n\tinput reset_pending,\n\tinput read_wait);"}
{"task_id": 1690, "completion": "module arduino_switch_analog_bit(\n    input [1:0] gpio_sel,\n    input tri_i_out,\n    output reg tri_o_out,\n    output reg tri_t_out,\n    output tri_i_in,\n    input tri_o_in,\n    input tri_t_in,\n    output sda_i_in,\n    input sda_o_in,\n    input sda_t_in,\n    output scl_i_in,\n    input scl_o_in,\n    input scl_t_in\n);"}
{"task_id": 1542, "completion": "module t (\n   input clk\n);"}
{"task_id": 1706, "completion": "module stage3(\n\tinput reset,\n\tinput core_sp_clk,\n\tinput [31:0] previous_bblock,\n\tinput [31:0] previous_nhop,\n\tinput [31:0] fifo_pr_bblock,\n\tinput [31:0] fifo_pr_nhop,\n\toutput [12:2] jump_index_addr,\n\toutput [31:0] jump_bblock\n);"}
{"task_id": 1603, "completion": "module xps_icapi_core #(\n\tparameter C_SPLB_NATIVE_DWIDTH = 128,\n\tparameter C_MPLB_NATIVE_DWIDTH = 128,\n\tparameter C_FAMILY = \"virtex5\",\n\tparameter C_MEM_BASEADDR = 'hffffffff,\n\tparameter C_MEM_HIGHADDR = 'h00000000,\n\tparameter C_RESIM = 1\n)(\n\tinput Bus2IP_Clk,\n\tinput Bus2IP_Reset,\n\tinput [31:0] Bus2IP_Addr,\n\tinput Bus2IP_CS,\n\tinput Bus2IP_RNW,\n\tinput [C_SPLB_NATIVE_DWIDTH-1:0] Bus2IP_Data,\n\tinput [C_SPLB_NATIVE_DWIDTH/8-1:0] Bus2IP_BE,\n\tinput Bus2IP_Burst,\n\tinput [8:0] Bus2IP_BurstLength,\n\tinput Bus2IP_RdReq,\n\tinput Bus2IP_WrReq,\n\toutput IP2Bus_AddrAck,\n\toutput [C_SPLB_NATIVE_DWIDTH-1:0] IP2Bus_Data,\n\toutput IP2Bus_RdAck,\n\toutput IP2Bus_WrAck,\n\toutput IP2Bus_Error,\n\tinput Bus2IP_Mst_Clk,\n\tinput Bus2IP_Mst_Reset,\n\toutput IP2Bus_MstRd_Req,\n\toutput IP2Bus_MstWr_Req,\n\toutput [31:0] IP2Bus_Mst_Addr,\n\toutput [C_MPLB_NATIVE_DWIDTH/8-1:0] IP2Bus_Mst_BE,\n\toutput [11:0] IP2Bus_Mst_Length,\n\toutput IP2Bus_Mst_Type,\n\toutput IP2Bus_Mst_Lock,\n\toutput IP2Bus_Mst_Reset,\n\tinput Bus2IP_Mst_CmdAck,\n\tinput Bus2IP_Mst_Cmplt,\n\tinput Bus2IP_Mst_Error,\n\tinput Bus2IP_Mst_Rearbitrate,\n\tinput Bus2IP_Mst_Cmd_Timeout,\n\tinput [C_MPLB_NATIVE_DWIDTH-1:0] Bus2IP_MstRd_d,\n\tinput [C_MPLB_NATIVE_DWIDTH/8-1:0] Bus2IP_MstRd_rem,\n\tinput Bus2IP_MstRd_sof_n,\n\tinput Bus2IP_MstRd_eof_n,\n\tinput Bus2IP_MstRd_src_rdy_n,\n\tinput Bus2IP_MstRd_src_dsc_n,\n\toutput IP2Bus_MstRd_dst_rdy_n,\n\toutput IP2Bus_MstRd_dst_dsc_n,\n\toutput [C_MPLB_NATIVE_DWIDTH-1:0] IP2Bus_MstWr_d,\n\toutput [C_MPLB_NATIVE_DWIDTH/8-1:0] IP2Bus_MstWr_rem,\n\toutput IP2Bus_MstWr_sof_n,\n\toutput IP2Bus_MstWr_eof_n,\n\toutput IP2Bus_MstWr_src_rdy_n,\n\toutput IP2Bus_MstWr_src_dsc_n,\n\tinput Bus2IP_MstWr_dst_rdy_n,\n\tinput Bus2IP_MstWr_dst_dsc_n,\n\tinput ICAP_Clk,\n\toutput IP2INTC_Irpt\n);"}
{"task_id": 1696, "completion": "module FIFO_image_filter_src0_data_stream_1_V (\n    clk,\n    reset,\n    if_empty_n,\n    if_read_ce,\n    if_read,\n    if_dout,\n    if_full_n,\n    if_write_ce,\n    if_write,\n    if_din);\n\nparameter MEM_STYLE = \"auto\";\nparameter DATA_WIDTH = 32'd8;\nparameter ADDR_WIDTH = 32'd1;\nparameter DEPTH = 32'd2;\n\ninput clk;\ninput reset;\noutput if_empty_n;\ninput if_read_ce;\ninput if_read;\noutput[DATA_WIDTH - 1:0] if_dout;\noutput if_full_n;\ninput if_write_ce;\ninput if_write;\ninput[DATA_WIDTH - 1:0] if_din;"}
{"task_id": 1730, "completion": "module CmpEng (input clk, input reset_l);"}
{"task_id": 1672, "completion": "module hpdmc_busif #(\\n\\tparameter sdram_depth = 23\\n\\t)(\\n\\tinput sys_clk,\\n\\tinput sdram_rst,\\n\\t\\n\\tinput [sdram_depth-1:0] fml_adr,\\n\\tinput fml_stb,\\n\\tinput fml_we,\\n\\toutput fml_ack,\\n\\t\\n\\toutput mgmt_stb,\\n\\toutput mgmt_we,\\n\\toutput [sdram_depth-1-1:0] mgmt_address, /* in 16-bit words */\\n\\tinput mgmt_ack,\\n\\t\\t\\n\\tinput data_ack\\n\\t);"}
{"task_id": 1713, "completion": "module nonblocking_gate (clk, ctrl, din, sel, dout); input wire clk; input wire [4:0] ctrl; input wire [1:0] din; input wire [0:0] sel; output reg [31:0] dout;"}
{"task_id": 1727, "completion": "module t (/*AUTOARG*/\n   // Outputs\n   two,\n   // Inputs\n   clk, aresetn, ten\n   );\n\n   input wire clk;\n   input wire aresetn;\n\n   input reg [9:0] ten;\n   output reg [1:0] two;"}
{"task_id": 1733, "completion": "module gminstdecode(\n   output instClassType instClass\n);"}
{"task_id": 1520, "completion": "module fir (clk, reset, clk_ena, i_valid, i_in, o_valid, o_out); input clk; input reset; input clk_ena; input i_valid; input [dw-1:0] i_in; output o_valid; output [dw-1:0] o_out; parameter dw = 18; parameter N = 25; parameter N_UNIQ = 13; localparam N_VALID_REGS = 31;"}
{"task_id": 1680, "completion": "module FixedRoundSigned(\n\tclk,\n\tfixed_num,\n\tround,\n\toverflow\n\t);\n\n\tparameter num_width = 42;\n\tparameter fixed_pos = 16;\n\tparameter res_width = 12;\n\n\tinput clk;\n\tinput signed [num_width - 1 : 0] fixed_num;\n\toutput reg signed [res_width : 0] round;\n\toutput reg overflow;"}
{"task_id": 1739, "completion": "module mult58s(input [4:0] a, input signed [7:0] b, output signed [15:0] p);"}
{"task_id": 1431, "completion": "module edma_ctrl (/*AUTOARG*/\n   // Outputs\n   fetch_access, fetch_packet, dma_state, update, update2d,\n   master_active,\n   // Inputs\n   clk, nreset, dma_en, chainmode, manualmode, mastermode, count,\n   curr_descr, next_descr, reg_wait_in, access_in, wait_in\n   );\n\n   parameter  AW  = 32;            // address width\n   parameter  PW  = 2*AW+40;      // fetch packet width\n   parameter  ID  = 4'b0000;      // group id for DMA regs [10:8]\n   \n   input           clk;\n   input           nreset;\n   input           dma_en;\n   input           chainmode;\n   input           manualmode;\n   input           mastermode;\n   input [31:0]    count;\n   input [15:0]    curr_descr;\n   input [15:0]    next_descr;\n   output          fetch_access;\n   output [PW-1:0] fetch_packet;\n   input           reg_wait_in;\n   input           access_in;\n   input           wait_in;\n   output [3:0]    dma_state;\n   output          update;\n   output          update2d;\n   output          master_active;"}
{"task_id": 1746, "completion": "module timer(\n   input CLK,\n   input TIMER_RESETn,\n   input TIMER_EN,\n   input [7:0] TIMER_SAT,\n   input TIMER_ROI,\n   input TIMER_CLR_IRQ,\n   output reg [7:0] TIMER_VAL,\n   output reg TIMER_IRQ\n);"}
{"task_id": 1724, "completion": "module maquina_4_estados(clock_50mhz, clock_1hz, segmentos, anodos, estado);\n  input clock_50mhz;\n  output clock_1hz;\n  output reg [6:0] segmentos;\n  output reg [1:0] anodos;\n  output reg [1:0] estado;"}
{"task_id": 1615, "completion": "module cmm_errman_cor (                cor_num,                inc_dec_b,                reg_decr_cor,                add_input_one,      // Inputs                add_input_two_n,                add_input_three_n,                add_input_four_n,                add_input_five_n,                add_input_six_n,                decr_cor,                rst,                clk                );  output  [2:0] cor_num;  output        inc_dec_b;              // 1 = increment, 0 = decrement  output        reg_decr_cor;  input         add_input_one;  input         add_input_two_n;  input         add_input_three_n;  input         add_input_four_n;  input         add_input_five_n;  input         add_input_six_n;  input         decr_cor;  input         rst;  input         clk;"}
{"task_id": 1725, "completion": "module uart_transmitter (clk, wb_rst_i, lcr, tf_push, wb_dat_i, enable, stx_pad_o, tstate, tf_count, tx_reset, lsr_mask);"}
{"task_id": 262, "completion": "module aurora_64b66b_25p4G_WRAPPER #(\n      parameter INTER_CB_GAP  = 5'd9,\n      parameter SEQ_COUNT  = 4,\n      parameter wait_for_fifo_wr_rst_busy_value = 6'd32,\n      parameter TRAVELLING_STAGES = 3'd2,\n      parameter BACKWARD_COMP_MODE1 = 1'b0,\n      parameter BACKWARD_COMP_MODE2 = 1'b0,\n      parameter BACKWARD_COMP_MODE3 = 1'b0,\n      parameter SCRAMBLER_SEED = 58'h2AA_AAAA_AAAA_AAAA,\n      parameter CHAN_BOND_MODE_0      = 2'b00,\n      parameter CHAN_BOND_MODE_1      = 2'b00,\n      parameter EXAMPLE_SIMULATION   =   0\n )\n (\n       input    [2:0]      LOOPBACK_IN,\n       input             ENCHANSYNC_IN,\n       output            CHBONDDONE_OUT,\n       output            RXLOSSOFSYNC_OUT,\n       output            RXBUFERR_OUT,\n       output   [63:0]   RXDATA_OUT,\n       output   [1:0]    RXHEADER_OUT,\n       output            RXHEADER_OUT_ERR,\n       input             RXRESET_IN,\n       input               RXUSRCLK2_IN,\n       input             RX1N_IN,\n       input             RX1P_IN,\n       input             CHECK_POLARITY_IN,\n       input             RXPOLARITY_IN,\n       output reg        RX_NEG_OUT,\n       input               REFCLK1_IN,\n       input               GTXRESET_IN,\n       input               CHAN_BOND_RESET,\n       output            PLLLKDET_OUT,\n       output            TXOUTCLK1_OUT,\n       input               POWERDOWN_IN,\n       input               RESET,\n       input               GT_RXCDROVRDEN_IN,\n       input    [1:0]    TXHEADER_IN,\n       input    [63:0]   TXDATA_IN,\n       input             TXRESET_IN,\n       input               TXUSRCLK_IN,\n       input               TXUSRCLK2_IN,\n       output            TXBUFERR_OUT,\n       output            TXDATAVALID_OUT,\n       output            TXDATAVALID_SYMGEN_OUT,\n       output            RXDATAVALID_OUT,\n       input             DRP_CLK_IN,\n       input                     gt_qpllclk_quad1_in,\n       input                     gt_qpllrefclk_quad1_in,\n       input                     gt_qplllock_quad1_in,\n       input                     gt_qpllrefclklost_quad1,\n       output                    gt_to_common_qpllreset_out,\n       input   [9:0]   gt0_drpaddr,\n       input   [15:0]  gt0_drpdi,\n       output  [15:0]  gt0_drpdo,\n       output          gt0_drprdy,\n       input           gt0_drpen,\n       input           gt0_drpwe,\n       output [0:0]           gt_powergood,\n       input             INIT_CLK,\n       input             USER_CLK,\n       output   reg      LINK_RESET_OUT,\n       output   wire      FSM_RESETDONE,\n       output            bufg_gt_clr_out,\n       input             gtwiz_userclk_tx_active_out\n );"}
{"task_id": 1720, "completion": "module first_nns_comb_td\n#(\n\tparameter W = 15,\n\tparameter N =  32\n)\n(\n\tinput [2*W-1:0] g_input,\n\tinput [2*W*N-1:0] e_input,\n\toutput [2*W-1:0] o\n);"}
{"task_id": 1768, "completion": "module check (input unsigned [22:0] a, b, c);"}
{"task_id": 1644, "completion": "module xps_icapi_core #(\n\tparameter C_SPLB_NATIVE_DWIDTH = 128,\n\tparameter C_MPLB_NATIVE_DWIDTH = 128,\n\tparameter C_FAMILY = \"virtex5\",\n\tparameter C_MEM_BASEADDR = 'hffffffff,\n\tparameter C_MEM_HIGHADDR = 'h00000000,\n\tparameter C_RESIM = 1\n)(\n\tinput Bus2IP_Clk,\n\tinput Bus2IP_Reset,\n\tinput [31:0] Bus2IP_Addr,\n\tinput Bus2IP_CS,\n\tinput Bus2IP_RNW,\n\tinput [C_SPLB_NATIVE_DWIDTH-1:0] Bus2IP_Data,\n\tinput [C_SPLB_NATIVE_DWIDTH/8-1:0] Bus2IP_BE,\n\tinput Bus2IP_Burst,\n\tinput [8:0] Bus2IP_BurstLength,\n\tinput Bus2IP_RdReq,\n\tinput Bus2IP_WrReq,\n\toutput IP2Bus_AddrAck,\n\toutput [C_SPLB_NATIVE_DWIDTH-1:0] IP2Bus_Data,\n\toutput IP2Bus_RdAck,\n\toutput IP2Bus_WrAck,\n\toutput IP2Bus_Error,\n\tinput Bus2IP_Mst_Clk,\n\tinput Bus2IP_Mst_Reset,\n\toutput IP2Bus_MstRd_Req,\n\toutput IP2Bus_MstWr_Req,\n\toutput [31:0] IP2Bus_Mst_Addr,\n\toutput [C_MPLB_NATIVE_DWIDTH/8-1:0] IP2Bus_Mst_BE,\n\toutput [11:0] IP2Bus_Mst_Length,\n\toutput IP2Bus_Mst_Type,\n\toutput IP2Bus_Mst_Lock,\n\toutput IP2Bus_Mst_Reset,\n\tinput Bus2IP_Mst_CmdAck,\n\tinput Bus2IP_Mst_Cmplt,\n\tinput Bus2IP_Mst_Error,\n\tinput Bus2IP_Mst_Rearbitrate,\n\tinput Bus2IP_Mst_Cmd_Timeout,\n\tinput [C_MPLB_NATIVE_DWIDTH-1:0] Bus2IP_MstRd_d,\n\tinput [C_MPLB_NATIVE_DWIDTH/8-1:0] Bus2IP_MstRd_rem,\n\tinput Bus2IP_MstRd_sof_n,\n\tinput Bus2IP_MstRd_eof_n,\n\tinput Bus2IP_MstRd_src_rdy_n,\n\tinput Bus2IP_MstRd_src_dsc_n,\n\toutput IP2Bus_MstRd_dst_rdy_n,\n\toutput IP2Bus_MstRd_dst_dsc_n,\n\toutput [C_MPLB_NATIVE_DWIDTH-1:0] IP2Bus_MstWr_d,\n\toutput [C_MPLB_NATIVE_DWIDTH/8-1:0] IP2Bus_MstWr_rem,\n\toutput IP2Bus_MstWr_sof_n,\n\toutput IP2Bus_MstWr_eof_n,\n\toutput IP2Bus_MstWr_src_rdy_n,\n\toutput IP2Bus_MstWr_src_dsc_n,\n\tinput Bus2IP_MstWr_dst_rdy_n,\n\tinput Bus2IP_MstWr_dst_dsc_n,\n\tinput ICAP_Clk,\n\toutput IP2INTC_Irpt\n);"}
{"task_id": 410, "completion": "module shd_fifo(\n    input rst,\n    input wr_clk,\n    input rd_clk,\n    input [127:0] din,\n    input wr_en,\n    input rd_en,\n    output reg [127:0] dout,\n    output full,\n    output empty\n);"}
{"task_id": 1762, "completion": "module sign_inverter #(parameter W = 32)(input wire [W-1:0] data,input wire [1:0] shift_region_flag,input wire operation,output reg [W-1:0] data_out);"}
{"task_id": 1784, "completion": "module ts_pad (\n  inout wire pad,\n  input wire oe,\n  input wire op\n);"}
{"task_id": 1782, "completion": "module address(\n  input CLK,\n  input [23:0] SNES_ADDR,\n  output [23:0] ROM_ADDR,\n  output ROM_HIT,\n  output IS_SAVERAM,\n  output IS_ROM,\n  input [23:0] SAVERAM_MASK,\n  input [23:0] ROM_MASK\n);"}
{"task_id": 1758, "completion": "module SB_RAM2048x2(\n        output [1:0] RDATA,\n        input        RCLK, RCLKE, RE,\n        input  [10:0] RADDR,\n        input         WCLK, WCLKE, WE,\n        input  [10:0] WADDR,\n        input  [1:0] MASK, WDATA\n    );"}
{"task_id": 1795, "completion": "module check (input unsigned [22:0] a, b, input unsigned [45:0] c);"}
{"task_id": 1777, "completion": "module t (/*AUTOARG*/\n   // Inputs\n   clk\n   );\n   input clk;\n   reg [7:0] cyc; initial cyc = 0;\n   reg [31:0] in;\n   wire [31:0] out;\n   t_extend_class_v sub (.in(in), .out(out));\n   always @ (posedge clk) begin\n      cyc <= cyc + 8'd1;\n      if (cyc == 8'd1) begin\n\t in <= 32'h10;\n      end\n      if (cyc == 8'd2) begin\n\t if (out != 32'h11) $stop;\n      end\n      if (cyc == 8'd9) begin\n\t $write(\"*-* All Finished *-*\\n\");\n\t $finish;\n      end\n   end\nendmodule"}
{"task_id": 1721, "completion": "module p_I_FD (Q,D,C,E);\nparameter INIT=1'b0;\noutput Q;\ninput  D;\ninput  C;\ninput  E;\nwire   Dtemp;\n\nmodule p_O_FD (Q,D,C,E);\nparameter INIT = 1'b0; \noutput Q;\ninput  D;\ninput  C;\ninput  E;\nwire   Qtemp;\n\nmodule p_I_FD_1 (Q,D,C,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\nwire   Dtemp;\n\nmodule p_O_FD_1 (Q,D,C,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\nwire   Qtemp;\n\nmodule p_I_FDC (Q,D,C,CLR,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\nwire   Dtemp;\n\nmodule p_O_FDC (Q,D,C,CLR,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\nwire   Qtemp;\n\nmodule p_I_FDC_1 (Q,D,C,CLR,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\nwire   Dtemp;\n\nmodule p_O_FDC_1 (Q,D,C,CLR,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\nwire   Qtemp;\n\nmodule p_I_FDCE (Q,D,C,CLR,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDCE (Q,D,C,CLR,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDCE_1 (Q,D,C,CLR,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDCE_1 (Q,D,C,CLR,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDCP (Q,D,C,CLR,PRE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput PRE;\nwire   Dtemp;\n\nmodule p_O_FDCP (Q,D,C,CLR,PRE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput PRE;\nwire   Qtemp;\n\nmodule p_I_FDCP_1 (Q,D,C,CLR,PRE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput PRE;\nwire   Dtemp;\n\nmodule p_O_FDCP_1 (Q,D,C,CLR,PRE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput PRE;\nwire   Qtemp;\n\nmodule p_I_FDCPE (Q,D,C,CLR,PRE,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput PRE;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDCPE (Q,D,C,CLR,PRE,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CLR;\ninput PRE;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDE (Q,D,C,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDE (Q,D,C,CE,E);\nparameter INIT=1'b0;\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDE_1 (Q,D,C,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDE_1 (Q,D,C,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDP (Q,D,C,PRE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput PRE;\nwire   Dtemp;\n\nmodule p_O_FDP (Q,D,C,PRE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput PRE;\nwire   Qtemp;\n\nmodule p_I_FDP_1 (Q,D,C,PRE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput PRE;\nwire   Dtemp;\n\nmodule p_O_FDP_1 (Q,D,C,PRE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput PRE;\nwire   Qtemp;\n\nmodule p_I_FDPE (Q,D,C,PRE,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput PRE;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDPE (Q,D,C,PRE,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput PRE;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDPE_1 (Q,D,C,PRE,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput PRE;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDPE_1 (Q,D,C,PRE,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput PRE;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDR (Q,D,C,R,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\nwire   Dtemp;\n\nmodule p_O_FDR (Q,D,C,R,E);\nparameter INIT=1'b0;\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\nwire   Qtemp;\n\nmodule p_I_FDR_1 (Q,D,C,R,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\nwire   Dtemp;\n\nmodule p_O_FDR_1 (Q,D,C,R,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\nwire   Qtemp;\n\nmodule p_I_FDRE (Q,D,C,R,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDRE (Q,D,C,R,CE,E);\nparameter INIT=1'b0;\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDRE_1 (Q,D,C,R,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDRE_1 (Q,D,C,R,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDRS (Q,D,C,R,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput S;\nwire   Dtemp;\n\nmodule p_O_FDRS (Q,D,C,R,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput S;\nwire   Qtemp;\n\nmodule p_I_FDRS_1 (Q,D,C,R,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput S;\nwire   Dtemp;\n\nmodule p_O_FDRS_1 (Q,D,C,R,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput S;\nwire   Qtemp;\n\nmodule p_I_FDRSE (Q,D,C,R,S,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput S;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDRSE (Q,D,C,R,S,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput S;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDRSE_1 (Q,D,C,R,S,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput S;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDRSE_1 (Q,D,C,R,S,CE,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput R;\ninput S;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDS (Q,D,C,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput S;\nwire   Dtemp;\n\nmodule p_O_FDS (Q,D,C,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput S;\nwire   Qtemp;\n\nmodule p_I_FDS_1 (Q,D,C,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput S;\nwire   Dtemp;\n\nmodule p_O_FDS_1 (Q,D,C,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput S;\nwire   Qtemp;\n\nmodule p_I_FDSE (Q,D,C,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput S;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDSE (Q,D,C,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput S;\ninput CE;\nwire   Qtemp;\n\nmodule p_I_FDSE_1 (Q,D,C,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput S;\ninput CE;\nwire   Dtemp;\n\nmodule p_O_FDSE_1 (Q,D,C,S,E);\noutput Q;\ninput  D;\ninput  C;\ninput  E;\ninput S;\ninput CE;\nwire   Qtemp;"}
{"task_id": 1780, "completion": "module ram32x32 (\n    input [4 : 0] addra,\n    input [4 : 0] addrb,\n    input clka,\n    input clkb,\n    input [31 : 0] dina,\n    input [31 : 0] dinb,\n    output [31 : 0] douta,\n    output [31 : 0] doutb,\n    input wea,\n    input web\n);"}
{"task_id": 1786, "completion": "module axi_protocol_converter_v2_1_8_b2s_ar_channel #(\n        parameter integer C_ID_WIDTH = 4,\n        parameter integer C_AXI_ADDR_WIDTH = 32\n    )(\n        input  wire clk,\n        input  wire reset,\n        input  wire [C_ID_WIDTH-1:0] s_arid,\n        input  wire [C_AXI_ADDR_WIDTH-1:0] s_araddr,\n        input  wire [7:0] s_arlen,\n        input  wire [2:0] s_arsize,\n        input  wire [1:0] s_arburst,\n        input  wire s_arvalid,\n        output wire s_arready,\n        output wire m_arvalid,\n        output wire [C_AXI_ADDR_WIDTH-1:0] m_araddr,\n        input  wire m_arready,\n        output wire [C_ID_WIDTH-1:0] r_arid,\n        output wire r_push,\n        output wire r_rlast,\n        input  wire r_full\n    );"}
{"task_id": 1653, "completion": "module hpdmc_datactl(\n\tinput sys_clk,\n\tinput sdram_rst,\n\tinput read,\n\tinput write,\n\tinput [3:0] concerned_bank,\n\toutput reg read_safe,\n\toutput reg write_safe,\n\toutput [3:0] precharge_safe,\n\toutput reg ack,\n\toutput reg direction,\n\toutput direction_r,\n\tinput tim_cas,\n\tinput [1:0] tim_wr\n);"}
{"task_id": 1717, "completion": "module ltcminer_icarus (osc_clk, RxD, TxD, led, extminer_rxd, extminer_txd, dip, TMP_SCL, TMP_SDA, TMP_ALERT);"}
{"task_id": 1813, "completion": "module uart_sync_flops(\n  input rst_i,\n  input clk_i,\n  input stage1_rst_i,\n  input stage1_clk_en_i,\n  input [width-1:0] async_dat_i,\n  output [width-1:0] sync_dat_o\n);"}
{"task_id": 1806, "completion": "module Delay(\n    input CLK,\n    input RST,\n    input [11:0] DELAY_MS,\n    input DELAY_EN,\n    output DELAY_FIN\n);"}
{"task_id": 1772, "completion": "module ACA_I_N32_Q8(    input [31:0] in1,    input [31:0] in2,    output [32:0] res);"}
{"task_id": 1805, "completion": "module synth_reg (i, ce, clr, clk, o);   parameter width  = 8;   parameter latency  = 1;   input[width - 1:0] i;   input ce,clr,clk;   output[width - 1:0] o;"}
{"task_id": 1712, "completion": "module GDA_St_N16_M4_P8(\n    input  [15:0] in1,\n    input  [15:0] in2,\n    output [16:0] res\n);"}
{"task_id": 1827, "completion": "module ANN_fpext_32ns_64_1\n#(parameter\n    ID         = 5,\n    NUM_STAGE  = 1,\n    din0_WIDTH = 32,\n    dout_WIDTH = 64\n)(\n    input  wire [din0_WIDTH-1:0] din0,\n    output wire [dout_WIDTH-1:0] dout\n);"}
{"task_id": 1793, "completion": "module ColorBin2Channels(\n\tb,\n\tchannels\n);\n\n\tparameter color_width = 8;\n\tparameter color_channels = 3;\n\n\tinput b;\n\toutput [color_channels * color_width - 1 : 0] channels;"}
{"task_id": 1812, "completion": "module GDA_St_N8_M8_P1(\n    input  [7:0] in1,\n    input  [7:0] in2,\n    output [8:0] res\n);"}
{"task_id": 1487, "completion": "module fpu_mul( clk, rst, enable, rmode, opa, opb, ready, outfp); input clk; input rst; input enable; input [1:0] rmode; input [63:0] opa, opb; output ready; output [63:0] outfp;"}
{"task_id": 1819, "completion": "module t (input wire clk, input wire rst, output reg [31:0] cyc);"}
{"task_id": 1742, "completion": "module rw_manager_write_decoder(\n\tck,\n\treset_n,\n\tdo_lfsr,\n\tdm_lfsr,\n\tdo_lfsr_step,\n\tdm_lfsr_step,\n\tdo_code,\n\tdm_code,\n\tdo_data,\n\tdm_data\n);\n\n\tparameter DATA_WIDTH = \"\";\n\tparameter AFI_RATIO\t= \"\";\n\n\tlocalparam NUMBER_OF_WORDS = 2 * AFI_RATIO;\n\tlocalparam DO_LFSR_WIDTH = ((AFI_RATIO == 4) ? 72 : 36);\n\n\tinput ck;\n\tinput reset_n;\n\tinput do_lfsr;\n\tinput dm_lfsr;\n\tinput do_lfsr_step;\n\tinput dm_lfsr_step;\n\tinput [3:0] do_code;\n\tinput [2:0] dm_code;\n\toutput [2 * DATA_WIDTH * AFI_RATIO - 1 : 0] do_data;\n\toutput [NUMBER_OF_WORDS-1:0] dm_data;"}
{"task_id": 1745, "completion": "module dig(\n    input nres,\n    output [7:0] cfg,\n    input clk_cog,\n    input clk_pll,\n    input [31:0] pin_in,\n    output [31:0] pin_out,\n    output [31:0] pin_dir,\n    output [7:0] cog_led\n);"}
{"task_id": 1740, "completion": "module latch_002_gate (dword, vect, sel, st);\n   output reg [63:0] dword;\n   input wire [7:0]  vect;\n   input wire [7:0]  sel;\n   input         st;"}
{"task_id": 1847, "completion": "module autoinst_bits_lba_gi (\n   input wire CLK,\n   input wire WWADoe,\n   input wire WWCoe,\n   input wire [8:0] WWCmdIfOE,\n   input wire WWADHold,\n   input wire [31:0] iWWADO,\n   output wire [8:0] WWCmdI,\n   output wire [31:0] WWADI,\n   inout wire [31:0] WWADB,\n   inout wire [8:0] WWCmdB\n);"}
{"task_id": 1755, "completion": "module BarrelShifter(input [31:0] Rs,Rm,IR,input SR29_IN,output SR29_OUT,output [31:0] Out);"}
{"task_id": 1835, "completion": "module CountGenerator(\n\tclk,\n\trst_n,\n\tin_enable,\n\tin_data,\n\tout_ready,\n\tout_data,\n\tcount_x,\n\tcount_y);\n\tparameter work_mode = 0;\n\tparameter data_width = 8;\n\tparameter im_width = 320;\n\tparameter im_height = 240;\n\tparameter im_width_bits = 9;\n\tinput clk;\n\tinput rst_n;\n\tinput in_enable;\n\tinput [data_width - 1 : 0] in_data;\n\toutput out_ready;\n\toutput[data_width - 1 : 0] out_data;\n\toutput reg[im_width_bits - 1 : 0] count_x;\n\toutput reg[im_width_bits - 1 : 0] count_y;"}
{"task_id": 1823, "completion": "module template_periph_16b (\n    output [15:0] per_dout,\n    input mclk,\n    input [13:0] per_addr,\n    input [15:0] per_din,\n    input per_en,\n    input [1:0] per_we,\n    input puc_rst\n);"}
{"task_id": 1814, "completion": "module pcie_clocking #(\n  parameter    G_DIVIDE_VAL = 2,  // use 2 or 4\n  parameter    REF_CLK_FREQ = 1  // use 0 or 1\n)(\n  input  clkin_pll,\n  input  clkin_dcm,\n  input  rst,\n  output coreclk,\n  output userclk,\n  output gtx_usrclk,\n  output txsync_clk,\n  output locked,\n  input  fast_train_simulation_only\n);"}
{"task_id": 1864, "completion": "module ANN_mux_4to1_sel2_32_1 #(\nparameter\n    ID                = 0,\n    NUM_STAGE         = 1,\n    din1_WIDTH       = 32,\n    din2_WIDTH       = 32,\n    din3_WIDTH       = 32,\n    din4_WIDTH       = 32,\n    din5_WIDTH         = 32,\n    dout_WIDTH            = 32\n)(\n    input  [31 : 0]     din1,\n    input  [31 : 0]     din2,\n    input  [31 : 0]     din3,\n    input  [31 : 0]     din4,\n    input  [1 : 0]    din5,\n    output [31 : 0]   dout);"}
{"task_id": 1821, "completion": "module vga_read_iface (\n    input         wb_clk_i,\n    input         wb_rst_i,\n    input  [16:1] wbs_adr_i,\n    input  [ 1:0] wbs_sel_i,\n    output [15:0] wbs_dat_o,\n    input         wbs_stb_i,\n    output        wbs_ack_o,\n    output     [17:1] wbm_adr_o,\n    input      [15:0] wbm_dat_i,\n    output reg        wbm_stb_o,\n    input             wbm_ack_i,\n    input        memory_mapping1,\n    input        read_mode,\n    input  [1:0] read_map_select,\n    input  [3:0] color_compare,\n    input  [3:0] color_dont_care,\n    output [7:0] latch0,\n    output [7:0] latch1,\n    output [7:0] latch2,\n    output [7:0] latch3\n  );"}
{"task_id": 1631, "completion": "module fmrv32im_csr\n  (\n   input              RST_N,\n   input              CLK,\n\n   input [11:0]       CSR_ADDR,\n   input              CSR_WE,\n   input [31:0]       CSR_WDATA,\n   input [31:0]       CSR_WMASK,\n   output reg [31:0]  CSR_RDATA,\n\n   input              EXT_INTERRUPT,\n   input              SW_INTERRUPT,\n   input [31:0]       SW_INTERRUPT_PC,\n   input              EXCEPTION,\n   input [11:0]       EXCEPTION_CODE,\n   input [31:0]       EXCEPTION_ADDR,\n   input [31:0]       EXCEPTION_PC,\n   input              TIMER_EXPIRED,\n   input              RETIRE,\n\n   output wire [31:0] HANDLER_PC,\n   output wire [31:0] EPC,\n   output wire        INTERRUPT_PENDING,\n   output wire        INTERRUPT,\n\n   output             ILLEGAL_ACCESS\n   );"}
{"task_id": 1747, "completion": "module t (/*AUTOARG*/\n   // Inputs\n   clk\n   );\n   input clk;"}
{"task_id": 1686, "completion": "module trace_cntrl_trace_cntrl_s_axi #(\n    parameter C_S_AXI_ADDR_WIDTH = 6,\n    parameter C_S_AXI_DATA_WIDTH = 32\n)(\n    input wire ACLK,\n    input wire ARESET,\n    input wire ACLK_EN,\n    input wire [C_S_AXI_ADDR_WIDTH-1:0] AWADDR,\n    input wire AWVALID,\n    output wire AWREADY,\n    input wire [C_S_AXI_DATA_WIDTH-1:0] WDATA,\n    input wire [C_S_AXI_DATA_WIDTH/8-1:0] WSTRB,\n    input wire WVALID,\n    output wire WREADY,\n    output wire [1:0] BRESP,\n    output wire BVALID,\n    input wire BREADY,\n    input wire [C_S_AXI_ADDR_WIDTH-1:0] ARADDR,\n    input wire ARVALID,\n    output wire ARREADY,\n    output wire [C_S_AXI_DATA_WIDTH-1:0] RDATA,\n    output wire [1:0] RRESP,\n    output wire RVALID,\n    input wire RREADY,\n    output wire interrupt,\n    output wire ap_start,\n    input wire ap_done,\n    input wire ap_ready,\n    input wire ap_idle,\n    output wire [63:0] data_compare_V,\n    output wire [31:0] length_r,\n    output wire [31:0] sample_rate\n);"}
{"task_id": 1770, "completion": "module top; logic [3:0][7:0] word32; int idx; int x; wire [7:0] word1 = word32[1]; initial begin"}
{"task_id": 1873, "completion": "module t\n  (\n   input wire CLK\n   );"}
{"task_id": 1820, "completion": "module op_lut_regs #( parameter NUM_OUTPUT_QUEUES = 5, parameter LUT_DEPTH_BITS = 4, parameter UDP_REG_SRC_WIDTH = 2 )( input reg_req_in, input reg_ack_in, input reg_rd_wr_L_in, input [`UDP_REG_ADDR_WIDTH-1:0] reg_addr_in, input [`CPCI_NF2_DATA_WIDTH-1:0] reg_data_in, input [UDP_REG_SRC_WIDTH-1:0] reg_src_in, output reg reg_req_out, output reg reg_ack_out, output reg reg_rd_wr_L_out, output reg [`UDP_REG_ADDR_WIDTH-1:0] reg_addr_out, output reg [`CPCI_NF2_DATA_WIDTH-1:0] reg_data_out, output reg [UDP_REG_SRC_WIDTH-1:0] reg_src_out, output [LUT_DEPTH_BITS-1:0] rd_addr, output reg rd_req, input [NUM_OUTPUT_QUEUES-1:0] rd_oq, input rd_wr_protect, input [47:0] rd_mac, input rd_ack, output [LUT_DEPTH_BITS-1:0] wr_addr, output reg wr_req, output [NUM_OUTPUT_QUEUES-1:0] wr_oq, output wr_protect, output [47:0] wr_mac, input wr_ack, input lut_hit, input lut_miss, input clk, input reset );"}
{"task_id": 1840, "completion": "module altera_reset_synchronizer\n#(\n    parameter ASYNC_RESET = 1,\n    parameter DEPTH       = 2\n)\n(\n    input   reset_in,\n    input   clk,\n    output  reset_out\n);"}
{"task_id": 1872, "completion": "module altera_avalon_st_pipeline_base (\n                                       clk,\n                                       reset,\n                                       in_ready,\n                                       in_valid,\n                                       in_data,\n                                       out_ready,\n                                       out_valid,\n                                       out_data\n                                       );\n\n   parameter  SYMBOLS_PER_BEAT  = 1;\n   parameter  BITS_PER_SYMBOL   = 8;\n   parameter  PIPELINE_READY    = 1;\n   localparam DATA_WIDTH = SYMBOLS_PER_BEAT * BITS_PER_SYMBOL;\n   input clk;\n   input reset;\n   output in_ready;\n   input  in_valid;\n   input [DATA_WIDTH-1:0] in_data;\n   input                  out_ready;\n   output                 out_valid;\n   output [DATA_WIDTH-1:0] out_data;"}
{"task_id": 1764, "completion": "module LU8PEEng (clk, start, N, offset, done, burst_begin, mem_local_be, mem_local_read_req, mem_local_size, mem_local_wdata, mem_local_write_req, mem_local_rdata, mem_local_rdata_valid, mem_local_ready, mem_local_wdata_req, reset_n, mem_local_addr);"}
{"task_id": 1859, "completion": "module FIFO(data_out, empty, full, data_in, push, pop, reset, clk);\n  parameter DEPTH = 8;\n  parameter WIDTH = 8;\n  output [WIDTH-1:0] data_out;\n  output empty;\n  output full;\n  input [WIDTH-1:0] data_in;\n  input push;\n  input pop;\n  input reset;\n  input clk;"}
{"task_id": 1887, "completion": "module mig_7series_v4_0_ddr_carry_latch_and #( parameter C_FAMILY = \"virtex6\" )( input wire CIN, input wire I, output wire O );"}
{"task_id": 1107, "completion": "module cf_adc_if (\n  input           adc_clk_in_p,\n  input           adc_clk_in_n,\n  input   [ 7:0]  adc_data_in_p,\n  input   [ 7:0]  adc_data_in_n,\n  input           adc_data_or_p,\n  input           adc_data_or_n,\n  output          adc_clk,\n  output  [15:0]  adc_data,\n  output          adc_or,\n  input           up_dmode,\n  input           up_delay_sel,\n  input           up_delay_rwn,\n  input   [ 3:0]  up_delay_addr,\n  input   [ 4:0]  up_delay_wdata,\n  input           delay_clk,\n  output          delay_ack,\n  output  [ 4:0]  delay_rdata,\n  output          delay_locked);"}
{"task_id": 1902, "completion": "module t; parameter int SIZES [3:1] = '{10,20,30}; parameter int SUMS3 = SIZES[3]; parameter int SUMS2 = SIZES[2]; parameter int SUMS1 = SIZES[1]; parameter int LE_SIZES [1:3] = '{10,20,30}; parameter int LE_SUMS3 = LE_SIZES[3]; parameter int LE_SUMS2 = LE_SIZES[2]; parameter int LE_SUMS1 = LE_SIZES[1]; function int from_array(int index); if (index != 0); return SIZES[index]; endfunction function int from_array_le(int index); if (index != 0); return LE_SIZES[index]; endfunction initial begin"}
{"task_id": 1888, "completion": "module axis_red_pitaya_adc #(\n  parameter integer ADC_DATA_WIDTH = 14,\n  parameter integer AXIS_TDATA_WIDTH = 32\n)(\n  output wire                        adc_clk,\n  output wire                        adc_csn,\n  input  wire                        adc_clk_p,\n  input  wire                        adc_clk_n,\n  input  wire [ADC_DATA_WIDTH-1:0]   adc_dat_a,\n  input  wire [ADC_DATA_WIDTH-1:0]   adc_dat_b,\n  output wire                        m_axis_tvalid,\n  output wire [AXIS_TDATA_WIDTH-1:0] m_axis_tdata\n);"}
{"task_id": 1858, "completion": "module packet_builder #(parameter NUM_CHAN = 2)(\n    input rxclk,\n    input reset,\n    input [31:0] timestamp_clock,\n    input [3:0] channels,\n    input [15:0] chan_fifodata,\n    input [NUM_CHAN:0] chan_empty,\n    input [9:0] chan_usedw,\n    output reg [3:0] rd_select,\n    output reg chan_rdreq,\n    output reg WR,\n    output reg [15:0] fifodata,\n    input have_space,\n    input wire [31:0] rssi_0,\n    input wire [31:0] rssi_1,\n    input wire [31:0] rssi_2,\n    input wire [31:0] rssi_3,\n    output wire [7:0] debugbus,\n    input [NUM_CHAN:0] underrun\n    );"}
{"task_id": 1894, "completion": "module axi_protocol_converter_v2_1_7_b2s_ar_channel #(\n    parameter integer C_ID_WIDTH = 4,\n    parameter integer C_AXI_ADDR_WIDTH = 32\n)(\n    input  wire clk,\n    input  wire reset,\n    input  wire [C_ID_WIDTH-1:0] s_arid,\n    input  wire [C_AXI_ADDR_WIDTH-1:0] s_araddr,\n    input  wire [7:0] s_arlen,\n    input  wire [2:0] s_arsize,\n    input  wire [1:0] s_arburst,\n    input  wire s_arvalid,\n    output wire s_arready,\n    output wire m_arvalid,\n    output wire [C_AXI_ADDR_WIDTH-1:0] m_araddr,\n    input  wire m_arready,\n    output wire [C_ID_WIDTH-1:0] r_arid,\n    output wire r_push,\n    output wire r_rlast,\n    input  wire r_full\n);"}
{"task_id": 1906, "completion": "module check (input signed [22:0] a, b, input signed [45:0] c);"}
{"task_id": 1890, "completion": "module CRC_16(input BITVAL, input Enable, input CLK, input RST, output reg [15:0] CRC);"}
{"task_id": 1889, "completion": "module altera_avalon_st_pipeline_base ( clk, reset, in_ready, in_valid, in_data, out_ready, out_valid, out_data ); parameter  SYMBOLS_PER_BEAT  = 1; parameter  BITS_PER_SYMBOL   = 8; parameter  PIPELINE_READY    = 1; localparam DATA_WIDTH = SYMBOLS_PER_BEAT * BITS_PER_SYMBOL; input clk; input reset; output in_ready; input  in_valid; input [DATA_WIDTH-1:0] in_data; input                  out_ready; output                 out_valid; output [DATA_WIDTH-1:0] out_data;"}
{"task_id": 1825, "completion": "module arbiter(\n\tinput\t[63:0] idat_i,\n\tinput\t[63:0] iadr_i,\n\tinput\t iwe_i,\n\tinput\t icyc_i,\n\tinput\t istb_i,\n\tinput\t[1:0] isiz_i,\n\tinput\t isigned_i,\n\toutput\t iack_o,\n\toutput\t[63:0] idat_o,\n\tinput\t[63:0] ddat_i,\n\tinput\t[63:0] dadr_i,\n\tinput\t dwe_i,\n\tinput\t dcyc_i,\n\tinput\t dstb_i,\n\tinput\t[1:0] dsiz_i,\n\tinput\t dsigned_i,\n\toutput\t dack_o,\n\toutput\t[63:0] ddat_o,\n\toutput\t[63:0] xdat_o,\n\toutput\t[63:0] xadr_o,\n\toutput\t xwe_o,\n\toutput\t xcyc_o,\n\toutput\t xstb_o,\n\toutput\t[1:0] xsiz_o,\n\toutput\t xsigned_o,\n\tinput\t xack_i,\n\tinput\t[63:0] xdat_i,\n\tinput\t clk_i,\n\tinput\t reset_i\n);"}
{"task_id": 1893, "completion": "module altera_up_av_config_auto_init_ltm (\n\trom_address,\n\trom_data\n);\ninput\t\t[ 4: 0] \trom_address;\noutput\t\t[23: 0] \trom_data;"}
{"task_id": 1874, "completion": "module PdmSer(\n    input clk,\n    input en,\n    input [15:0] din,\n    output done,\n    output pwm_audio_o\n);"}
{"task_id": 1625, "completion": "module eth_transmitcontrol (MTxClk, TxReset, TxUsedDataIn, TxUsedDataOut, TxDoneIn, TxAbortIn, TxStartFrmIn, TPauseRq, TxUsedDataOutDetected, TxFlow, DlyCrcEn, TxPauseTV, MAC, TxCtrlStartFrm, TxCtrlEndFrm, SendingCtrlFrm, CtrlMux, ControlData, WillSendControlFrame, BlockTxDone);"}
{"task_id": 1912, "completion": "module zet_arlog (    input  [15:0] x,    input  [15:0] y,    input  [ 2:0] f,    output [15:0] o,    input         word_op,    input         cfi,    output        cfo,    output        afo,    output        ofo  );"}
{"task_id": 1899, "completion": "module rda_bitcounter (\n\taclr,\n\tclk_en,\n\tclock,\n\tcnt_en,\n\tsset,\n\tcout,\n\tq);\n\n\tinput\t  aclr;\n\tinput\t  clk_en;\n\tinput\t  clock;\n\tinput\t  cnt_en;\n\tinput\t  sset;\n\toutput\t  cout;\n\toutput\t[4:0]  q;"}
{"task_id": 1688, "completion": "module mcb_flow_control #(    parameter TCQ = 100,    parameter FAMILY = \"SPARTAN6\"  )(   input clk_i,   input [9:0] rst_i,   output reg cmd_rdy_o,   input cmd_valid_i,   input [2:0] cmd_i,   input [31:0] addr_i,   input [5:0] bl_i,   input mcb_cmd_full,   output reg [2:0] cmd_o,   output reg [31:0] addr_o,   output reg [5:0] bl_o,   output cmd_en_o,   input last_word_wr_i,   input wdp_rdy_i,   output wdp_valid_o,   output wdp_validB_o,   output wdp_validC_o,   output [31:0] wr_addr_o,   output [5:0] wr_bl_o,   input last_word_rd_i,   input rdp_rdy_i,   output rdp_valid_o,   output [31:0] rd_addr_o,   output [5:0] rd_bl_o );"}
{"task_id": 1925, "completion": "module mu_add (input longint unsigned a, b, output longint unsigned sc, ss);"}
{"task_id": 1935, "completion": "module buart(\n   input wire clk,\n   input wire resetq,\n   input wire rx,\n   output wire tx,\n   input wire rd,\n   input wire wr,\n   output wire valid,\n   output wire busy,\n   input wire [7:0] tx_data,\n   output wire [7:0] rx_data\n);"}
{"task_id": 1917, "completion": "module versatile_fifo_async_cmp ( wptr, rptr, fifo_empty, fifo_full, wclk, rclk, rst );\n   parameter ADDR_WIDTH = 4;\n   parameter N = ADDR_WIDTH-1;\n   input [N:0]  wptr, rptr;\n   output reg fifo_empty, fifo_full;\n   input wclk, rclk, rst;\n   reg direction, direction_set, direction_clr;\n   wire async_empty, async_full;\n   reg fifo_full2, fifo_empty2;"}
{"task_id": 1815, "completion": "module VGA_Controller(\n        input [9:0] iRed,\n        input [9:0] iGreen,\n        input [9:0] iBlue,\n        output reg oRequest,\n        output reg [9:0] oVGA_R,\n        output reg [9:0] oVGA_G,\n        output reg [9:0] oVGA_B,\n        output reg oVGA_H_SYNC,\n        output reg oVGA_V_SYNC,\n        output reg oVGA_SYNC,\n        output reg oVGA_BLANK,\n        input iCLK,\n        input iRST_N,\n        input iZOOM_MODE_SW\n    );"}
{"task_id": 1944, "completion": "module sd_bram_block_dp #(\n   parameter DATA = 32,\n   parameter ADDR = 7\n) (\n   input  wire            a_clk,\n   input  wire            a_wr,\n   input  wire [ADDR-1:0] a_addr,\n   input  wire [DATA-1:0] a_din,\n   output reg  [DATA-1:0] a_dout,\n \n   input  wire            b_clk,\n   input  wire            b_wr,\n   input  wire [ADDR-1:0] b_addr,\n   input  wire [DATA-1:0] b_din,\n   output reg  [DATA-1:0] b_dout\n);"}
{"task_id": 1910, "completion": "module spihub(\n\tinput  wire       fclk,\n\tinput  wire       rst_n,\n\toutput reg        sdcs_n,\n\toutput wire       sdclk,\n\toutput wire       sddo,\n\tinput  wire       sddi,\n\tinput  wire       zx_sdcs_n_val,\n\tinput  wire       zx_sdcs_n_stb,\n\tinput  wire       zx_sd_start,\n\tinput  wire [7:0] zx_sd_datain,\n\toutput wire [7:0] zx_sd_dataout,\n\tinput  wire       avr_lock_in,\n\toutput reg        avr_lock_out,\n\tinput  wire       avr_sdcs_n,\n\tinput  wire       avr_sd_start,\n\tinput  wire [7:0] avr_sd_datain,\n\toutput wire [7:0] avr_sd_dataout\n);"}
{"task_id": 1923, "completion": "module latch (/*AUTOARG*/\n              // Outputs\n              q,\n              // Inputs\n              en, d\n              );\n   output    q;\n   input     en;\n   input    d;\nendmodule"}
{"task_id": 1822, "completion": "module input_fifo ( clk, srst, din, wr_en, rd_en, dout, full, wr_ack, empty );"}
{"task_id": 1915, "completion": "module altpcie_pll_phy2 (\n\t\tareset,\n\t\tinclk0,\n\t\tc0,\n\t\tc1,\n\t\tc2,\n\t\tlocked);\n\n\tinput\tareset;\n\tinput\tinclk0;\n\toutput\tc0;\n\toutput\tc1;\n\toutput\tc2;\n\toutput\tlocked;"}
{"task_id": 1922, "completion": "module mult16 (clk, resetb, start, done, ain, bin, yout);\nparameter N = 16;\ninput clk;\ninput resetb;\ninput start;\ninput [15:0] ain;\ninput [15:0] bin;\noutput [31:0] yout;\noutput done;"}
{"task_id": 1936, "completion": "module zet_exec (    input         clk,    input         rst,    input [`IR_SIZE-1:0] ir,    input [15:0]  off,    input [15:0]  imm,    output [15:0] cs,    output [15:0] ip,    output        of,    output        zf,    output        cx_zero,    input [15:0]  memout,    output [15:0] wr_data,    output [19:0] addr,    output        we,    output        m_io,    output        byteop,    input         block,    output        div_exc,    input         wrip0,    output        ifl,    output        tfl,    output        wr_ss  );"}
{"task_id": 1620, "completion": "module gpu(\n  input wire iClock,\n  input wire iReset,\n  output wire oFramBufferWe,\n  output wire [15:0] oFramBufferData,\n  output wire [15:0] oFramBufferAddr,\n  output wire [15:0] oMcuAddr,\n  output reg oMcuReadRequest,\n  input wire [3:0] iMcuRegSelect,\n  input wire [7:0] iMcuWriteData,\n  input wire [7:0] iMcuReadData,\n  input wire iMcuWe,\n  output wire [7:0] oSTAT,\n  output wire [7:0] oLCDC,\n  output wire [7:0] oSCY,\n  output wire [7:0] oSCX,\n  output wire [7:0] oLY,\n  output wire [7:0] oLYC,\n  output wire [7:0] oDMA,\n  output wire [7:0] oBGP,\n  output wire [7:0] oOBP0,\n  output wire [7:0] oOBP1,\n  output wire [7:0] oWY,\n  output wire [7:0] oWX\n);"}
{"task_id": 1957, "completion": "module CPU (data, address, rw, clock, reset);\n        inout [15:0] data;\n        output [15:0] address;\n        input rw;\n        input clock, reset;"}
{"task_id": 1881, "completion": "module control (    input wire enable,    input wire clk,    input wire rst,    input wire [63:0] data,    output reg [63:0] data_out64,    output reg [31:0] data_out32,    output reg [15:0] data_out16,    input wire [31:0] wget_optmode,    input wire [15:0] parameter_Block16,    input wire [31:0] parameter_Block32,    input wire [63:0] parameter_Block64,    output reg [63:0] address,    output reg [63:0] buffer_command,    output reg [7:0] bRequest,    output reg [31:0] wset_optmode,    output reg [15:0] config_trace,    output reg local,    output reg global,    output reg specific,    output reg busy,    output reg [7:0] debug_Unit_ID,    output reg [7:0] interface_ID,    output reg reset_endpoint )"}
{"task_id": 1955, "completion": "module peripheral_crc_7(clk , rst , d_in , cs , addr , rd , wr, d_out );\n    input clk;\n    input rst;\n    input [15:0] d_in;\n    input cs;\n    input [3:0] addr;\n    input rd;\n    input wr;\n    output reg [15:0] d_out;"}
{"task_id": 1830, "completion": "module sha256_transform #(parameter NUM_ROUNDS = 64) (input clk, input [255:0] rx_state, input [511:0] rx_input, output reg [255:0] tx_hash);"}
{"task_id": 1950, "completion": "module fsm_using_always (\n    input clock,\n    input reset,\n    input req_0,\n    input req_1,\n    output reg gnt_0,\n    output reg gnt_1\n);"}
{"task_id": 1948, "completion": "module lsu_wb_router (input [8191:0] in_rd_data, input [6:0] in_wftag_resp, input in_ack, input [63:0] in_exec_value, input [11:0] in_lddst_stsrc_addr, input [3:0] in_reg_wr_en, input [31:0] in_instr_pc, input in_gm_or_lds, output [8:0] out_sgpr_dest_addr, output [127:0] out_sgpr_dest_data, output [3:0] out_sgpr_dest_wr_en, output out_sgpr_instr_done, output [5:0] out_sgpr_instr_done_wfid, output [9:0] out_vgpr_dest_addr, output [8191:0] out_vgpr_dest_data, output [3:0] out_vgpr_dest_wr_en, output [63:0] out_vgpr_dest_wr_mask, output out_vgpr_instr_done, output [5:0] out_vgpr_instr_done_wfid, output [31:0] out_tracemon_retire_pc, output out_gm_or_lds, output out_rfa_dest_wr_req);"}
{"task_id": 1886, "completion": "module zet_rxr16 (input [15:0] x, input ci, input [4:0] y, input e, output reg [15:0] w, output reg co);"}
{"task_id": 1961, "completion": "module NaN_mod_32(\ninput wire [1:0] operation,\ninput wire [31:0] data1,\ninput wire [31:0] data2,\noutput reg NaN_flag\n);"}
{"task_id": 1875, "completion": "module adc_ltc2308(\n\tclk,\n\tmeasure_start,\n\tmeasure_ch,\n\tmeasure_done,\n\tmeasure_dataread,\n\tADC_CONVST,\n\tADC_SCK,\n\tADC_SDI,\n\tADC_SDO\n);"}
{"task_id": 1931, "completion": "module altpcie_pll_125_250 (\n\tareset,\n\tinclk0,\n\tc0);\n\n\tinput\t areset;\n\tinput\t inclk0;\n\toutput\t c0;"}
{"task_id": 1987, "completion": "module psi2c_fifo (\n\taclr,\n\tclock,\n\tdata,\n\trdreq,\n\twrreq,\n\tempty,\n\tfull,\n\tq\n);\n\tinput\t  aclr;\n\tinput\t  clock;\n\tinput\t[11:0]  data;\n\tinput\t  rdreq;\n\tinput\t  wrreq;\n\toutput\t  empty;\n\toutput\t  full;\n\toutput\t[11:0]  q;"}
{"task_id": 1943, "completion": "module hps_sdram_p0_altdqdqs (\n\tcore_clock_in,\n\treset_n_core_clock_in,\n\tfr_clock_in,\n\thr_clock_in,\n\twrite_strobe_clock_in,\n\twrite_strobe,\n\tstrobe_ena_hr_clock_in,\n\tcapture_strobe_tracking,\n\tread_write_data_io,\n\twrite_oe_in,\n\tstrobe_io,\n\toutput_strobe_ena,\n\tstrobe_n_io,\n\toct_ena_in,\n\tread_data_out,\n\tcapture_strobe_out,\n\twrite_data_in,\n\textra_write_data_in,\n\textra_write_data_out,\n\tparallelterminationcontrol_in,\n\tseriesterminationcontrol_in,\n\tconfig_data_in,\n\tconfig_update,\n\tconfig_dqs_ena,\n\tconfig_io_ena,\n\tconfig_extra_io_ena,\n\tconfig_dqs_io_ena,\n\tconfig_clock_in,\n\tlfifo_rdata_en,\n\tlfifo_rdata_en_full,\n\tlfifo_rd_latency,\n\tlfifo_reset_n,\n\tlfifo_rdata_valid,\n\tvfifo_qvld,\n\tvfifo_inc_wr_ptr,\n\tvfifo_reset_n,\n\trfifo_reset_n\n);"}
{"task_id": 1898, "completion": "module vcr_ugal_source(\n   input clk,\n   input reset,\n   input flit_valid,\n   input flit_head,\n   input [0:router_addr_width-1] src_router_address,\n   input [0:addr_width-1] route_info,\n   input [0:(num_ports-num_nodes_per_router)*credit_count_width-1] credit_count,\n   output [0:router_addr_width-1] intm_router_address,\n   output route_min\n);"}
{"task_id": 1964, "completion": "module axi_protocol_converter_v2_1_7_b2s_simple_fifo #(parameter C_WIDTH = 8, parameter C_AWIDTH = 4, parameter C_DEPTH = 16)(input wire clk, input wire rst, input wire wr_en, input wire rd_en, input wire [C_WIDTH-1:0] din, output wire [C_WIDTH-1:0] dout, output wire a_full, output wire full, output wire a_empty, output wire empty);"}
{"task_id": 1999, "completion": "module RCB_FRL_count_to_16x(input clk, input rst, input count, output [3:0] counter_value);"}
{"task_id": 823, "completion": "module up_adc_common (  output          mmcm_rst,  input           adc_clk,  output          adc_rst,  output          adc_r1_mode,  output          adc_ddr_edgesel,  output          adc_pin_mode,  input           adc_status,  input           adc_status_pn_err,  input           adc_status_pn_oos,  input           adc_status_or,  input   [31:0]  adc_clk_ratio,  input           delay_clk,  output          delay_rst,  output          delay_sel,  output          delay_rwn,  output  [ 7:0]  delay_addr,  output  [ 4:0]  delay_wdata,  input   [ 4:0]  delay_rdata,  input           delay_ack_t,  input           delay_locked,  input           drp_clk,  output          drp_rst,  output          drp_sel,  output          drp_wr,  output  [11:0]  drp_addr,  output  [15:0]  drp_wdata,  input   [15:0]  drp_rdata,  input           dma_clk,  output          dma_rst,  output          dma_start,  output          dma_stream,  output  [31:0]  dma_count,  input           dma_ovf,  input           dma_unf,  input           dma_status,  input   [31:0]  dma_bw,  output  [ 7:0]  up_usr_chanmax,  input   [ 7:0]  adc_usr_chanmax,  input           up_rstn,  input           up_clk,  input           up_sel,  input           up_wr,  input   [13:0]  up_addr,  input   [31:0]  up_wdata,  output  [31:0]  up_rdata,  output          up_ack);"}
{"task_id": 1773, "completion": "module cmm_decoder ( raddr, rmem32, rmem64, rio, rcheck_bus_id, rcheck_dev_id, rcheck_fun_id, rhit, bar_hit, cmmt_rbar_hit_lat2_n, command, bar0_reg, bar1_reg, bar2_reg, bar3_reg, bar4_reg, bar5_reg, xrom_reg, pme_pmcsr, bus_num, device_num, function_num, phantom_functions_supported, phantom_functions_enabled, cfg, rst, clk );"}
{"task_id": 1869, "completion": "module KOA_FPGA #(parameter SW = 54)(input wire [SW-1:0] Data_A_i, input wire [SW-1:0] Data_B_i, output wire [2*SW-1:0] sgf_result_o);"}
{"task_id": 1895, "completion": "module axi_crossbar_v2_1_8_decerr_slave #(\n   parameter integer C_AXI_ID_WIDTH           = 1,\n   parameter integer C_AXI_DATA_WIDTH         = 32,\n   parameter integer C_AXI_BUSER_WIDTH        = 1,\n   parameter integer C_AXI_RUSER_WIDTH        = 1,\n   parameter integer C_AXI_PROTOCOL           = 0,\n   parameter integer C_RESP                   = 2'b11   \n   )(\n   input wire S_AXI_ACLK,\n   input wire S_AXI_ARESET,\n   input wire [(C_AXI_ID_WIDTH-1):0] S_AXI_AWID,\n   input wire S_AXI_AWVALID,\n   output wire S_AXI_AWREADY,\n   input wire S_AXI_WLAST,\n   input wire S_AXI_WVALID,\n   output wire S_AXI_WREADY,\n   output wire [(C_AXI_ID_WIDTH-1):0] S_AXI_BID,\n   output wire [1:0] S_AXI_BRESP,\n   output wire [C_AXI_BUSER_WIDTH-1:0]          S_AXI_BUSER,\n   output wire S_AXI_BVALID,\n   input wire S_AXI_BREADY,\n   input wire [(C_AXI_ID_WIDTH-1):0] S_AXI_ARID,\n   input wire [7:0] S_AXI_ARLEN,\n   input wire S_AXI_ARVALID,\n   output wire S_AXI_ARREADY,\n   output wire [(C_AXI_ID_WIDTH-1):0] S_AXI_RID,\n   output wire [(C_AXI_DATA_WIDTH-1):0] S_AXI_RDATA,\n   output wire [1:0] S_AXI_RRESP,\n   output wire [C_AXI_RUSER_WIDTH-1:0]          S_AXI_RUSER,\n   output wire S_AXI_RLAST,\n   output wire S_AXI_RVALID,\n   input wire S_AXI_RREADY\n   );"}
{"task_id": 1891, "completion": "module hps_sdram_p0_acv_hard_addr_cmd_pads(\n    input reset_n,\n    input reset_n_afi_clk,\n    input pll_hr_clk,\n    input pll_avl_phy_clk,\n    input pll_afi_clk,\n    input pll_mem_clk,\n    input pll_write_clk,\n    input [DLL_WIDTH-1:0] dll_delayctrl_in,\n    input [AFI_ADDRESS_WIDTH-1:0] phy_ddio_address,\n    input [AFI_BANK_WIDTH-1:0] phy_ddio_bank,\n    input [AFI_CHIP_SELECT_WIDTH-1:0] phy_ddio_cs_n,\n    input [AFI_CLK_EN_WIDTH-1:0] phy_ddio_cke,\n    input [AFI_ODT_WIDTH-1:0] phy_ddio_odt,\n    input [AFI_CONTROL_WIDTH-1:0] phy_ddio_ras_n,\n    input [AFI_CONTROL_WIDTH-1:0] phy_ddio_cas_n,\n    input [AFI_CONTROL_WIDTH-1:0] phy_ddio_ck,\n    input [AFI_CONTROL_WIDTH-1:0] phy_ddio_we_n,\n    input [AFI_CONTROL_WIDTH-1:0] phy_ddio_reset_n,\n    output [MEM_ADDRESS_WIDTH-1:0] phy_mem_address,\n    output [MEM_BANK_WIDTH-1:0] phy_mem_bank,\n    output [MEM_CHIP_SELECT_WIDTH-1:0] phy_mem_cs_n,\n    output [MEM_CLK_EN_WIDTH-1:0] phy_mem_cke,\n    output [MEM_ODT_WIDTH-1:0] phy_mem_odt,\n    output [MEM_CONTROL_WIDTH-1:0] phy_mem_we_n,\n    output [MEM_CONTROL_WIDTH-1:0] phy_mem_ras_n,\n    output [MEM_CONTROL_WIDTH-1:0] phy_mem_cas_n,\n    output phy_mem_reset_n,\n    output [MEM_CK_WIDTH-1:0] phy_mem_ck,\n    output [MEM_CK_WIDTH-1:0] phy_mem_ck_n\n);"}
{"task_id": 1983, "completion": "module mig_7series_v4_0_fi_xor #(\n  parameter integer DQ_WIDTH = 72,\n  parameter integer DQS_WIDTH = 9,\n  parameter integer nCK_PER_CLK = 4\n)(\n  input  wire clk,\n  input  wire [2*nCK_PER_CLK*DQ_WIDTH-1:0] wrdata_in,\n  output wire [2*nCK_PER_CLK*DQ_WIDTH-1:0] wrdata_out,\n  input  wire wrdata_en,\n  input  wire [DQS_WIDTH-1:0] fi_xor_we,\n  input  wire [DQ_WIDTH-1:0] fi_xor_wrdata\n);"}
{"task_id": 1857, "completion": "module dig(\n input nres,\n output [7:0] cfg,\n input clk_cog,\n input clk_pll,\n input [31:0] pin_in,\n output [31:0] pin_out,\n output [31:0] pin_dir,\n output [7:0] cog_led\n);"}
{"task_id": 1933, "completion": "module KOA_c\n    #(parameter SW = 54, parameter precision = 1)\n    (\n    input wire [SW-1:0] Data_A_i,\n    input wire [SW-1:0] Data_B_i,\n    output wire [2*SW-1:0] sgf_result_o\n    );"}
{"task_id": 1980, "completion": "module altera_up_video_dual_clock_fifo (\n\tinput wrclk,\n\tinput wrreq,\n\tinput [(DW-1):0] data,\n\tinput rdclk,\n\tinput rdreq,\n\toutput [6:0] wrusedw,\n\toutput wrfull,\n\toutput [(DW-1):0] q,\n\toutput [6:0] rdusedw,\n\toutput rdempty\n);\nparameter DW = 18;"}
{"task_id": 1965, "completion": "module mig_7series_v4_0_ddr_phy_ck_addr_cmd_delay #(\n   parameter TCQ            = 100,\n   parameter tCK            = 3636,\n   parameter DQS_CNT_WIDTH  = 3,\n   parameter N_CTL_LANES    = 3,\n   parameter SIM_CAL_OPTION = \"NONE\"\n   )(\n   input                        clk,\n   input                        rst,\n   input                        cmd_delay_start,\n   output reg [N_CTL_LANES-1:0] ctl_lane_cnt,\n   output reg       po_stg2_f_incdec,\n   output reg       po_en_stg2_f,\n   output reg       po_stg2_c_incdec,\n   output reg       po_en_stg2_c,\n   output           po_ck_addr_cmd_delay_done\n   );"}
{"task_id": 1783, "completion": "module dma2eth_intercon(\n   input aclk,\n   input aresetn,\n   output m_txc0_axis_tvalid,\n   output m_txc1_axis_tvalid,\n   output m_txc2_axis_tvalid,\n   output m_txc3_axis_tvalid,\n   input m_txc0_axis_tready,\n   input m_txc1_axis_tready,\n   input m_txc2_axis_tready,\n   input m_txc3_axis_tready,\n   output [31 : 0] m_txc0_axis_tdata,\n   output [31 : 0] m_txc1_axis_tdata,\n   output [31 : 0] m_txc2_axis_tdata,\n   output [31 : 0] m_txc3_axis_tdata,\n   output [3 : 0] m_txc0_axis_tkeep,\n   output [3 : 0] m_txc1_axis_tkeep,\n   output [3 : 0] m_txc2_axis_tkeep,\n   output [3 : 0] m_txc3_axis_tkeep,\n   output m_txc0_axis_tlast,\n   output m_txc1_axis_tlast,\n   output m_txc2_axis_tlast,\n   output m_txc3_axis_tlast,\n   input s_txc_axis_tvalid,\n   output reg s_txc_axis_tready,\n   input [31 : 0] s_txc_axis_tdata,\n   input [3 : 0] s_txc_axis_tkeep,\n   input s_txc_axis_tlast,\n   output m_txd0_axis_tvalid,\n   output m_txd1_axis_tvalid,\n   output m_txd2_axis_tvalid,\n   output m_txd3_axis_tvalid,\n   input m_txd0_axis_tready,\n   input m_txd1_axis_tready,\n   input m_txd2_axis_tready,\n   input m_txd3_axis_tready,\n   output [31 : 0] m_txd0_axis_tdata,\n   output [31 : 0] m_txd1_axis_tdata,\n   output [31 : 0] m_txd2_axis_tdata,\n   output [31 : 0] m_txd3_axis_tdata,\n   output [3 : 0] m_txd0_axis_tkeep,\n   output [3 : 0] m_txd1_axis_tkeep,\n   output [3 : 0] m_txd2_axis_tkeep,\n   output [3 : 0] m_txd3_axis_tkeep,\n   output m_txd0_axis_tlast,\n   output m_txd1_axis_tlast,\n   output m_txd2_axis_tlast,\n   output m_txd3_axis_tlast,\n   input s_txd_axis_tvalid,\n   output reg s_txd_axis_tready,\n   input [31 : 0] s_txd_axis_tdata,\n   input [3 : 0] s_txd_axis_tkeep,\n   input s_txd_axis_tlast\n);"}
{"task_id": 1945, "completion": "module RCB_FRL_TX_MSG (\n\tinput clk,\n\tinput clkdiv,\n\tinput rst,\n\tinput [39:0] data_in,\n\tinput empty,\n\toutput reg rden,\n\toutput OSER_OQ,\n\tinput ack_r_one,\n\tinput nack_r_one,\n\toutput reg txmsg_miss_one,\n\toutput reg txmsg_pass_one,\n\tinput msg_r_p_one,\n\tinput msg_r_n_one,\n\tinput training_done\n);"}
{"task_id": 1860, "completion": "module ztex_ufm1_15d4 (fxclk_in, reset, clk_reset, pll_stop,  dcm_progclk, dcm_progdata, dcm_progen,  rd_clk, wr_clk, wr_start, read, write);"}
{"task_id": 1978, "completion": "module KOA_c #(parameter SW = 54, parameter precision = 1)(input wire [SW-1:0] Data_A_i, input wire [SW-1:0] Data_B_i, output wire [2*SW-1:0] sgf_result_o);"}
{"task_id": 1986, "completion": "module altera_up_character_lcd_communication (\n\tclk,\n\treset,\n\tdata_in,\n\tenable,\n\trs,\n\trw,\n\ndisplay_on,\n\tback_light_on,\n\tLCD_DATA,\n\tLCD_ON,\n\tLCD_BLON,\n\tLCD_EN,\n\tLCD_RS,\n\tLCD_RW,\n\tdata_out,\n\ttransfer_complete\n);"}
{"task_id": 1311, "completion": "module pcie_7x_v1_8_gt_top #(\n   parameter LINK_CAP_MAX_LINK_WIDTH = 8,\n   parameter REF_CLK_FREQ = 0,\n   parameter USER_CLK2_DIV2 = \"FALSE\",\n   parameter integer USER_CLK_FREQ = 3,\n   parameter PL_FAST_TRAIN = \"FALSE\",\n   parameter PCIE_EXT_CLK = \"FALSE\",\n   parameter PCIE_USE_MODE = \"1.0\",\n   parameter PCIE_GT_DEVICE = \"GTX\",\n   parameter PCIE_PLL_SEL = \"CPLL\",\n   parameter PCIE_ASYNC_EN = \"FALSE\",\n   parameter PCIE_TXBUF_EN = \"FALSE\",\n   parameter PCIE_CHAN_BOND = 0\n)(\n   input wire [5:0] pl_ltssm_state,\n   input wire pipe_tx_rcvr_det,\n   input wire pipe_tx_reset,\n   input wire pipe_tx_rate,\n   input wire pipe_tx_deemph,\n   input wire [2:0] pipe_tx_margin,\n   input wire pipe_tx_swing,\n   input wire PIPE_PCLK_IN,\n   input wire PIPE_RXUSRCLK_IN,\n   input wire [(LINK_CAP_MAX_LINK_WIDTH - 1) : 0] PIPE_RXOUTCLK_IN,\n   input wire PIPE_DCLK_IN,\n   input wire PIPE_USERCLK1_IN,\n   input wire PIPE_USERCLK2_IN,\n   input wire PIPE_OOBCLK_IN,\n   input wire PIPE_MMCM_LOCK_IN,\n   output wire PIPE_TXOUTCLK_OUT,\n   output wire [(LINK_CAP_MAX_LINK_WIDTH - 1) : 0] PIPE_RXOUTCLK_OUT,\n   output wire [(LINK_CAP_MAX_LINK_WIDTH - 1) : 0] PIPE_PCLK_SEL_OUT,\n   output wire PIPE_GEN3_OUT,\n   output wire [ 1:0] pipe_rx0_char_is_k,\n   output wire [15:0] pipe_rx0_data,\n   output wire pipe_rx0_valid,\n   output wire pipe_rx0_chanisaligned,\n   output wire [ 2:0] pipe_rx0_status,\n   output wire pipe_rx0_phy_status,\n   output wire pipe_rx0_elec_idle,\n   input wire pipe_rx0_polarity,\n   input wire pipe_tx0_compliance,\n   input wire [ 1:0] pipe_tx0_char_is_k,\n   input wire [15:0] pipe_tx0_data,\n   input wire pipe_tx0_elec_idle,\n   input wire [ 1:0] pipe_tx0_powerdown,\n   output wire [ 1:0] pipe_rx1_char_is_k,\n   output wire [15:0] pipe_rx1_data,\n   output wire pipe_rx1_valid,\n   output wire pipe_rx1_chanisaligned,\n   output wire [ 2:0] pipe_rx1_status,\n   output wire pipe_rx1_phy_status,\n   output wire pipe_rx1_elec_idle,\n   input wire pipe_rx1_polarity,\n   input wire pipe_tx1_compliance,\n   input wire [ 1:0] pipe_tx1_char_is_k,\n   input wire [15:0] pipe_tx1_data,\n   input wire pipe_tx1_elec_idle,\n   input wire [ 1:0] pipe_tx1_powerdown,\n   output wire [ 1:0] pipe_rx2_char_is_k,\n   output wire [15:0] pipe_rx2_data,\n   output wire pipe_rx2_valid,\n   output wire pipe_rx2_chanisaligned,\n   output wire [ 2:0] pipe_rx2_status,\n   output wire pipe_rx2_phy_status,\n   output wire pipe_rx2_elec_idle,\n   input wire pipe_rx2_polarity,\n   input wire pipe_tx2_compliance,\n   input wire [ 1:0] pipe_tx2_char_is_k,\n   input wire [15:0] pipe_tx2_data,\n   input wire pipe_tx2_elec_idle,\n   input wire [ 1:0] pipe_tx2_powerdown,\n   output wire [ 1:0] pipe_rx3_char_is_k,\n   output wire [15:0] pipe_rx3_data,\n   output wire pipe_rx3_valid,\n   output wire pipe_rx3_chanisaligned,\n   output wire [ 2:0] pipe_rx3_status,\n   output wire pipe_rx3_phy_status,\n   output wire pipe_rx3_elec_idle,\n   input wire pipe_rx3_polarity,\n   input wire pipe_tx3_compliance,\n   input wire [ 1:0] pipe_tx3_char_is_k,\n   input wire [15:0] pipe_tx3_data,\n   input wire pipe_tx3_elec_idle,\n   input wire [ 1:0] pipe_tx3_powerdown,\n   output wire [ 1:0] pipe_rx4_char_is_k,\n   output wire [15:0] pipe_rx4_data,\n   output wire pipe_rx4_valid,\n   output wire pipe_rx4_chanisaligned,\n   output wire [ 2:0] pipe_rx4_status,\n   output wire pipe_rx4_phy_status,\n   output wire pipe_rx4_elec_idle,\n   input wire pipe_rx4_polarity,\n   input wire pipe_tx4_compliance,\n   input wire [ 1:0] pipe_tx4_char_is_k,\n   input wire [15:0] pipe_tx4_data,\n   input wire pipe_tx4_elec_idle,\n   input wire [ 1:0] pipe_tx4_powerdown,\n   output wire [ 1:0] pipe_rx5_char_is_k,\n   output wire [15:0] pipe_rx5_data,\n   output wire pipe_rx5_valid,\n   output wire pipe_rx5_chanisaligned,\n   output wire [ 2:0] pipe_rx5_status,\n   output wire pipe_rx5_phy_status,\n   output wire pipe_rx5_elec_idle,\n   input wire pipe_rx5_polarity,\n   input wire pipe_tx5_compliance,\n   input wire [ 1:0] pipe_tx5_char_is_k,\n   input wire [15:0] pipe_tx5_data,\n   input wire pipe_tx5_elec_idle,\n   input wire [ 1:0] pipe_tx5_powerdown,\n   output wire [ 1:0] pipe_rx6_char_is_k,\n   output wire [15:0] pipe_rx6_data,\n   output wire pipe_rx6_valid,\n   output wire pipe_rx6_chanisaligned,\n   output wire [ 2:0] pipe_rx6_status,\n   output wire pipe_rx6_phy_status,\n   output wire pipe_rx6_elec_idle,\n   input wire pipe_rx6_polarity,\n   input wire pipe_tx6_compliance,\n   input wire [ 1:0] pipe_tx6_char_is_k,\n   input wire [15:0] pipe_tx6_data,\n   input wire pipe_tx6_elec_idle,\n   input wire [ 1:0] pipe_tx6_powerdown,\n   output wire [ 1:0] pipe_rx7_char_is_k,\n   output wire [15:0] pipe_rx7_data,\n   output wire pipe_rx7_valid,\n   output wire pipe_rx7_chanisaligned,\n   output wire [ 2:0] pipe_rx7_status,\n   output wire pipe_rx7_phy_status,\n   output wire pipe_rx7_elec_idle,\n   input wire pipe_rx7_polarity,\n   input wire pipe_tx7_compliance,\n   input wire [ 1:0] pipe_tx7_char_is_k,\n   input wire [15:0] pipe_tx7_data,\n   input wire pipe_tx7_elec_idle,\n   input wire [ 1:0] pipe_tx7_powerdown,\n   output wire [(LINK_CAP_MAX_LINK_WIDTH-1):0] pci_exp_txn,\n   output wire [(LINK_CAP_MAX_LINK_WIDTH-1):0] pci_exp_txp,\n   input wire [(LINK_CAP_MAX_LINK_WIDTH-1):0] pci_exp_rxn,\n   input wire [(LINK_CAP_MAX_LINK_WIDTH-1):0] pci_exp_rxp,\n   input wire sys_clk,\n   input wire sys_rst_n,\n   output wire pipe_clk,\n   output wire user_clk,\n   output wire user_clk2,\n   output wire phy_rdy_n\n);"}
{"task_id": 1884, "completion": "module mig_7series_v4_0_cmd_prbs_gen_axi #(\n   parameter TCQ                 = 100,\n   parameter FAMILY              = \"SPARTAN6\",\n   parameter ADDR_WIDTH          = 29,\n   parameter DWIDTH              = 32,\n   parameter PRBS_CMD            = \"ADDRESS\", // \"INSTR\", \"BLEN\",\"ADDRESS\"\n   parameter PRBS_WIDTH          = 64,        //   64,15,20\n   parameter SEED_WIDTH          = 32,        //   32,15,4\n   parameter PRBS_EADDR_MASK_POS = 32'hFFFFD000,\n   parameter PRBS_SADDR_MASK_POS = 32'h00002000,\n   parameter PRBS_EADDR          = 32'h00002000,\n   parameter PRBS_SADDR          = 32'h00002000\n  )(\n   input                         clk_i,\n   input                         prbs_seed_init,  // when high the prbs_x_seed will be loaded\n   input                         clk_en,\n   input [SEED_WIDTH-1:0]        prbs_seed_i,\n   output[SEED_WIDTH-1:0]        prbs_o           // generated address\n  );"}
{"task_id": 1975, "completion": "module comm (input hash_clk, input rx_new_nonce, input [31:0] rx_golden_nonce, output [255:0] tx_midstate, output [95:0] tx_data);"}
{"task_id": 1909, "completion": "module axi_crossbar_v2_1_8_addr_arbiter_sasd #(\n   parameter C_FAMILY = \"none\",\n   parameter integer C_NUM_S = 1,\n   parameter integer C_NUM_S_LOG = 1,\n   parameter integer C_AMESG_WIDTH = 1,\n   parameter C_GRANT_ENC = 0,\n   parameter [C_NUM_S*32-1:0] C_ARB_PRIORITY = {C_NUM_S{32'h00000000}})\n(\n   input  wire ACLK,\n   input  wire ARESET,\n   input  wire [C_NUM_S*C_AMESG_WIDTH-1:0] S_AWMESG,\n   input  wire [C_NUM_S*C_AMESG_WIDTH-1:0] S_ARMESG,\n   input  wire [C_NUM_S-1:0] S_AWVALID,\n   output wire [C_NUM_S-1:0] S_AWREADY,\n   input  wire [C_NUM_S-1:0] S_ARVALID,\n   output wire [C_NUM_S-1:0] S_ARREADY,\n   output wire [C_AMESG_WIDTH-1:0] M_AMESG,\n   output wire [C_NUM_S_LOG-1:0] M_GRANT_ENC,\n   output wire [C_NUM_S-1:0] M_GRANT_HOT,\n   output wire M_GRANT_RNW,\n   output wire M_GRANT_ANY,\n   output wire M_AWVALID,\n   input  wire M_AWREADY,\n   output wire M_ARVALID,\n   input  wire M_ARREADY\n);"}
{"task_id": 1938, "completion": "module LU8PEEng (clk, start, N, offset, done, burst_begin, mem_local_be, mem_local_read_req, mem_local_size, mem_local_wdata, mem_local_write_req, mem_local_rdata, mem_local_rdata_valid, mem_local_ready, mem_local_wdata_req, reset_n, mem_local_addr);"}
{"task_id": 1648, "completion": "module hashcore (\n        input hash_clk,\n        input [255:0] data1,\n        input [255:0] data2,\n        input [127:0] data3,\n        input [31:0] target,\n        input [3:0] nonce_msb,\n        output [31:0] nonce_out,\n        output [31:0] golden_nonce_out,\n        output golden_nonce_match,\n        input loadnonce\n    );"}
{"task_id": 242, "completion": "module low_level_command_processor(\n    input wire clk,\n    input wire reset_n,\n    input wire reset,\n    input wire start,\n    output reg done,\n    input wire [`byte_width-1:0] command,\n    input wire [`byte_width-1:0] arg1,\n    input wire [`byte_width-1:0] arg2,\n    inout wire sda,\n    inout wire scl,\n    output reg [`scanpath_count_max:1] sp_trst,\n    output reg [`scanpath_count_max:1] sp_tms,\n    output reg [`scanpath_count_max:1] sp_tck,\n    output reg [`scanpath_count_max:1] sp_tdo,\n    output reg [`byte_width-1:0] scan_clock_frequency,\n    input wire [(`scanpath_count_max * `nibble_width)-1:0] tap_states_feedback,\n    output reg [(`scanpath_count_max * `nibble_width)-1:0] tap_states_send,\n    output wire [`byte_width-1:0] i2c_master_state,\n    output reg [`byte_width-1:0] lcp_state,\n    output [`timer_state_width-1:0] timer_state\n);"}
{"task_id": 1967, "completion": "module altera_jtag_sld_node (    ir_out,    tdo,    ir_in,    tck,    tdi,    virtual_state_cdr,    virtual_state_cir,    virtual_state_e1dr,    virtual_state_e2dr,    virtual_state_pdr,    virtual_state_sdr,    virtual_state_udr,    virtual_state_uir);"}
{"task_id": 1059, "completion": "module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_crossbar_v2_1_12_axi_crossbar (\n        input aclk,\n        input aresetn,\n        input [31:0] s_axi_awaddr,\n        input [2:0] s_axi_awprot,\n        input [0:0] s_axi_awvalid,\n        output [0:0] s_axi_awready,\n        input [31:0] s_axi_wdata,\n        input [3:0] s_axi_wstrb,\n        input [0:0] s_axi_wvalid,\n        output [0:0] s_axi_wready,\n        output [1:0] s_axi_bresp,\n        output [0:0] s_axi_bvalid,\n        input [0:0] s_axi_bready,\n        input [31:0] s_axi_araddr,\n        input [2:0] s_axi_arprot,\n        input [0:0] s_axi_arvalid,\n        output [0:0] s_axi_arready,\n        output [31:0] s_axi_rdata,\n        output [1:0] s_axi_rresp,\n        output [0:0] s_axi_rvalid,\n        input [0:0] s_axi_rready,\n        output [95:0] m_axi_awaddr,\n        output [8:0] m_axi_awprot,\n        output [2:0] m_axi_awvalid,\n        input [2:0] m_axi_awready,\n        output [95:0] m_axi_wdata,\n        output [11:0] m_axi_wstrb,\n        output [2:0] m_axi_wvalid,\n        input [2:0] m_axi_wready,\n        input [5:0] m_axi_bresp,\n        input [2:0] m_axi_bvalid,\n        output [2:0] m_axi_bready,\n        output [95:0] m_axi_araddr,\n        output [8:0] m_axi_arprot,\n        output [2:0] m_axi_arvalid,\n        input [2:0] m_axi_arready,\n        input [95:0] m_axi_rdata,\n        input [5:0] m_axi_rresp,\n        input [2:0] m_axi_rvalid,\n        output [2:0] m_axi_rready\n    );"}
{"task_id": 654, "completion": "module fetch_cur_luma (\n    input clk,\n    input rstn,\n    input sysif_start_i,\n    input sysif_type_i,\n    input [3:0] pre_i_4x4_x_i,\n    input [3:0] pre_i_4x4_y_i,\n    input [4:0] pre_i_4x4_idx_i,\n    input [0:0] pre_i_sel_i,\n    input [1:0] pre_i_size_i,\n    input [0:0] pre_i_rden_i,\n    output [32*`PIXEL_WIDTH-1:0] pre_i_pel_o,\n    input [3:0] fime_cur_4x4_x_i,\n    input [3:0] fime_cur_4x4_y_i,\n    input [4:0] fime_cur_4x4_idx_i,\n    input [0:0] fime_cur_sel_i,\n    input [2:0] fime_cur_size_i,\n    input [0:0] fime_cur_rden_i,\n    output [64*`PIXEL_WIDTH-1:0] fime_cur_pel_o,\n    input [3:0] fme_cur_4x4_x_i,\n    input [3:0] fme_cur_4x4_y_i,\n    input [4:0] fme_cur_4x4_idx_i,\n    input [0:0] fme_cur_sel_i,\n    input [1:0] fme_cur_size_i,\n    input [0:0] fme_cur_rden_i,\n    output [32*`PIXEL_WIDTH-1:0] fme_cur_pel_o,\n    input [3:0] mc_cur_4x4_x_i,\n    input [3:0] mc_cur_4x4_y_i,\n    input [4:0] mc_cur_4x4_idx_i,\n    input [0:0] mc_cur_sel_i,\n    input [1:0] mc_cur_size_i,\n    input [0:0] mc_cur_rden_i,\n    output [32*`PIXEL_WIDTH-1:0] mc_cur_pel_o,\n    input [3:0] db_cur_4x4_x_i,\n    input [3:0] db_cur_4x4_y_i,\n    input [4:0] db_cur_4x4_idx_i,\n    input [0:0] db_cur_sel_i,\n    input [1:0] db_cur_size_i,\n    input [0:0] db_cur_rden_i,\n    output [32*`PIXEL_WIDTH-1:0] db_cur_pel_o,\n    input ext_load_done_i,\n    input [32*`PIXEL_WIDTH-1:0] ext_load_data_i,\n    input [6:0] ext_load_addr_i,\n    input ext_load_valid_i\n);"}
{"task_id": 1993, "completion": "module aes_sbox (\n\tinput [7:0] U,\n\tinput dec,\n\toutput reg [7:0] S\n);"}
{"task_id": 698, "completion": "module system (\n                 input wire         clk_sys,\n                 input wire         reset_sys,\n                 input wire         clk_vga,\n                 input wire         reset_vga,\n                 output wire        PSRAM_CLK,\n                 output wire        PSRAM_ADV_N,\n                 output wire        PSRAM_CE_N,\n                 output wire        PSRAM_OE_N,\n                 output wire        PSRAM_WE_N,\n                 output wire        PSRAM_LB_N,\n                 output wire        PSRAM_UB_N,\n                 inout wire [15:0]  PSRAM_DATA,\n                 output wire [22:0] PSRAM_ADDR,\n                 output wire        reset_only_ao486,\n                 output wire        vga_clock,\n                 output wire        vga_sync_n,\n                 output wire        vga_blank_n,\n                 output wire        vga_horiz_sync,\n                 output wire        vga_vert_sync,\n                 output wire [7:0]  vga_r,\n                 output wire [7:0]  vga_g,\n                 output wire [7:0]  vga_b,\n                 inout wire         ps2_kbclk,\n                 inout wire         ps2_kbdat,\n                 inout wire [3:0]   sd_dat,\n                 inout wire         sd_cmd,\n                 output wire        sd_clk\n                 );"}
{"task_id": 1946, "completion": "module latency_aware_read_master (\n\tclk,\n\treset,\n\n\t// control inputs and outputs\n\tcontrol_fixed_location,\n\tcontrol_read_base,\n\tcontrol_read_length,\n\tcontrol_go,\n\tcontrol_done,\n\tcontrol_early_done,\n\t\n\t// user logic inputs and outputs\n\tuser_read_buffer,\n\tuser_buffer_data,\n\tuser_data_available,\n\t\n\t// master inputs and outputs\n\tmaster_address,\n\tmaster_read,\n\tmaster_byteenable,\n\tmaster_readdata,\n\tmaster_readdatavalid,\n\tmaster_waitrequest\n);\n\n\tparameter DATAWIDTH = 32;\n\tparameter BYTEENABLEWIDTH = 4;\n\tparameter ADDRESSWIDTH = 32;\n\tparameter FIFODEPTH = 32;\n\tparameter FIFODEPTH_LOG2 = 5;\n\tparameter FIFOUSEMEMORY = 1;  // set to 0 to use LEs instead\n\t\n\tinput clk;\n\tinput reset;\n\n\n\t// control inputs and outputs\n\tinput control_fixed_location;\n\tinput [ADDRESSWIDTH-1:0] control_read_base;\n\tinput [ADDRESSWIDTH-1:0] control_read_length;\n\tinput control_go;\n\toutput wire control_done;\n\toutput wire control_early_done;  // don't use this unless you know what you are doing!\n\t\n\t// user logic inputs and outputs\n\tinput user_read_buffer;\n\toutput wire [DATAWIDTH-1:0] user_buffer_data;\n\toutput wire user_data_available;\n\t\n\t// master inputs and outputs\n\tinput master_waitrequest;\n\tinput master_readdatavalid;\n\tinput [DATAWIDTH-1:0] master_readdata;\n\toutput wire [ADDRESSWIDTH-1:0] master_address;\n\toutput wire master_read;\n\toutput wire [BYTEENABLEWIDTH-1:0] master_byteenable;\n\n\t// internal control signals\n\treg control_fixed_location_d1;\n\twire fifo_empty;\n\treg [ADDRESSWIDTH-1:0] address;\n\treg [ADDRESSWIDTH-1:0] length;\n\treg [FIFODEPTH_LOG2-1:0] reads_pending;\n\twire increment_address;\n\twire too_many_pending_reads;\n\treg too_many_pending_reads_d1;\n\twire [FIFODEPTH_LOG2-1:0] fifo_used;"}
{"task_id": 1080, "completion": "module ila_0 (\n clk,\n trig_out,\n trig_out_ack,\n trig_in,\n trig_in_ack,\n probe0\n);\n input clk;\n output trig_out;\n input trig_out_ack;\n input trig_in;\n output trig_in_ack;\n input [0 : 0] probe0;"}
{"task_id": 1558, "completion": "module alt_mem_ddrx_dataid_manager #(\n        parameter CFG_DATA_ID_WIDTH = 8,\n        parameter CFG_DRAM_WLAT_GROUP = 1,\n        parameter CFG_LOCAL_WLAT_GROUP = 1,\n        parameter CFG_BUFFER_ADDR_WIDTH = 6,\n        parameter CFG_INT_SIZE_WIDTH = 1,\n        parameter CFG_TBP_NUM = 4,\n        parameter CFG_BURSTCOUNT_TRACKING_WIDTH = 7,\n        parameter CFG_PORT_WIDTH_BURST_LENGTH = 5,\n        parameter CFG_DWIDTH_RATIO = 2\n    )(\n        input wire ctl_clk,\n        input wire ctl_reset_n,\n        input wire [CFG_PORT_WIDTH_BURST_LENGTH - 1 : 0] cfg_burst_length,\n        input wire cfg_enable_ecc,\n        input wire cfg_enable_auto_corr,\n        input wire cfg_enable_no_dm,\n        output wire update_cmd_if_ready,\n        input wire update_cmd_if_valid,\n        input wire [CFG_DATA_ID_WIDTH-1:0] update_cmd_if_data_id,\n        input wire [CFG_INT_SIZE_WIDTH-1:0] update_cmd_if_burstcount,\n        input wire [CFG_TBP_NUM-1:0] update_cmd_if_tbp_id,\n        input wire update_data_if_valid,\n        input wire [CFG_DATA_ID_WIDTH-1:0] update_data_if_data_id,\n        input wire [2**CFG_DATA_ID_WIDTH-1:0] update_data_if_data_id_vector,\n        input wire [CFG_BURSTCOUNT_TRACKING_WIDTH-1:0] update_data_if_burstcount,\n        input wire [CFG_BURSTCOUNT_TRACKING_WIDTH-1:0] update_data_if_next_burstcount,\n        output wire notify_data_if_valid,\n        output wire [CFG_INT_SIZE_WIDTH-1:0] notify_data_if_burstcount,\n        output wire [CFG_TBP_NUM-1:0] notify_tbp_data_ready,\n        output wire notify_tbp_data_partial_be,\n        output wire write_data_if_ready,\n        input wire write_data_if_valid,\n        output wire write_data_if_accepted,\n        output wire [CFG_BUFFER_ADDR_WIDTH-1:0] write_data_if_address,\n        input wire write_data_if_partial_dm,\n        input wire [CFG_DRAM_WLAT_GROUP-1:0] read_data_if_valid,\n        input wire [CFG_DRAM_WLAT_GROUP*CFG_DATA_ID_WIDTH-1:0] read_data_if_data_id,\n        input wire [CFG_DRAM_WLAT_GROUP*2**CFG_DATA_ID_WIDTH-1:0] read_data_if_data_id_vector,\n        input wire read_data_if_valid_first,\n        input wire [CFG_DATA_ID_WIDTH-1:0] read_data_if_data_id_first,\n        input wire [2**CFG_DATA_ID_WIDTH-1:0] read_data_if_data_id_vector_first,\n        input wire [CFG_DRAM_WLAT_GROUP-1:0] read_data_if_valid_first_vector,\n        input wire read_data_if_valid_last,\n        input wire [CFG_DATA_ID_WIDTH-1:0] read_data_if_data_id_last,\n        input wire [2**CFG_DATA_ID_WIDTH-1:0] read_data_if_data_id_vector_last,\n        output wire [CFG_DRAM_WLAT_GROUP*CFG_BUFFER_ADDR_WIDTH-1:0] read_data_if_address,\n        output wire [CFG_DRAM_WLAT_GROUP-1:0] read_data_if_datavalid,\n        output wire read_data_if_done\n    );"}
{"task_id": 1867, "completion": "module mig_7series_v4_0_ddr_byte_group_io #(\n    parameter  BITLANES                      =  12'b1111_1111_1111,\n    parameter  BITLANES_OUTONLY              =  12'b0000_0000_0000,\n    parameter  PO_DATA_CTL                   = \"FALSE\",\n    parameter  OSERDES_DATA_RATE             = \"DDR\",\n    parameter  OSERDES_DATA_WIDTH            = 4,\n    parameter  IDELAYE2_IDELAY_TYPE          = \"VARIABLE\",\n    parameter  IDELAYE2_IDELAY_VALUE         = 00,\n    parameter  IODELAY_GRP                   = \"IODELAY_MIG\",\n    parameter  FPGA_SPEED_GRADE              = 1,\n    parameter  real TCK                      = 2500.0,\n    parameter  BUS_WIDTH                     = 12,\n    parameter  SYNTHESIS                     = \"FALSE\"\n   )(\n   input  [9:0]                    mem_dq_in,\n   output [BUS_WIDTH-1:0]          mem_dq_out,\n   output [BUS_WIDTH-1:0]          mem_dq_ts,\n   input                           mem_dqs_in,\n   output                          mem_dqs_out,\n   output                          mem_dqs_ts,\n   output [(4*10)-1:0]             iserdes_dout,\n   output                          dqs_to_phaser,\n   input                           iserdes_clk,\n   input                           iserdes_clkb,\n   input                           iserdes_clkdiv,\n   input                           phy_clk,\n   input                           rst,\n   input                           oserdes_rst,\n   input                           iserdes_rst,\n   input [1:0]                     oserdes_dqs,\n   input [1:0]                     oserdes_dqsts,\n   input [(4*BUS_WIDTH)-1:0]       oserdes_dq,\n   input [1:0]                     oserdes_dqts,\n   input                           oserdes_clk,\n   input                           oserdes_clk_delayed,\n   input                           oserdes_clkdiv,\n   input                           idelay_inc,\n   input                           idelay_ce,\n   input                           idelay_ld,\n   input                           idelayctrl_refclk,\n   input [29:0]                    fine_delay ,\n   input                           fine_delay_sel\n   );"}
{"task_id": 1718, "completion": "module mbus_node(\n    input  CLKIN,\n    input  RESETn,\n    input  DIN,\n    output reg CLKOUT,\n    output reg DOUT,\n    input  [ `ADDR_WIDTH-1:0] TX_ADDR,\n    input  [ `DATA_WIDTH-1:0] TX_DATA, \n    input  TX_PEND,\n    input  TX_REQ,\n    output reg TX_ACK,\n    input  TX_PRIORITY,\n    output reg [ `ADDR_WIDTH-1:0] RX_ADDR,\n    output reg [ `DATA_WIDTH-1:0] RX_DATA,\n    output reg RX_PEND,\n    output reg RX_REQ,\n    input  RX_ACK,\n    output RX_BROADCAST,\n    output reg RX_FAIL,\n    output reg TX_FAIL,\n    output reg TX_SUCC,\n    input  TX_RESP_ACK,\n    `ifdef POWER_GATING\n    input  MBC_RESET,\n    output reg LRC_SLEEP,\n    output reg LRC_CLKENB,\n    output reg LRC_RESET,\n    output reg LRC_ISOLATE,\n    output reg SLEEP_REQUEST_TO_SLEEP_CTRL,\n    input  EXTERNAL_INT,\n    output reg CLR_EXT_INT,\n    output reg CLR_BUSY,\n    `endif\n    input [ `DYNA_WIDTH-1:0] ASSIGNED_ADDR_IN,\n    output [ `DYNA_WIDTH-1:0] ASSIGNED_ADDR_OUT,\n    input ASSIGNED_ADDR_VALID,\n    output reg ASSIGNED_ADDR_WRITE,\n    output reg ASSIGNED_ADDR_INVALIDn\n);"}
{"task_id": 1947, "completion": "module gpu_interface (input clk, input rst, input inflight_wg_buffer_gpu_valid, input [WAVE_ITEM_WIDTH-1:0] inflight_wg_buffer_gpu_wf_size, input [MEM_ADDR_WIDTH-1:0] inflight_wg_buffer_start_pc, input [VGPR_ID_WIDTH :0] inflight_wg_buffer_gpu_vgpr_size_per_wf, input [SGPR_ID_WIDTH :0] inflight_wg_buffer_gpu_sgpr_size_per_wf, input [WG_ID_WIDTH-1:0] allocator_wg_id_out, input [CU_ID_WIDTH-1 :0] allocator_cu_id_out, input [WF_COUNT_WIDTH-1:0] allocator_wf_count, input [VGPR_ID_WIDTH-1 :0] allocator_vgpr_start_out, input [SGPR_ID_WIDTH-1 :0] allocator_sgpr_start_out, input [LDS_ID_WIDTH-1 :0] allocator_lds_start_out, input [GDS_ID_WIDTH-1 :0] allocator_gds_start_out, input dis_controller_wg_alloc_valid, input dis_controller_wg_dealloc_valid, input [NUMBER_CU-1:0] cu2dispatch_wf_done, input [NUMBER_CU*TAG_WIDTH-1:0] cu2dispatch_wf_tag_done, output gpu_interface_alloc_available, output gpu_interface_dealloc_available, output [CU_ID_WIDTH-1:0] gpu_interface_cu_id, output [WG_ID_WIDTH-1:0] gpu_interface_dealloc_wg_id, output [NUMBER_CU-1:0] dispatch2cu_wf_dispatch, output [WF_COUNT_WIDTH-1:0] dispatch2cu_wg_wf_count, output [WAVE_ITEM_WIDTH-1:0] dispatch2cu_wf_size_dispatch, output [CU_SGPR_ID_WIDTH-1:0] dispatch2cu_sgpr_base_dispatch, output [CU_VGPR_ID_WIDTH-1:0] dispatch2cu_vgpr_base_dispatch, output [TAG_WIDTH-1:0] dispatch2cu_wf_tag_dispatch, output [CU_LDS_ID_WIDTH-1:0] dispatch2cu_lds_base_dispatch, output [MEM_ADDR_WIDTH-1:0] dispatch2cu_start_pc_dispatch);"}
{"task_id": 60, "completion": "module altera_avalon_sc_fifo #(\n    parameter SYMBOLS_PER_BEAT  = 1,\n    parameter BITS_PER_SYMBOL   = 8,\n    parameter FIFO_DEPTH        = 16,\n    parameter CHANNEL_WIDTH     = 0,\n    parameter ERROR_WIDTH       = 0,\n    parameter USE_PACKETS       = 0,\n    parameter USE_FILL_LEVEL    = 0,\n    parameter USE_STORE_FORWARD = 0,\n    parameter USE_ALMOST_FULL_IF = 0,\n    parameter USE_ALMOST_EMPTY_IF = 0,\n    parameter EMPTY_LATENCY     = 3,\n    parameter USE_MEMORY_BLOCKS = 1,\n    parameter DATA_WIDTH  = SYMBOLS_PER_BEAT * BITS_PER_SYMBOL,\n    parameter EMPTY_WIDTH = log2ceil(SYMBOLS_PER_BEAT)\n)(\n    input                       clk,\n    input                       reset,\n    input [DATA_WIDTH-1: 0]     in_data,\n    input                       in_valid,\n    input                       in_startofpacket,\n    input                       in_endofpacket,\n    input [((EMPTY_WIDTH>0) ? (EMPTY_WIDTH-1):0) : 0]     in_empty,\n    input [((ERROR_WIDTH>0) ? (ERROR_WIDTH-1):0) : 0]     in_error,\n    input [((CHANNEL_WIDTH>0) ? (CHANNEL_WIDTH-1):0): 0]  in_channel,\n    output                      in_ready,\n    output [DATA_WIDTH-1 : 0]   out_data,\n    output reg                  out_valid,\n    output                      out_startofpacket,\n    output                      out_endofpacket,\n    output [((EMPTY_WIDTH>0) ? (EMPTY_WIDTH-1):0) : 0]    out_empty,\n    output [((ERROR_WIDTH>0) ? (ERROR_WIDTH-1):0) : 0]    out_error,\n    output [((CHANNEL_WIDTH>0) ? (CHANNEL_WIDTH-1):0): 0] out_channel,\n    input                       out_ready,\n    input [(USE_STORE_FORWARD ? 2 : 1) : 0]   csr_address,\n    input                       csr_write,\n    input                       csr_read,\n    input [31 : 0]              csr_writedata,\n    output reg [31 : 0]         csr_readdata,\n    output  wire                almost_full_data,\n    output  wire                almost_empty_data\n);"}
{"task_id": 1651, "completion": "module txfifo_512x72_to_36(\n  input rst,\n  input wr_clk,\n  input rd_clk,\n  input [71 : 0] din,\n  input wr_en,\n  input rd_en,\n  output [35 : 0] dout,\n  output full,\n  output almost_full,\n  output empty\n);"}
{"task_id": 1988, "completion": "module convolve_kernel_control_s_axi\n#(parameter\n    C_S_AXI_ADDR_WIDTH = 4,\n    C_S_AXI_DATA_WIDTH = 32\n)(\n    input  wire                          ACLK,\n    input  wire                          ARESET,\n    input  wire                          ACLK_EN,\n    input  wire [C_S_AXI_ADDR_WIDTH-1:0] AWADDR,\n    input  wire                          AWVALID,\n    output wire                          AWREADY,\n    input  wire [C_S_AXI_DATA_WIDTH-1:0] WDATA,\n    input  wire [C_S_AXI_DATA_WIDTH/8-1:0] WSTRB,\n    input  wire                          WVALID,\n    output wire                          WREADY,\n    output wire [1:0]                    BRESP,\n    output wire                          BVALID,\n    input  wire                          BREADY,\n    input  wire [C_S_AXI_ADDR_WIDTH-1:0] ARADDR,\n    input  wire                          ARVALID,\n    output wire                          ARREADY,\n    output wire [C_S_AXI_DATA_WIDTH-1:0] RDATA,\n    output wire [1:0]                    RRESP,\n    output wire                          RVALID,\n    input  wire                          RREADY,\n    output wire                          interrupt,\n    output wire                          ap_start,\n    input  wire                          ap_done,\n    input  wire                          ap_ready,\n    input  wire                          ap_idle\n);"}
{"task_id": 1778, "completion": "module logic_mapper();"}
{"task_id": 1984, "completion": "module mig_7series_v4_0_rank_common #(\n   parameter TCQ = 100,\n   parameter DRAM_TYPE = \"DDR3\",\n   parameter MAINT_PRESCALER_DIV = 40,\n   parameter nBANK_MACHS = 4,\n   parameter nCKESR = 4,\n   parameter nCK_PER_CLK = 2,\n   parameter PERIODIC_RD_TIMER_DIV = 20,\n   parameter RANK_WIDTH = 2,\n   parameter RANKS = 4,\n   parameter REFRESH_TIMER_DIV = 39,\n   parameter ZQ_TIMER_DIV = 640000\n)(\n  input clk,\n  input rst,\n  input init_calib_complete,\n  input app_ref_req,\n  input app_zq_req,\n  input app_sr_req,\n  input insert_maint_r1,\n  input [RANKS-1:0] refresh_request,\n  input maint_wip_r,\n  input [7:0] slot_0_present,\n  input [7:0] slot_1_present,\n  input [RANKS-1:0] periodic_rd_request,\n  input periodic_rd_ack_r,\n  output wire maint_prescaler_tick_r,\n  output wire refresh_tick,\n  output wire maint_zq_r,\n  output wire maint_sre_r,\n  output wire maint_srx_r,\n  output wire maint_req_r,\n  output wire [RANK_WIDTH-1:0] maint_rank_r,\n  output wire [RANKS-1:0] clear_periodic_rd_request,\n  output wire periodic_rd_r,\n  output wire [RANK_WIDTH-1:0] periodic_rd_rank_r,\n  output wire app_ref_ack,\n  output wire app_zq_ack,\n  output wire app_sr_active,\n  output wire maint_ref_zq_wip\n);"}
{"task_id": 1942, "completion": "module d_BCH_KES_top(\n\tinput  wire \t\t\ti_clk,\n\tinput  wire \t\t\ti_RESET,\n\tinput  wire \t\t\ti_stop_dec,\n    input  wire [3:0] \ti_channel_sel,\n\tinput  wire \t\t\ti_execute_kes,\n    input  wire \t\t\ti_data_fowarding,\n\tinput  wire \t\t\ti_buf_available,\n\tinput  wire \t\t\ti_chunk_number,\n\tinput  wire \t\t\ti_buf_sequence_end,\n\toutput reg \t\t\to_kes_sequence_end,\n\toutput wire \t\t\to_kes_fail,\n\toutput wire \t\t\to_kes_available,\n\toutput reg  [3:0] \to_channel_sel,\n\toutput reg \t\t\to_chunk_number,\n\toutput reg \t\t\to_buf_sequence_end,\n\toutput reg \t\t\to_error_count,\n\tinput wire [63:0] \ti_syndromes,\n    output wire [31:0] \to_v_2i_000,\n    output wire [31:0] \to_v_2i_001,\n    output wire [31:0] \to_v_2i_002,\n    output wire [31:0] \to_v_2i_003,\n    output wire [31:0] \to_v_2i_004,\n    output wire [31:0] \to_v_2i_005,\n    output wire [31:0] \to_v_2i_006,\n    output wire [31:0] \to_v_2i_007,\n    output wire [31:0] \to_v_2i_008,\n    output wire [31:0] \to_v_2i_009,\n    output wire [31:0] \to_v_2i_010,\n    output wire [31:0] \to_v_2i_011,\n    output wire [31:0] \to_v_2i_012,\n    output wire [31:0] \to_v_2i_013,\n    output wire [31:0] \to_v_2i_014\n);"}
